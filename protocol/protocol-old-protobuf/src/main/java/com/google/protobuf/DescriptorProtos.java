// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/protobuf/descriptor.proto

package com.google.protobuf;

public final class DescriptorProtos {
  private DescriptorProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface FileDescriptorSetOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.protobuf.FileDescriptorSet)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>repeated .google.protobuf.FileDescriptorProto file = 1;</code>
     */
    java.util.List<com.google.protobuf.DescriptorProtos.FileDescriptorProto>
        getFileList();
    /**
     * <code>repeated .google.protobuf.FileDescriptorProto file = 1;</code>
     */
    com.google.protobuf.DescriptorProtos.FileDescriptorProto getFile(int index);
    /**
     * <code>repeated .google.protobuf.FileDescriptorProto file = 1;</code>
     */
    int getFileCount();
  }
  /**
   * <pre>
   * The protocol compiler can output a FileDescriptorSet containing the .proto
   * files it parses.
   * </pre>
   *
   * Protobuf type {@code google.protobuf.FileDescriptorSet}
   */
  public  static final class FileDescriptorSet extends
      com.google.protobuf.GeneratedMessageLite<
          FileDescriptorSet, FileDescriptorSet.Builder> implements
      // @@protoc_insertion_point(message_implements:google.protobuf.FileDescriptorSet)
      FileDescriptorSetOrBuilder {
    private FileDescriptorSet() {
      file_ = emptyProtobufList();
    }
    public static final int FILE_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.ProtobufList<com.google.protobuf.DescriptorProtos.FileDescriptorProto> file_;
    /**
     * <code>repeated .google.protobuf.FileDescriptorProto file = 1;</code>
     */
    public java.util.List<com.google.protobuf.DescriptorProtos.FileDescriptorProto> getFileList() {
      return file_;
    }
    /**
     * <code>repeated .google.protobuf.FileDescriptorProto file = 1;</code>
     */
    public java.util.List<? extends com.google.protobuf.DescriptorProtos.FileDescriptorProtoOrBuilder>
        getFileOrBuilderList() {
      return file_;
    }
    /**
     * <code>repeated .google.protobuf.FileDescriptorProto file = 1;</code>
     */
    public int getFileCount() {
      return file_.size();
    }
    /**
     * <code>repeated .google.protobuf.FileDescriptorProto file = 1;</code>
     */
    public com.google.protobuf.DescriptorProtos.FileDescriptorProto getFile(int index) {
      return file_.get(index);
    }
    /**
     * <code>repeated .google.protobuf.FileDescriptorProto file = 1;</code>
     */
    public com.google.protobuf.DescriptorProtos.FileDescriptorProtoOrBuilder getFileOrBuilder(
        int index) {
      return file_.get(index);
    }
    private void ensureFileIsMutable() {
      if (!file_.isModifiable()) {
        file_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(file_);
       }
    }

    /**
     * <code>repeated .google.protobuf.FileDescriptorProto file = 1;</code>
     */
    private void setFile(
        int index, com.google.protobuf.DescriptorProtos.FileDescriptorProto value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureFileIsMutable();
      file_.set(index, value);
    }
    /**
     * <code>repeated .google.protobuf.FileDescriptorProto file = 1;</code>
     */
    private void setFile(
        int index, com.google.protobuf.DescriptorProtos.FileDescriptorProto.Builder builderForValue) {
      ensureFileIsMutable();
      file_.set(index, builderForValue.build());
    }
    /**
     * <code>repeated .google.protobuf.FileDescriptorProto file = 1;</code>
     */
    private void addFile(com.google.protobuf.DescriptorProtos.FileDescriptorProto value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureFileIsMutable();
      file_.add(value);
    }
    /**
     * <code>repeated .google.protobuf.FileDescriptorProto file = 1;</code>
     */
    private void addFile(
        int index, com.google.protobuf.DescriptorProtos.FileDescriptorProto value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureFileIsMutable();
      file_.add(index, value);
    }
    /**
     * <code>repeated .google.protobuf.FileDescriptorProto file = 1;</code>
     */
    private void addFile(
        com.google.protobuf.DescriptorProtos.FileDescriptorProto.Builder builderForValue) {
      ensureFileIsMutable();
      file_.add(builderForValue.build());
    }
    /**
     * <code>repeated .google.protobuf.FileDescriptorProto file = 1;</code>
     */
    private void addFile(
        int index, com.google.protobuf.DescriptorProtos.FileDescriptorProto.Builder builderForValue) {
      ensureFileIsMutable();
      file_.add(index, builderForValue.build());
    }
    /**
     * <code>repeated .google.protobuf.FileDescriptorProto file = 1;</code>
     */
    private void addAllFile(
        java.lang.Iterable<? extends com.google.protobuf.DescriptorProtos.FileDescriptorProto> values) {
      ensureFileIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, file_);
    }
    /**
     * <code>repeated .google.protobuf.FileDescriptorProto file = 1;</code>
     */
    private void clearFile() {
      file_ = emptyProtobufList();
    }
    /**
     * <code>repeated .google.protobuf.FileDescriptorProto file = 1;</code>
     */
    private void removeFile(int index) {
      ensureFileIsMutable();
      file_.remove(index);
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < file_.size(); i++) {
        output.writeMessage(1, file_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < file_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, file_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.google.protobuf.DescriptorProtos.FileDescriptorSet parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.google.protobuf.DescriptorProtos.FileDescriptorSet parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.google.protobuf.DescriptorProtos.FileDescriptorSet parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.google.protobuf.DescriptorProtos.FileDescriptorSet parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.google.protobuf.DescriptorProtos.FileDescriptorSet parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.google.protobuf.DescriptorProtos.FileDescriptorSet parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.google.protobuf.DescriptorProtos.FileDescriptorSet parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.google.protobuf.DescriptorProtos.FileDescriptorSet parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.google.protobuf.DescriptorProtos.FileDescriptorSet parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.google.protobuf.DescriptorProtos.FileDescriptorSet parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.protobuf.DescriptorProtos.FileDescriptorSet prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * The protocol compiler can output a FileDescriptorSet containing the .proto
     * files it parses.
     * </pre>
     *
     * Protobuf type {@code google.protobuf.FileDescriptorSet}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.google.protobuf.DescriptorProtos.FileDescriptorSet, Builder> implements
        // @@protoc_insertion_point(builder_implements:google.protobuf.FileDescriptorSet)
        com.google.protobuf.DescriptorProtos.FileDescriptorSetOrBuilder {
      // Construct using com.google.protobuf.DescriptorProtos.FileDescriptorSet.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>repeated .google.protobuf.FileDescriptorProto file = 1;</code>
       */
      public java.util.List<com.google.protobuf.DescriptorProtos.FileDescriptorProto> getFileList() {
        return java.util.Collections.unmodifiableList(
            instance.getFileList());
      }
      /**
       * <code>repeated .google.protobuf.FileDescriptorProto file = 1;</code>
       */
      public int getFileCount() {
        return instance.getFileCount();
      }/**
       * <code>repeated .google.protobuf.FileDescriptorProto file = 1;</code>
       */
      public com.google.protobuf.DescriptorProtos.FileDescriptorProto getFile(int index) {
        return instance.getFile(index);
      }
      /**
       * <code>repeated .google.protobuf.FileDescriptorProto file = 1;</code>
       */
      public Builder setFile(
          int index, com.google.protobuf.DescriptorProtos.FileDescriptorProto value) {
        copyOnWrite();
        instance.setFile(index, value);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.FileDescriptorProto file = 1;</code>
       */
      public Builder setFile(
          int index, com.google.protobuf.DescriptorProtos.FileDescriptorProto.Builder builderForValue) {
        copyOnWrite();
        instance.setFile(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.FileDescriptorProto file = 1;</code>
       */
      public Builder addFile(com.google.protobuf.DescriptorProtos.FileDescriptorProto value) {
        copyOnWrite();
        instance.addFile(value);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.FileDescriptorProto file = 1;</code>
       */
      public Builder addFile(
          int index, com.google.protobuf.DescriptorProtos.FileDescriptorProto value) {
        copyOnWrite();
        instance.addFile(index, value);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.FileDescriptorProto file = 1;</code>
       */
      public Builder addFile(
          com.google.protobuf.DescriptorProtos.FileDescriptorProto.Builder builderForValue) {
        copyOnWrite();
        instance.addFile(builderForValue);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.FileDescriptorProto file = 1;</code>
       */
      public Builder addFile(
          int index, com.google.protobuf.DescriptorProtos.FileDescriptorProto.Builder builderForValue) {
        copyOnWrite();
        instance.addFile(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.FileDescriptorProto file = 1;</code>
       */
      public Builder addAllFile(
          java.lang.Iterable<? extends com.google.protobuf.DescriptorProtos.FileDescriptorProto> values) {
        copyOnWrite();
        instance.addAllFile(values);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.FileDescriptorProto file = 1;</code>
       */
      public Builder clearFile() {
        copyOnWrite();
        instance.clearFile();
        return this;
      }
      /**
       * <code>repeated .google.protobuf.FileDescriptorProto file = 1;</code>
       */
      public Builder removeFile(int index) {
        copyOnWrite();
        instance.removeFile(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:google.protobuf.FileDescriptorSet)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.google.protobuf.DescriptorProtos.FileDescriptorSet();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          for (int i = 0; i < getFileCount(); i++) {
            if (!getFile(i).isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          file_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.google.protobuf.DescriptorProtos.FileDescriptorSet other = (com.google.protobuf.DescriptorProtos.FileDescriptorSet) arg1;
          file_= visitor.visitList(file_, other.file_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  if (!file_.isModifiable()) {
                    file_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(file_);
                  }
                  file_.add(
                      input.readMessage(com.google.protobuf.DescriptorProtos.FileDescriptorProto.parser(), extensionRegistry));
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.google.protobuf.DescriptorProtos.FileDescriptorSet.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:google.protobuf.FileDescriptorSet)
    private static final com.google.protobuf.DescriptorProtos.FileDescriptorSet DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new FileDescriptorSet();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.google.protobuf.DescriptorProtos.FileDescriptorSet getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<FileDescriptorSet> PARSER;

    public static com.google.protobuf.Parser<FileDescriptorSet> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface FileDescriptorProtoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.protobuf.FileDescriptorProto)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * file name, relative to root of source tree
     * </pre>
     *
     * <code>optional string name = 1;</code>
     */
    boolean hasName();
    /**
     * <pre>
     * file name, relative to root of source tree
     * </pre>
     *
     * <code>optional string name = 1;</code>
     */
    java.lang.String getName();
    /**
     * <pre>
     * file name, relative to root of source tree
     * </pre>
     *
     * <code>optional string name = 1;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * e.g. "foo", "foo.bar", etc.
     * </pre>
     *
     * <code>optional string package = 2;</code>
     */
    boolean hasPackage();
    /**
     * <pre>
     * e.g. "foo", "foo.bar", etc.
     * </pre>
     *
     * <code>optional string package = 2;</code>
     */
    java.lang.String getPackage();
    /**
     * <pre>
     * e.g. "foo", "foo.bar", etc.
     * </pre>
     *
     * <code>optional string package = 2;</code>
     */
    com.google.protobuf.ByteString
        getPackageBytes();

    /**
     * <pre>
     * Names of files imported by this file.
     * </pre>
     *
     * <code>repeated string dependency = 3;</code>
     */
    java.util.List<String>
        getDependencyList();
    /**
     * <pre>
     * Names of files imported by this file.
     * </pre>
     *
     * <code>repeated string dependency = 3;</code>
     */
    int getDependencyCount();
    /**
     * <pre>
     * Names of files imported by this file.
     * </pre>
     *
     * <code>repeated string dependency = 3;</code>
     */
    java.lang.String getDependency(int index);
    /**
     * <pre>
     * Names of files imported by this file.
     * </pre>
     *
     * <code>repeated string dependency = 3;</code>
     */
    com.google.protobuf.ByteString
        getDependencyBytes(int index);

    /**
     * <pre>
     * Indexes of the public imported files in the dependency list above.
     * </pre>
     *
     * <code>repeated int32 public_dependency = 10;</code>
     */
    java.util.List<java.lang.Integer> getPublicDependencyList();
    /**
     * <pre>
     * Indexes of the public imported files in the dependency list above.
     * </pre>
     *
     * <code>repeated int32 public_dependency = 10;</code>
     */
    int getPublicDependencyCount();
    /**
     * <pre>
     * Indexes of the public imported files in the dependency list above.
     * </pre>
     *
     * <code>repeated int32 public_dependency = 10;</code>
     */
    int getPublicDependency(int index);

    /**
     * <pre>
     * Indexes of the weak imported files in the dependency list.
     * For Google-internal migration only. Do not use.
     * </pre>
     *
     * <code>repeated int32 weak_dependency = 11;</code>
     */
    java.util.List<java.lang.Integer> getWeakDependencyList();
    /**
     * <pre>
     * Indexes of the weak imported files in the dependency list.
     * For Google-internal migration only. Do not use.
     * </pre>
     *
     * <code>repeated int32 weak_dependency = 11;</code>
     */
    int getWeakDependencyCount();
    /**
     * <pre>
     * Indexes of the weak imported files in the dependency list.
     * For Google-internal migration only. Do not use.
     * </pre>
     *
     * <code>repeated int32 weak_dependency = 11;</code>
     */
    int getWeakDependency(int index);

    /**
     * <pre>
     * All top-level definitions in this file.
     * </pre>
     *
     * <code>repeated .google.protobuf.DescriptorProto message_type = 4;</code>
     */
    java.util.List<com.google.protobuf.DescriptorProtos.DescriptorProto>
        getMessageTypeList();
    /**
     * <pre>
     * All top-level definitions in this file.
     * </pre>
     *
     * <code>repeated .google.protobuf.DescriptorProto message_type = 4;</code>
     */
    com.google.protobuf.DescriptorProtos.DescriptorProto getMessageType(int index);
    /**
     * <pre>
     * All top-level definitions in this file.
     * </pre>
     *
     * <code>repeated .google.protobuf.DescriptorProto message_type = 4;</code>
     */
    int getMessageTypeCount();

    /**
     * <code>repeated .google.protobuf.EnumDescriptorProto enum_type = 5;</code>
     */
    java.util.List<com.google.protobuf.DescriptorProtos.EnumDescriptorProto>
        getEnumTypeList();
    /**
     * <code>repeated .google.protobuf.EnumDescriptorProto enum_type = 5;</code>
     */
    com.google.protobuf.DescriptorProtos.EnumDescriptorProto getEnumType(int index);
    /**
     * <code>repeated .google.protobuf.EnumDescriptorProto enum_type = 5;</code>
     */
    int getEnumTypeCount();

    /**
     * <code>repeated .google.protobuf.ServiceDescriptorProto service = 6;</code>
     */
    java.util.List<com.google.protobuf.DescriptorProtos.ServiceDescriptorProto>
        getServiceList();
    /**
     * <code>repeated .google.protobuf.ServiceDescriptorProto service = 6;</code>
     */
    com.google.protobuf.DescriptorProtos.ServiceDescriptorProto getService(int index);
    /**
     * <code>repeated .google.protobuf.ServiceDescriptorProto service = 6;</code>
     */
    int getServiceCount();

    /**
     * <code>repeated .google.protobuf.FieldDescriptorProto extension = 7;</code>
     */
    java.util.List<com.google.protobuf.DescriptorProtos.FieldDescriptorProto>
        getExtensionList();
    /**
     * <code>repeated .google.protobuf.FieldDescriptorProto extension = 7;</code>
     */
    com.google.protobuf.DescriptorProtos.FieldDescriptorProto getExtension(int index);
    /**
     * <code>repeated .google.protobuf.FieldDescriptorProto extension = 7;</code>
     */
    int getExtensionCount();

    /**
     * <code>optional .google.protobuf.FileOptions options = 8;</code>
     */
    boolean hasOptions();
    /**
     * <code>optional .google.protobuf.FileOptions options = 8;</code>
     */
    com.google.protobuf.DescriptorProtos.FileOptions getOptions();

    /**
     * <pre>
     * This field contains optional information about the original source code.
     * You may safely remove this entire field without harming runtime
     * functionality of the descriptors -- the information is needed only by
     * development tools.
     * </pre>
     *
     * <code>optional .google.protobuf.SourceCodeInfo source_code_info = 9;</code>
     */
    boolean hasSourceCodeInfo();
    /**
     * <pre>
     * This field contains optional information about the original source code.
     * You may safely remove this entire field without harming runtime
     * functionality of the descriptors -- the information is needed only by
     * development tools.
     * </pre>
     *
     * <code>optional .google.protobuf.SourceCodeInfo source_code_info = 9;</code>
     */
    com.google.protobuf.DescriptorProtos.SourceCodeInfo getSourceCodeInfo();

    /**
     * <pre>
     * The syntax of the proto file.
     * The supported values are "proto2" and "proto3".
     * </pre>
     *
     * <code>optional string syntax = 12;</code>
     */
    boolean hasSyntax();
    /**
     * <pre>
     * The syntax of the proto file.
     * The supported values are "proto2" and "proto3".
     * </pre>
     *
     * <code>optional string syntax = 12;</code>
     */
    java.lang.String getSyntax();
    /**
     * <pre>
     * The syntax of the proto file.
     * The supported values are "proto2" and "proto3".
     * </pre>
     *
     * <code>optional string syntax = 12;</code>
     */
    com.google.protobuf.ByteString
        getSyntaxBytes();
  }
  /**
   * <pre>
   * Describes a complete .proto file.
   * </pre>
   *
   * Protobuf type {@code google.protobuf.FileDescriptorProto}
   */
  public  static final class FileDescriptorProto extends
      com.google.protobuf.GeneratedMessageLite<
          FileDescriptorProto, FileDescriptorProto.Builder> implements
      // @@protoc_insertion_point(message_implements:google.protobuf.FileDescriptorProto)
      FileDescriptorProtoOrBuilder {
    private FileDescriptorProto() {
      name_ = "";
      package_ = "";
      dependency_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
      publicDependency_ = emptyIntList();
      weakDependency_ = emptyIntList();
      messageType_ = emptyProtobufList();
      enumType_ = emptyProtobufList();
      service_ = emptyProtobufList();
      extension_ = emptyProtobufList();
      syntax_ = "";
    }
    private int bitField0_;
    public static final int NAME_FIELD_NUMBER = 1;
    private java.lang.String name_;
    /**
     * <pre>
     * file name, relative to root of source tree
     * </pre>
     *
     * <code>optional string name = 1;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * file name, relative to root of source tree
     * </pre>
     *
     * <code>optional string name = 1;</code>
     */
    public java.lang.String getName() {
      return name_;
    }
    /**
     * <pre>
     * file name, relative to root of source tree
     * </pre>
     *
     * <code>optional string name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(name_);
    }
    /**
     * <pre>
     * file name, relative to root of source tree
     * </pre>
     *
     * <code>optional string name = 1;</code>
     */
    private void setName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      name_ = value;
    }
    /**
     * <pre>
     * file name, relative to root of source tree
     * </pre>
     *
     * <code>optional string name = 1;</code>
     */
    private void clearName() {
      bitField0_ = (bitField0_ & ~0x00000001);
      name_ = getDefaultInstance().getName();
    }
    /**
     * <pre>
     * file name, relative to root of source tree
     * </pre>
     *
     * <code>optional string name = 1;</code>
     */
    private void setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      name_ = value.toStringUtf8();
    }

    public static final int PACKAGE_FIELD_NUMBER = 2;
    private java.lang.String package_;
    /**
     * <pre>
     * e.g. "foo", "foo.bar", etc.
     * </pre>
     *
     * <code>optional string package = 2;</code>
     */
    public boolean hasPackage() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * e.g. "foo", "foo.bar", etc.
     * </pre>
     *
     * <code>optional string package = 2;</code>
     */
    public java.lang.String getPackage() {
      return package_;
    }
    /**
     * <pre>
     * e.g. "foo", "foo.bar", etc.
     * </pre>
     *
     * <code>optional string package = 2;</code>
     */
    public com.google.protobuf.ByteString
        getPackageBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(package_);
    }
    /**
     * <pre>
     * e.g. "foo", "foo.bar", etc.
     * </pre>
     *
     * <code>optional string package = 2;</code>
     */
    private void setPackage(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      package_ = value;
    }
    /**
     * <pre>
     * e.g. "foo", "foo.bar", etc.
     * </pre>
     *
     * <code>optional string package = 2;</code>
     */
    private void clearPackage() {
      bitField0_ = (bitField0_ & ~0x00000002);
      package_ = getDefaultInstance().getPackage();
    }
    /**
     * <pre>
     * e.g. "foo", "foo.bar", etc.
     * </pre>
     *
     * <code>optional string package = 2;</code>
     */
    private void setPackageBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      package_ = value.toStringUtf8();
    }

    public static final int DEPENDENCY_FIELD_NUMBER = 3;
    private com.google.protobuf.Internal.ProtobufList<String> dependency_;
    /**
     * <pre>
     * Names of files imported by this file.
     * </pre>
     *
     * <code>repeated string dependency = 3;</code>
     */
    public java.util.List<String> getDependencyList() {
      return dependency_;
    }
    /**
     * <pre>
     * Names of files imported by this file.
     * </pre>
     *
     * <code>repeated string dependency = 3;</code>
     */
    public int getDependencyCount() {
      return dependency_.size();
    }
    /**
     * <pre>
     * Names of files imported by this file.
     * </pre>
     *
     * <code>repeated string dependency = 3;</code>
     */
    public java.lang.String getDependency(int index) {
      return dependency_.get(index);
    }
    /**
     * <pre>
     * Names of files imported by this file.
     * </pre>
     *
     * <code>repeated string dependency = 3;</code>
     */
    public com.google.protobuf.ByteString
        getDependencyBytes(int index) {
      return com.google.protobuf.ByteString.copyFromUtf8(
          dependency_.get(index));
    }
    private void ensureDependencyIsMutable() {
      if (!dependency_.isModifiable()) {
        dependency_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(dependency_);
       }
    }
    /**
     * <pre>
     * Names of files imported by this file.
     * </pre>
     *
     * <code>repeated string dependency = 3;</code>
     */
    private void setDependency(
        int index, java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureDependencyIsMutable();
      dependency_.set(index, value);
    }
    /**
     * <pre>
     * Names of files imported by this file.
     * </pre>
     *
     * <code>repeated string dependency = 3;</code>
     */
    private void addDependency(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureDependencyIsMutable();
      dependency_.add(value);
    }
    /**
     * <pre>
     * Names of files imported by this file.
     * </pre>
     *
     * <code>repeated string dependency = 3;</code>
     */
    private void addAllDependency(
        java.lang.Iterable<java.lang.String> values) {
      ensureDependencyIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, dependency_);
    }
    /**
     * <pre>
     * Names of files imported by this file.
     * </pre>
     *
     * <code>repeated string dependency = 3;</code>
     */
    private void clearDependency() {
      dependency_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
    }
    /**
     * <pre>
     * Names of files imported by this file.
     * </pre>
     *
     * <code>repeated string dependency = 3;</code>
     */
    private void addDependencyBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureDependencyIsMutable();
      dependency_.add(value.toStringUtf8());
    }

    public static final int PUBLIC_DEPENDENCY_FIELD_NUMBER = 10;
    private com.google.protobuf.Internal.IntList publicDependency_;
    /**
     * <pre>
     * Indexes of the public imported files in the dependency list above.
     * </pre>
     *
     * <code>repeated int32 public_dependency = 10;</code>
     */
    public java.util.List<java.lang.Integer>
        getPublicDependencyList() {
      return publicDependency_;
    }
    /**
     * <pre>
     * Indexes of the public imported files in the dependency list above.
     * </pre>
     *
     * <code>repeated int32 public_dependency = 10;</code>
     */
    public int getPublicDependencyCount() {
      return publicDependency_.size();
    }
    /**
     * <pre>
     * Indexes of the public imported files in the dependency list above.
     * </pre>
     *
     * <code>repeated int32 public_dependency = 10;</code>
     */
    public int getPublicDependency(int index) {
      return publicDependency_.getInt(index);
    }
    private void ensurePublicDependencyIsMutable() {
      if (!publicDependency_.isModifiable()) {
        publicDependency_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(publicDependency_);
       }
    }
    /**
     * <pre>
     * Indexes of the public imported files in the dependency list above.
     * </pre>
     *
     * <code>repeated int32 public_dependency = 10;</code>
     */
    private void setPublicDependency(
        int index, int value) {
      ensurePublicDependencyIsMutable();
      publicDependency_.setInt(index, value);
    }
    /**
     * <pre>
     * Indexes of the public imported files in the dependency list above.
     * </pre>
     *
     * <code>repeated int32 public_dependency = 10;</code>
     */
    private void addPublicDependency(int value) {
      ensurePublicDependencyIsMutable();
      publicDependency_.addInt(value);
    }
    /**
     * <pre>
     * Indexes of the public imported files in the dependency list above.
     * </pre>
     *
     * <code>repeated int32 public_dependency = 10;</code>
     */
    private void addAllPublicDependency(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensurePublicDependencyIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, publicDependency_);
    }
    /**
     * <pre>
     * Indexes of the public imported files in the dependency list above.
     * </pre>
     *
     * <code>repeated int32 public_dependency = 10;</code>
     */
    private void clearPublicDependency() {
      publicDependency_ = emptyIntList();
    }

    public static final int WEAK_DEPENDENCY_FIELD_NUMBER = 11;
    private com.google.protobuf.Internal.IntList weakDependency_;
    /**
     * <pre>
     * Indexes of the weak imported files in the dependency list.
     * For Google-internal migration only. Do not use.
     * </pre>
     *
     * <code>repeated int32 weak_dependency = 11;</code>
     */
    public java.util.List<java.lang.Integer>
        getWeakDependencyList() {
      return weakDependency_;
    }
    /**
     * <pre>
     * Indexes of the weak imported files in the dependency list.
     * For Google-internal migration only. Do not use.
     * </pre>
     *
     * <code>repeated int32 weak_dependency = 11;</code>
     */
    public int getWeakDependencyCount() {
      return weakDependency_.size();
    }
    /**
     * <pre>
     * Indexes of the weak imported files in the dependency list.
     * For Google-internal migration only. Do not use.
     * </pre>
     *
     * <code>repeated int32 weak_dependency = 11;</code>
     */
    public int getWeakDependency(int index) {
      return weakDependency_.getInt(index);
    }
    private void ensureWeakDependencyIsMutable() {
      if (!weakDependency_.isModifiable()) {
        weakDependency_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(weakDependency_);
       }
    }
    /**
     * <pre>
     * Indexes of the weak imported files in the dependency list.
     * For Google-internal migration only. Do not use.
     * </pre>
     *
     * <code>repeated int32 weak_dependency = 11;</code>
     */
    private void setWeakDependency(
        int index, int value) {
      ensureWeakDependencyIsMutable();
      weakDependency_.setInt(index, value);
    }
    /**
     * <pre>
     * Indexes of the weak imported files in the dependency list.
     * For Google-internal migration only. Do not use.
     * </pre>
     *
     * <code>repeated int32 weak_dependency = 11;</code>
     */
    private void addWeakDependency(int value) {
      ensureWeakDependencyIsMutable();
      weakDependency_.addInt(value);
    }
    /**
     * <pre>
     * Indexes of the weak imported files in the dependency list.
     * For Google-internal migration only. Do not use.
     * </pre>
     *
     * <code>repeated int32 weak_dependency = 11;</code>
     */
    private void addAllWeakDependency(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureWeakDependencyIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, weakDependency_);
    }
    /**
     * <pre>
     * Indexes of the weak imported files in the dependency list.
     * For Google-internal migration only. Do not use.
     * </pre>
     *
     * <code>repeated int32 weak_dependency = 11;</code>
     */
    private void clearWeakDependency() {
      weakDependency_ = emptyIntList();
    }

    public static final int MESSAGE_TYPE_FIELD_NUMBER = 4;
    private com.google.protobuf.Internal.ProtobufList<com.google.protobuf.DescriptorProtos.DescriptorProto> messageType_;
    /**
     * <pre>
     * All top-level definitions in this file.
     * </pre>
     *
     * <code>repeated .google.protobuf.DescriptorProto message_type = 4;</code>
     */
    public java.util.List<com.google.protobuf.DescriptorProtos.DescriptorProto> getMessageTypeList() {
      return messageType_;
    }
    /**
     * <pre>
     * All top-level definitions in this file.
     * </pre>
     *
     * <code>repeated .google.protobuf.DescriptorProto message_type = 4;</code>
     */
    public java.util.List<? extends com.google.protobuf.DescriptorProtos.DescriptorProtoOrBuilder>
        getMessageTypeOrBuilderList() {
      return messageType_;
    }
    /**
     * <pre>
     * All top-level definitions in this file.
     * </pre>
     *
     * <code>repeated .google.protobuf.DescriptorProto message_type = 4;</code>
     */
    public int getMessageTypeCount() {
      return messageType_.size();
    }
    /**
     * <pre>
     * All top-level definitions in this file.
     * </pre>
     *
     * <code>repeated .google.protobuf.DescriptorProto message_type = 4;</code>
     */
    public com.google.protobuf.DescriptorProtos.DescriptorProto getMessageType(int index) {
      return messageType_.get(index);
    }
    /**
     * <pre>
     * All top-level definitions in this file.
     * </pre>
     *
     * <code>repeated .google.protobuf.DescriptorProto message_type = 4;</code>
     */
    public com.google.protobuf.DescriptorProtos.DescriptorProtoOrBuilder getMessageTypeOrBuilder(
        int index) {
      return messageType_.get(index);
    }
    private void ensureMessageTypeIsMutable() {
      if (!messageType_.isModifiable()) {
        messageType_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(messageType_);
       }
    }

    /**
     * <pre>
     * All top-level definitions in this file.
     * </pre>
     *
     * <code>repeated .google.protobuf.DescriptorProto message_type = 4;</code>
     */
    private void setMessageType(
        int index, com.google.protobuf.DescriptorProtos.DescriptorProto value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureMessageTypeIsMutable();
      messageType_.set(index, value);
    }
    /**
     * <pre>
     * All top-level definitions in this file.
     * </pre>
     *
     * <code>repeated .google.protobuf.DescriptorProto message_type = 4;</code>
     */
    private void setMessageType(
        int index, com.google.protobuf.DescriptorProtos.DescriptorProto.Builder builderForValue) {
      ensureMessageTypeIsMutable();
      messageType_.set(index, builderForValue.build());
    }
    /**
     * <pre>
     * All top-level definitions in this file.
     * </pre>
     *
     * <code>repeated .google.protobuf.DescriptorProto message_type = 4;</code>
     */
    private void addMessageType(com.google.protobuf.DescriptorProtos.DescriptorProto value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureMessageTypeIsMutable();
      messageType_.add(value);
    }
    /**
     * <pre>
     * All top-level definitions in this file.
     * </pre>
     *
     * <code>repeated .google.protobuf.DescriptorProto message_type = 4;</code>
     */
    private void addMessageType(
        int index, com.google.protobuf.DescriptorProtos.DescriptorProto value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureMessageTypeIsMutable();
      messageType_.add(index, value);
    }
    /**
     * <pre>
     * All top-level definitions in this file.
     * </pre>
     *
     * <code>repeated .google.protobuf.DescriptorProto message_type = 4;</code>
     */
    private void addMessageType(
        com.google.protobuf.DescriptorProtos.DescriptorProto.Builder builderForValue) {
      ensureMessageTypeIsMutable();
      messageType_.add(builderForValue.build());
    }
    /**
     * <pre>
     * All top-level definitions in this file.
     * </pre>
     *
     * <code>repeated .google.protobuf.DescriptorProto message_type = 4;</code>
     */
    private void addMessageType(
        int index, com.google.protobuf.DescriptorProtos.DescriptorProto.Builder builderForValue) {
      ensureMessageTypeIsMutable();
      messageType_.add(index, builderForValue.build());
    }
    /**
     * <pre>
     * All top-level definitions in this file.
     * </pre>
     *
     * <code>repeated .google.protobuf.DescriptorProto message_type = 4;</code>
     */
    private void addAllMessageType(
        java.lang.Iterable<? extends com.google.protobuf.DescriptorProtos.DescriptorProto> values) {
      ensureMessageTypeIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, messageType_);
    }
    /**
     * <pre>
     * All top-level definitions in this file.
     * </pre>
     *
     * <code>repeated .google.protobuf.DescriptorProto message_type = 4;</code>
     */
    private void clearMessageType() {
      messageType_ = emptyProtobufList();
    }
    /**
     * <pre>
     * All top-level definitions in this file.
     * </pre>
     *
     * <code>repeated .google.protobuf.DescriptorProto message_type = 4;</code>
     */
    private void removeMessageType(int index) {
      ensureMessageTypeIsMutable();
      messageType_.remove(index);
    }

    public static final int ENUM_TYPE_FIELD_NUMBER = 5;
    private com.google.protobuf.Internal.ProtobufList<com.google.protobuf.DescriptorProtos.EnumDescriptorProto> enumType_;
    /**
     * <code>repeated .google.protobuf.EnumDescriptorProto enum_type = 5;</code>
     */
    public java.util.List<com.google.protobuf.DescriptorProtos.EnumDescriptorProto> getEnumTypeList() {
      return enumType_;
    }
    /**
     * <code>repeated .google.protobuf.EnumDescriptorProto enum_type = 5;</code>
     */
    public java.util.List<? extends com.google.protobuf.DescriptorProtos.EnumDescriptorProtoOrBuilder>
        getEnumTypeOrBuilderList() {
      return enumType_;
    }
    /**
     * <code>repeated .google.protobuf.EnumDescriptorProto enum_type = 5;</code>
     */
    public int getEnumTypeCount() {
      return enumType_.size();
    }
    /**
     * <code>repeated .google.protobuf.EnumDescriptorProto enum_type = 5;</code>
     */
    public com.google.protobuf.DescriptorProtos.EnumDescriptorProto getEnumType(int index) {
      return enumType_.get(index);
    }
    /**
     * <code>repeated .google.protobuf.EnumDescriptorProto enum_type = 5;</code>
     */
    public com.google.protobuf.DescriptorProtos.EnumDescriptorProtoOrBuilder getEnumTypeOrBuilder(
        int index) {
      return enumType_.get(index);
    }
    private void ensureEnumTypeIsMutable() {
      if (!enumType_.isModifiable()) {
        enumType_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(enumType_);
       }
    }

    /**
     * <code>repeated .google.protobuf.EnumDescriptorProto enum_type = 5;</code>
     */
    private void setEnumType(
        int index, com.google.protobuf.DescriptorProtos.EnumDescriptorProto value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureEnumTypeIsMutable();
      enumType_.set(index, value);
    }
    /**
     * <code>repeated .google.protobuf.EnumDescriptorProto enum_type = 5;</code>
     */
    private void setEnumType(
        int index, com.google.protobuf.DescriptorProtos.EnumDescriptorProto.Builder builderForValue) {
      ensureEnumTypeIsMutable();
      enumType_.set(index, builderForValue.build());
    }
    /**
     * <code>repeated .google.protobuf.EnumDescriptorProto enum_type = 5;</code>
     */
    private void addEnumType(com.google.protobuf.DescriptorProtos.EnumDescriptorProto value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureEnumTypeIsMutable();
      enumType_.add(value);
    }
    /**
     * <code>repeated .google.protobuf.EnumDescriptorProto enum_type = 5;</code>
     */
    private void addEnumType(
        int index, com.google.protobuf.DescriptorProtos.EnumDescriptorProto value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureEnumTypeIsMutable();
      enumType_.add(index, value);
    }
    /**
     * <code>repeated .google.protobuf.EnumDescriptorProto enum_type = 5;</code>
     */
    private void addEnumType(
        com.google.protobuf.DescriptorProtos.EnumDescriptorProto.Builder builderForValue) {
      ensureEnumTypeIsMutable();
      enumType_.add(builderForValue.build());
    }
    /**
     * <code>repeated .google.protobuf.EnumDescriptorProto enum_type = 5;</code>
     */
    private void addEnumType(
        int index, com.google.protobuf.DescriptorProtos.EnumDescriptorProto.Builder builderForValue) {
      ensureEnumTypeIsMutable();
      enumType_.add(index, builderForValue.build());
    }
    /**
     * <code>repeated .google.protobuf.EnumDescriptorProto enum_type = 5;</code>
     */
    private void addAllEnumType(
        java.lang.Iterable<? extends com.google.protobuf.DescriptorProtos.EnumDescriptorProto> values) {
      ensureEnumTypeIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, enumType_);
    }
    /**
     * <code>repeated .google.protobuf.EnumDescriptorProto enum_type = 5;</code>
     */
    private void clearEnumType() {
      enumType_ = emptyProtobufList();
    }
    /**
     * <code>repeated .google.protobuf.EnumDescriptorProto enum_type = 5;</code>
     */
    private void removeEnumType(int index) {
      ensureEnumTypeIsMutable();
      enumType_.remove(index);
    }

    public static final int SERVICE_FIELD_NUMBER = 6;
    private com.google.protobuf.Internal.ProtobufList<com.google.protobuf.DescriptorProtos.ServiceDescriptorProto> service_;
    /**
     * <code>repeated .google.protobuf.ServiceDescriptorProto service = 6;</code>
     */
    public java.util.List<com.google.protobuf.DescriptorProtos.ServiceDescriptorProto> getServiceList() {
      return service_;
    }
    /**
     * <code>repeated .google.protobuf.ServiceDescriptorProto service = 6;</code>
     */
    public java.util.List<? extends com.google.protobuf.DescriptorProtos.ServiceDescriptorProtoOrBuilder>
        getServiceOrBuilderList() {
      return service_;
    }
    /**
     * <code>repeated .google.protobuf.ServiceDescriptorProto service = 6;</code>
     */
    public int getServiceCount() {
      return service_.size();
    }
    /**
     * <code>repeated .google.protobuf.ServiceDescriptorProto service = 6;</code>
     */
    public com.google.protobuf.DescriptorProtos.ServiceDescriptorProto getService(int index) {
      return service_.get(index);
    }
    /**
     * <code>repeated .google.protobuf.ServiceDescriptorProto service = 6;</code>
     */
    public com.google.protobuf.DescriptorProtos.ServiceDescriptorProtoOrBuilder getServiceOrBuilder(
        int index) {
      return service_.get(index);
    }
    private void ensureServiceIsMutable() {
      if (!service_.isModifiable()) {
        service_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(service_);
       }
    }

    /**
     * <code>repeated .google.protobuf.ServiceDescriptorProto service = 6;</code>
     */
    private void setService(
        int index, com.google.protobuf.DescriptorProtos.ServiceDescriptorProto value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureServiceIsMutable();
      service_.set(index, value);
    }
    /**
     * <code>repeated .google.protobuf.ServiceDescriptorProto service = 6;</code>
     */
    private void setService(
        int index, com.google.protobuf.DescriptorProtos.ServiceDescriptorProto.Builder builderForValue) {
      ensureServiceIsMutable();
      service_.set(index, builderForValue.build());
    }
    /**
     * <code>repeated .google.protobuf.ServiceDescriptorProto service = 6;</code>
     */
    private void addService(com.google.protobuf.DescriptorProtos.ServiceDescriptorProto value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureServiceIsMutable();
      service_.add(value);
    }
    /**
     * <code>repeated .google.protobuf.ServiceDescriptorProto service = 6;</code>
     */
    private void addService(
        int index, com.google.protobuf.DescriptorProtos.ServiceDescriptorProto value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureServiceIsMutable();
      service_.add(index, value);
    }
    /**
     * <code>repeated .google.protobuf.ServiceDescriptorProto service = 6;</code>
     */
    private void addService(
        com.google.protobuf.DescriptorProtos.ServiceDescriptorProto.Builder builderForValue) {
      ensureServiceIsMutable();
      service_.add(builderForValue.build());
    }
    /**
     * <code>repeated .google.protobuf.ServiceDescriptorProto service = 6;</code>
     */
    private void addService(
        int index, com.google.protobuf.DescriptorProtos.ServiceDescriptorProto.Builder builderForValue) {
      ensureServiceIsMutable();
      service_.add(index, builderForValue.build());
    }
    /**
     * <code>repeated .google.protobuf.ServiceDescriptorProto service = 6;</code>
     */
    private void addAllService(
        java.lang.Iterable<? extends com.google.protobuf.DescriptorProtos.ServiceDescriptorProto> values) {
      ensureServiceIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, service_);
    }
    /**
     * <code>repeated .google.protobuf.ServiceDescriptorProto service = 6;</code>
     */
    private void clearService() {
      service_ = emptyProtobufList();
    }
    /**
     * <code>repeated .google.protobuf.ServiceDescriptorProto service = 6;</code>
     */
    private void removeService(int index) {
      ensureServiceIsMutable();
      service_.remove(index);
    }

    public static final int EXTENSION_FIELD_NUMBER = 7;
    private com.google.protobuf.Internal.ProtobufList<com.google.protobuf.DescriptorProtos.FieldDescriptorProto> extension_;
    /**
     * <code>repeated .google.protobuf.FieldDescriptorProto extension = 7;</code>
     */
    public java.util.List<com.google.protobuf.DescriptorProtos.FieldDescriptorProto> getExtensionList() {
      return extension_;
    }
    /**
     * <code>repeated .google.protobuf.FieldDescriptorProto extension = 7;</code>
     */
    public java.util.List<? extends com.google.protobuf.DescriptorProtos.FieldDescriptorProtoOrBuilder>
        getExtensionOrBuilderList() {
      return extension_;
    }
    /**
     * <code>repeated .google.protobuf.FieldDescriptorProto extension = 7;</code>
     */
    public int getExtensionCount() {
      return extension_.size();
    }
    /**
     * <code>repeated .google.protobuf.FieldDescriptorProto extension = 7;</code>
     */
    public com.google.protobuf.DescriptorProtos.FieldDescriptorProto getExtension(int index) {
      return extension_.get(index);
    }
    /**
     * <code>repeated .google.protobuf.FieldDescriptorProto extension = 7;</code>
     */
    public com.google.protobuf.DescriptorProtos.FieldDescriptorProtoOrBuilder getExtensionOrBuilder(
        int index) {
      return extension_.get(index);
    }
    private void ensureExtensionIsMutable() {
      if (!extension_.isModifiable()) {
        extension_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(extension_);
       }
    }

    /**
     * <code>repeated .google.protobuf.FieldDescriptorProto extension = 7;</code>
     */
    private void setExtension(
        int index, com.google.protobuf.DescriptorProtos.FieldDescriptorProto value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureExtensionIsMutable();
      extension_.set(index, value);
    }
    /**
     * <code>repeated .google.protobuf.FieldDescriptorProto extension = 7;</code>
     */
    private void setExtension(
        int index, com.google.protobuf.DescriptorProtos.FieldDescriptorProto.Builder builderForValue) {
      ensureExtensionIsMutable();
      extension_.set(index, builderForValue.build());
    }
    /**
     * <code>repeated .google.protobuf.FieldDescriptorProto extension = 7;</code>
     */
    private void addExtension(com.google.protobuf.DescriptorProtos.FieldDescriptorProto value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureExtensionIsMutable();
      extension_.add(value);
    }
    /**
     * <code>repeated .google.protobuf.FieldDescriptorProto extension = 7;</code>
     */
    private void addExtension(
        int index, com.google.protobuf.DescriptorProtos.FieldDescriptorProto value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureExtensionIsMutable();
      extension_.add(index, value);
    }
    /**
     * <code>repeated .google.protobuf.FieldDescriptorProto extension = 7;</code>
     */
    private void addExtension(
        com.google.protobuf.DescriptorProtos.FieldDescriptorProto.Builder builderForValue) {
      ensureExtensionIsMutable();
      extension_.add(builderForValue.build());
    }
    /**
     * <code>repeated .google.protobuf.FieldDescriptorProto extension = 7;</code>
     */
    private void addExtension(
        int index, com.google.protobuf.DescriptorProtos.FieldDescriptorProto.Builder builderForValue) {
      ensureExtensionIsMutable();
      extension_.add(index, builderForValue.build());
    }
    /**
     * <code>repeated .google.protobuf.FieldDescriptorProto extension = 7;</code>
     */
    private void addAllExtension(
        java.lang.Iterable<? extends com.google.protobuf.DescriptorProtos.FieldDescriptorProto> values) {
      ensureExtensionIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, extension_);
    }
    /**
     * <code>repeated .google.protobuf.FieldDescriptorProto extension = 7;</code>
     */
    private void clearExtension() {
      extension_ = emptyProtobufList();
    }
    /**
     * <code>repeated .google.protobuf.FieldDescriptorProto extension = 7;</code>
     */
    private void removeExtension(int index) {
      ensureExtensionIsMutable();
      extension_.remove(index);
    }

    public static final int OPTIONS_FIELD_NUMBER = 8;
    private com.google.protobuf.DescriptorProtos.FileOptions options_;
    /**
     * <code>optional .google.protobuf.FileOptions options = 8;</code>
     */
    public boolean hasOptions() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .google.protobuf.FileOptions options = 8;</code>
     */
    public com.google.protobuf.DescriptorProtos.FileOptions getOptions() {
      return options_ == null ? com.google.protobuf.DescriptorProtos.FileOptions.getDefaultInstance() : options_;
    }
    /**
     * <code>optional .google.protobuf.FileOptions options = 8;</code>
     */
    private void setOptions(com.google.protobuf.DescriptorProtos.FileOptions value) {
      if (value == null) {
        throw new NullPointerException();
      }
      options_ = value;
      bitField0_ |= 0x00000004;
      }
    /**
     * <code>optional .google.protobuf.FileOptions options = 8;</code>
     */
    private void setOptions(
        com.google.protobuf.DescriptorProtos.FileOptions.Builder builderForValue) {
      options_ = builderForValue.build();
      bitField0_ |= 0x00000004;
    }
    /**
     * <code>optional .google.protobuf.FileOptions options = 8;</code>
     */
    private void mergeOptions(com.google.protobuf.DescriptorProtos.FileOptions value) {
      if (options_ != null &&
          options_ != com.google.protobuf.DescriptorProtos.FileOptions.getDefaultInstance()) {
        options_ =
          com.google.protobuf.DescriptorProtos.FileOptions.newBuilder(options_).mergeFrom(value).buildPartial();
      } else {
        options_ = value;
      }
      bitField0_ |= 0x00000004;
    }
    /**
     * <code>optional .google.protobuf.FileOptions options = 8;</code>
     */
    private void clearOptions() {  options_ = null;
      bitField0_ = (bitField0_ & ~0x00000004);
    }

    public static final int SOURCE_CODE_INFO_FIELD_NUMBER = 9;
    private com.google.protobuf.DescriptorProtos.SourceCodeInfo sourceCodeInfo_;
    /**
     * <pre>
     * This field contains optional information about the original source code.
     * You may safely remove this entire field without harming runtime
     * functionality of the descriptors -- the information is needed only by
     * development tools.
     * </pre>
     *
     * <code>optional .google.protobuf.SourceCodeInfo source_code_info = 9;</code>
     */
    public boolean hasSourceCodeInfo() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     * This field contains optional information about the original source code.
     * You may safely remove this entire field without harming runtime
     * functionality of the descriptors -- the information is needed only by
     * development tools.
     * </pre>
     *
     * <code>optional .google.protobuf.SourceCodeInfo source_code_info = 9;</code>
     */
    public com.google.protobuf.DescriptorProtos.SourceCodeInfo getSourceCodeInfo() {
      return sourceCodeInfo_ == null ? com.google.protobuf.DescriptorProtos.SourceCodeInfo.getDefaultInstance() : sourceCodeInfo_;
    }
    /**
     * <pre>
     * This field contains optional information about the original source code.
     * You may safely remove this entire field without harming runtime
     * functionality of the descriptors -- the information is needed only by
     * development tools.
     * </pre>
     *
     * <code>optional .google.protobuf.SourceCodeInfo source_code_info = 9;</code>
     */
    private void setSourceCodeInfo(com.google.protobuf.DescriptorProtos.SourceCodeInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      sourceCodeInfo_ = value;
      bitField0_ |= 0x00000008;
      }
    /**
     * <pre>
     * This field contains optional information about the original source code.
     * You may safely remove this entire field without harming runtime
     * functionality of the descriptors -- the information is needed only by
     * development tools.
     * </pre>
     *
     * <code>optional .google.protobuf.SourceCodeInfo source_code_info = 9;</code>
     */
    private void setSourceCodeInfo(
        com.google.protobuf.DescriptorProtos.SourceCodeInfo.Builder builderForValue) {
      sourceCodeInfo_ = builderForValue.build();
      bitField0_ |= 0x00000008;
    }
    /**
     * <pre>
     * This field contains optional information about the original source code.
     * You may safely remove this entire field without harming runtime
     * functionality of the descriptors -- the information is needed only by
     * development tools.
     * </pre>
     *
     * <code>optional .google.protobuf.SourceCodeInfo source_code_info = 9;</code>
     */
    private void mergeSourceCodeInfo(com.google.protobuf.DescriptorProtos.SourceCodeInfo value) {
      if (sourceCodeInfo_ != null &&
          sourceCodeInfo_ != com.google.protobuf.DescriptorProtos.SourceCodeInfo.getDefaultInstance()) {
        sourceCodeInfo_ =
          com.google.protobuf.DescriptorProtos.SourceCodeInfo.newBuilder(sourceCodeInfo_).mergeFrom(value).buildPartial();
      } else {
        sourceCodeInfo_ = value;
      }
      bitField0_ |= 0x00000008;
    }
    /**
     * <pre>
     * This field contains optional information about the original source code.
     * You may safely remove this entire field without harming runtime
     * functionality of the descriptors -- the information is needed only by
     * development tools.
     * </pre>
     *
     * <code>optional .google.protobuf.SourceCodeInfo source_code_info = 9;</code>
     */
    private void clearSourceCodeInfo() {  sourceCodeInfo_ = null;
      bitField0_ = (bitField0_ & ~0x00000008);
    }

    public static final int SYNTAX_FIELD_NUMBER = 12;
    private java.lang.String syntax_;
    /**
     * <pre>
     * The syntax of the proto file.
     * The supported values are "proto2" and "proto3".
     * </pre>
     *
     * <code>optional string syntax = 12;</code>
     */
    public boolean hasSyntax() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <pre>
     * The syntax of the proto file.
     * The supported values are "proto2" and "proto3".
     * </pre>
     *
     * <code>optional string syntax = 12;</code>
     */
    public java.lang.String getSyntax() {
      return syntax_;
    }
    /**
     * <pre>
     * The syntax of the proto file.
     * The supported values are "proto2" and "proto3".
     * </pre>
     *
     * <code>optional string syntax = 12;</code>
     */
    public com.google.protobuf.ByteString
        getSyntaxBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(syntax_);
    }
    /**
     * <pre>
     * The syntax of the proto file.
     * The supported values are "proto2" and "proto3".
     * </pre>
     *
     * <code>optional string syntax = 12;</code>
     */
    private void setSyntax(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
      syntax_ = value;
    }
    /**
     * <pre>
     * The syntax of the proto file.
     * The supported values are "proto2" and "proto3".
     * </pre>
     *
     * <code>optional string syntax = 12;</code>
     */
    private void clearSyntax() {
      bitField0_ = (bitField0_ & ~0x00000010);
      syntax_ = getDefaultInstance().getSyntax();
    }
    /**
     * <pre>
     * The syntax of the proto file.
     * The supported values are "proto2" and "proto3".
     * </pre>
     *
     * <code>optional string syntax = 12;</code>
     */
    private void setSyntaxBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
      syntax_ = value.toStringUtf8();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeString(1, getName());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeString(2, getPackage());
      }
      for (int i = 0; i < dependency_.size(); i++) {
        output.writeString(3, dependency_.get(i));
      }
      for (int i = 0; i < messageType_.size(); i++) {
        output.writeMessage(4, messageType_.get(i));
      }
      for (int i = 0; i < enumType_.size(); i++) {
        output.writeMessage(5, enumType_.get(i));
      }
      for (int i = 0; i < service_.size(); i++) {
        output.writeMessage(6, service_.get(i));
      }
      for (int i = 0; i < extension_.size(); i++) {
        output.writeMessage(7, extension_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(8, getOptions());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(9, getSourceCodeInfo());
      }
      for (int i = 0; i < publicDependency_.size(); i++) {
        output.writeInt32(10, publicDependency_.getInt(i));
      }
      for (int i = 0; i < weakDependency_.size(); i++) {
        output.writeInt32(11, weakDependency_.getInt(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeString(12, getSyntax());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getName());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getPackage());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < dependency_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeStringSizeNoTag(dependency_.get(i));
        }
        size += dataSize;
        size += 1 * getDependencyList().size();
      }
      for (int i = 0; i < messageType_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, messageType_.get(i));
      }
      for (int i = 0; i < enumType_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, enumType_.get(i));
      }
      for (int i = 0; i < service_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, service_.get(i));
      }
      for (int i = 0; i < extension_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, extension_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getOptions());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, getSourceCodeInfo());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < publicDependency_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(publicDependency_.getInt(i));
        }
        size += dataSize;
        size += 1 * getPublicDependencyList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < weakDependency_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(weakDependency_.getInt(i));
        }
        size += dataSize;
        size += 1 * getWeakDependencyList().size();
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(12, getSyntax());
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.google.protobuf.DescriptorProtos.FileDescriptorProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.google.protobuf.DescriptorProtos.FileDescriptorProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.google.protobuf.DescriptorProtos.FileDescriptorProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.google.protobuf.DescriptorProtos.FileDescriptorProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.google.protobuf.DescriptorProtos.FileDescriptorProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.google.protobuf.DescriptorProtos.FileDescriptorProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.google.protobuf.DescriptorProtos.FileDescriptorProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.google.protobuf.DescriptorProtos.FileDescriptorProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.google.protobuf.DescriptorProtos.FileDescriptorProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.google.protobuf.DescriptorProtos.FileDescriptorProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.protobuf.DescriptorProtos.FileDescriptorProto prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * Describes a complete .proto file.
     * </pre>
     *
     * Protobuf type {@code google.protobuf.FileDescriptorProto}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.google.protobuf.DescriptorProtos.FileDescriptorProto, Builder> implements
        // @@protoc_insertion_point(builder_implements:google.protobuf.FileDescriptorProto)
        com.google.protobuf.DescriptorProtos.FileDescriptorProtoOrBuilder {
      // Construct using com.google.protobuf.DescriptorProtos.FileDescriptorProto.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * file name, relative to root of source tree
       * </pre>
       *
       * <code>optional string name = 1;</code>
       */
      public boolean hasName() {
        return instance.hasName();
      }
      /**
       * <pre>
       * file name, relative to root of source tree
       * </pre>
       *
       * <code>optional string name = 1;</code>
       */
      public java.lang.String getName() {
        return instance.getName();
      }
      /**
       * <pre>
       * file name, relative to root of source tree
       * </pre>
       *
       * <code>optional string name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        return instance.getNameBytes();
      }
      /**
       * <pre>
       * file name, relative to root of source tree
       * </pre>
       *
       * <code>optional string name = 1;</code>
       */
      public Builder setName(
          java.lang.String value) {
        copyOnWrite();
        instance.setName(value);
        return this;
      }
      /**
       * <pre>
       * file name, relative to root of source tree
       * </pre>
       *
       * <code>optional string name = 1;</code>
       */
      public Builder clearName() {
        copyOnWrite();
        instance.clearName();
        return this;
      }
      /**
       * <pre>
       * file name, relative to root of source tree
       * </pre>
       *
       * <code>optional string name = 1;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setNameBytes(value);
        return this;
      }

      /**
       * <pre>
       * e.g. "foo", "foo.bar", etc.
       * </pre>
       *
       * <code>optional string package = 2;</code>
       */
      public boolean hasPackage() {
        return instance.hasPackage();
      }
      /**
       * <pre>
       * e.g. "foo", "foo.bar", etc.
       * </pre>
       *
       * <code>optional string package = 2;</code>
       */
      public java.lang.String getPackage() {
        return instance.getPackage();
      }
      /**
       * <pre>
       * e.g. "foo", "foo.bar", etc.
       * </pre>
       *
       * <code>optional string package = 2;</code>
       */
      public com.google.protobuf.ByteString
          getPackageBytes() {
        return instance.getPackageBytes();
      }
      /**
       * <pre>
       * e.g. "foo", "foo.bar", etc.
       * </pre>
       *
       * <code>optional string package = 2;</code>
       */
      public Builder setPackage(
          java.lang.String value) {
        copyOnWrite();
        instance.setPackage(value);
        return this;
      }
      /**
       * <pre>
       * e.g. "foo", "foo.bar", etc.
       * </pre>
       *
       * <code>optional string package = 2;</code>
       */
      public Builder clearPackage() {
        copyOnWrite();
        instance.clearPackage();
        return this;
      }
      /**
       * <pre>
       * e.g. "foo", "foo.bar", etc.
       * </pre>
       *
       * <code>optional string package = 2;</code>
       */
      public Builder setPackageBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setPackageBytes(value);
        return this;
      }

      /**
       * <pre>
       * Names of files imported by this file.
       * </pre>
       *
       * <code>repeated string dependency = 3;</code>
       */
      public java.util.List<String>
          getDependencyList() {
        return java.util.Collections.unmodifiableList(
            instance.getDependencyList());
      }
      /**
       * <pre>
       * Names of files imported by this file.
       * </pre>
       *
       * <code>repeated string dependency = 3;</code>
       */
      public int getDependencyCount() {
        return instance.getDependencyCount();
      }
      /**
       * <pre>
       * Names of files imported by this file.
       * </pre>
       *
       * <code>repeated string dependency = 3;</code>
       */
      public java.lang.String getDependency(int index) {
        return instance.getDependency(index);
      }
      /**
       * <pre>
       * Names of files imported by this file.
       * </pre>
       *
       * <code>repeated string dependency = 3;</code>
       */
      public com.google.protobuf.ByteString
          getDependencyBytes(int index) {
        return instance.getDependencyBytes(index);
      }
      /**
       * <pre>
       * Names of files imported by this file.
       * </pre>
       *
       * <code>repeated string dependency = 3;</code>
       */
      public Builder setDependency(
          int index, java.lang.String value) {
        copyOnWrite();
        instance.setDependency(index, value);
        return this;
      }
      /**
       * <pre>
       * Names of files imported by this file.
       * </pre>
       *
       * <code>repeated string dependency = 3;</code>
       */
      public Builder addDependency(
          java.lang.String value) {
        copyOnWrite();
        instance.addDependency(value);
        return this;
      }
      /**
       * <pre>
       * Names of files imported by this file.
       * </pre>
       *
       * <code>repeated string dependency = 3;</code>
       */
      public Builder addAllDependency(
          java.lang.Iterable<java.lang.String> values) {
        copyOnWrite();
        instance.addAllDependency(values);
        return this;
      }
      /**
       * <pre>
       * Names of files imported by this file.
       * </pre>
       *
       * <code>repeated string dependency = 3;</code>
       */
      public Builder clearDependency() {
        copyOnWrite();
        instance.clearDependency();
        return this;
      }
      /**
       * <pre>
       * Names of files imported by this file.
       * </pre>
       *
       * <code>repeated string dependency = 3;</code>
       */
      public Builder addDependencyBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.addDependencyBytes(value);
        return this;
      }

      /**
       * <pre>
       * Indexes of the public imported files in the dependency list above.
       * </pre>
       *
       * <code>repeated int32 public_dependency = 10;</code>
       */
      public java.util.List<java.lang.Integer>
          getPublicDependencyList() {
        return java.util.Collections.unmodifiableList(
            instance.getPublicDependencyList());
      }
      /**
       * <pre>
       * Indexes of the public imported files in the dependency list above.
       * </pre>
       *
       * <code>repeated int32 public_dependency = 10;</code>
       */
      public int getPublicDependencyCount() {
        return instance.getPublicDependencyCount();
      }
      /**
       * <pre>
       * Indexes of the public imported files in the dependency list above.
       * </pre>
       *
       * <code>repeated int32 public_dependency = 10;</code>
       */
      public int getPublicDependency(int index) {
        return instance.getPublicDependency(index);
      }
      /**
       * <pre>
       * Indexes of the public imported files in the dependency list above.
       * </pre>
       *
       * <code>repeated int32 public_dependency = 10;</code>
       */
      public Builder setPublicDependency(
          int index, int value) {
        copyOnWrite();
        instance.setPublicDependency(index, value);
        return this;
      }
      /**
       * <pre>
       * Indexes of the public imported files in the dependency list above.
       * </pre>
       *
       * <code>repeated int32 public_dependency = 10;</code>
       */
      public Builder addPublicDependency(int value) {
        copyOnWrite();
        instance.addPublicDependency(value);
        return this;
      }
      /**
       * <pre>
       * Indexes of the public imported files in the dependency list above.
       * </pre>
       *
       * <code>repeated int32 public_dependency = 10;</code>
       */
      public Builder addAllPublicDependency(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        copyOnWrite();
        instance.addAllPublicDependency(values);
        return this;
      }
      /**
       * <pre>
       * Indexes of the public imported files in the dependency list above.
       * </pre>
       *
       * <code>repeated int32 public_dependency = 10;</code>
       */
      public Builder clearPublicDependency() {
        copyOnWrite();
        instance.clearPublicDependency();
        return this;
      }

      /**
       * <pre>
       * Indexes of the weak imported files in the dependency list.
       * For Google-internal migration only. Do not use.
       * </pre>
       *
       * <code>repeated int32 weak_dependency = 11;</code>
       */
      public java.util.List<java.lang.Integer>
          getWeakDependencyList() {
        return java.util.Collections.unmodifiableList(
            instance.getWeakDependencyList());
      }
      /**
       * <pre>
       * Indexes of the weak imported files in the dependency list.
       * For Google-internal migration only. Do not use.
       * </pre>
       *
       * <code>repeated int32 weak_dependency = 11;</code>
       */
      public int getWeakDependencyCount() {
        return instance.getWeakDependencyCount();
      }
      /**
       * <pre>
       * Indexes of the weak imported files in the dependency list.
       * For Google-internal migration only. Do not use.
       * </pre>
       *
       * <code>repeated int32 weak_dependency = 11;</code>
       */
      public int getWeakDependency(int index) {
        return instance.getWeakDependency(index);
      }
      /**
       * <pre>
       * Indexes of the weak imported files in the dependency list.
       * For Google-internal migration only. Do not use.
       * </pre>
       *
       * <code>repeated int32 weak_dependency = 11;</code>
       */
      public Builder setWeakDependency(
          int index, int value) {
        copyOnWrite();
        instance.setWeakDependency(index, value);
        return this;
      }
      /**
       * <pre>
       * Indexes of the weak imported files in the dependency list.
       * For Google-internal migration only. Do not use.
       * </pre>
       *
       * <code>repeated int32 weak_dependency = 11;</code>
       */
      public Builder addWeakDependency(int value) {
        copyOnWrite();
        instance.addWeakDependency(value);
        return this;
      }
      /**
       * <pre>
       * Indexes of the weak imported files in the dependency list.
       * For Google-internal migration only. Do not use.
       * </pre>
       *
       * <code>repeated int32 weak_dependency = 11;</code>
       */
      public Builder addAllWeakDependency(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        copyOnWrite();
        instance.addAllWeakDependency(values);
        return this;
      }
      /**
       * <pre>
       * Indexes of the weak imported files in the dependency list.
       * For Google-internal migration only. Do not use.
       * </pre>
       *
       * <code>repeated int32 weak_dependency = 11;</code>
       */
      public Builder clearWeakDependency() {
        copyOnWrite();
        instance.clearWeakDependency();
        return this;
      }

      /**
       * <pre>
       * All top-level definitions in this file.
       * </pre>
       *
       * <code>repeated .google.protobuf.DescriptorProto message_type = 4;</code>
       */
      public java.util.List<com.google.protobuf.DescriptorProtos.DescriptorProto> getMessageTypeList() {
        return java.util.Collections.unmodifiableList(
            instance.getMessageTypeList());
      }
      /**
       * <pre>
       * All top-level definitions in this file.
       * </pre>
       *
       * <code>repeated .google.protobuf.DescriptorProto message_type = 4;</code>
       */
      public int getMessageTypeCount() {
        return instance.getMessageTypeCount();
      }/**
       * <pre>
       * All top-level definitions in this file.
       * </pre>
       *
       * <code>repeated .google.protobuf.DescriptorProto message_type = 4;</code>
       */
      public com.google.protobuf.DescriptorProtos.DescriptorProto getMessageType(int index) {
        return instance.getMessageType(index);
      }
      /**
       * <pre>
       * All top-level definitions in this file.
       * </pre>
       *
       * <code>repeated .google.protobuf.DescriptorProto message_type = 4;</code>
       */
      public Builder setMessageType(
          int index, com.google.protobuf.DescriptorProtos.DescriptorProto value) {
        copyOnWrite();
        instance.setMessageType(index, value);
        return this;
      }
      /**
       * <pre>
       * All top-level definitions in this file.
       * </pre>
       *
       * <code>repeated .google.protobuf.DescriptorProto message_type = 4;</code>
       */
      public Builder setMessageType(
          int index, com.google.protobuf.DescriptorProtos.DescriptorProto.Builder builderForValue) {
        copyOnWrite();
        instance.setMessageType(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       * All top-level definitions in this file.
       * </pre>
       *
       * <code>repeated .google.protobuf.DescriptorProto message_type = 4;</code>
       */
      public Builder addMessageType(com.google.protobuf.DescriptorProtos.DescriptorProto value) {
        copyOnWrite();
        instance.addMessageType(value);
        return this;
      }
      /**
       * <pre>
       * All top-level definitions in this file.
       * </pre>
       *
       * <code>repeated .google.protobuf.DescriptorProto message_type = 4;</code>
       */
      public Builder addMessageType(
          int index, com.google.protobuf.DescriptorProtos.DescriptorProto value) {
        copyOnWrite();
        instance.addMessageType(index, value);
        return this;
      }
      /**
       * <pre>
       * All top-level definitions in this file.
       * </pre>
       *
       * <code>repeated .google.protobuf.DescriptorProto message_type = 4;</code>
       */
      public Builder addMessageType(
          com.google.protobuf.DescriptorProtos.DescriptorProto.Builder builderForValue) {
        copyOnWrite();
        instance.addMessageType(builderForValue);
        return this;
      }
      /**
       * <pre>
       * All top-level definitions in this file.
       * </pre>
       *
       * <code>repeated .google.protobuf.DescriptorProto message_type = 4;</code>
       */
      public Builder addMessageType(
          int index, com.google.protobuf.DescriptorProtos.DescriptorProto.Builder builderForValue) {
        copyOnWrite();
        instance.addMessageType(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       * All top-level definitions in this file.
       * </pre>
       *
       * <code>repeated .google.protobuf.DescriptorProto message_type = 4;</code>
       */
      public Builder addAllMessageType(
          java.lang.Iterable<? extends com.google.protobuf.DescriptorProtos.DescriptorProto> values) {
        copyOnWrite();
        instance.addAllMessageType(values);
        return this;
      }
      /**
       * <pre>
       * All top-level definitions in this file.
       * </pre>
       *
       * <code>repeated .google.protobuf.DescriptorProto message_type = 4;</code>
       */
      public Builder clearMessageType() {
        copyOnWrite();
        instance.clearMessageType();
        return this;
      }
      /**
       * <pre>
       * All top-level definitions in this file.
       * </pre>
       *
       * <code>repeated .google.protobuf.DescriptorProto message_type = 4;</code>
       */
      public Builder removeMessageType(int index) {
        copyOnWrite();
        instance.removeMessageType(index);
        return this;
      }

      /**
       * <code>repeated .google.protobuf.EnumDescriptorProto enum_type = 5;</code>
       */
      public java.util.List<com.google.protobuf.DescriptorProtos.EnumDescriptorProto> getEnumTypeList() {
        return java.util.Collections.unmodifiableList(
            instance.getEnumTypeList());
      }
      /**
       * <code>repeated .google.protobuf.EnumDescriptorProto enum_type = 5;</code>
       */
      public int getEnumTypeCount() {
        return instance.getEnumTypeCount();
      }/**
       * <code>repeated .google.protobuf.EnumDescriptorProto enum_type = 5;</code>
       */
      public com.google.protobuf.DescriptorProtos.EnumDescriptorProto getEnumType(int index) {
        return instance.getEnumType(index);
      }
      /**
       * <code>repeated .google.protobuf.EnumDescriptorProto enum_type = 5;</code>
       */
      public Builder setEnumType(
          int index, com.google.protobuf.DescriptorProtos.EnumDescriptorProto value) {
        copyOnWrite();
        instance.setEnumType(index, value);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.EnumDescriptorProto enum_type = 5;</code>
       */
      public Builder setEnumType(
          int index, com.google.protobuf.DescriptorProtos.EnumDescriptorProto.Builder builderForValue) {
        copyOnWrite();
        instance.setEnumType(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.EnumDescriptorProto enum_type = 5;</code>
       */
      public Builder addEnumType(com.google.protobuf.DescriptorProtos.EnumDescriptorProto value) {
        copyOnWrite();
        instance.addEnumType(value);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.EnumDescriptorProto enum_type = 5;</code>
       */
      public Builder addEnumType(
          int index, com.google.protobuf.DescriptorProtos.EnumDescriptorProto value) {
        copyOnWrite();
        instance.addEnumType(index, value);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.EnumDescriptorProto enum_type = 5;</code>
       */
      public Builder addEnumType(
          com.google.protobuf.DescriptorProtos.EnumDescriptorProto.Builder builderForValue) {
        copyOnWrite();
        instance.addEnumType(builderForValue);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.EnumDescriptorProto enum_type = 5;</code>
       */
      public Builder addEnumType(
          int index, com.google.protobuf.DescriptorProtos.EnumDescriptorProto.Builder builderForValue) {
        copyOnWrite();
        instance.addEnumType(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.EnumDescriptorProto enum_type = 5;</code>
       */
      public Builder addAllEnumType(
          java.lang.Iterable<? extends com.google.protobuf.DescriptorProtos.EnumDescriptorProto> values) {
        copyOnWrite();
        instance.addAllEnumType(values);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.EnumDescriptorProto enum_type = 5;</code>
       */
      public Builder clearEnumType() {
        copyOnWrite();
        instance.clearEnumType();
        return this;
      }
      /**
       * <code>repeated .google.protobuf.EnumDescriptorProto enum_type = 5;</code>
       */
      public Builder removeEnumType(int index) {
        copyOnWrite();
        instance.removeEnumType(index);
        return this;
      }

      /**
       * <code>repeated .google.protobuf.ServiceDescriptorProto service = 6;</code>
       */
      public java.util.List<com.google.protobuf.DescriptorProtos.ServiceDescriptorProto> getServiceList() {
        return java.util.Collections.unmodifiableList(
            instance.getServiceList());
      }
      /**
       * <code>repeated .google.protobuf.ServiceDescriptorProto service = 6;</code>
       */
      public int getServiceCount() {
        return instance.getServiceCount();
      }/**
       * <code>repeated .google.protobuf.ServiceDescriptorProto service = 6;</code>
       */
      public com.google.protobuf.DescriptorProtos.ServiceDescriptorProto getService(int index) {
        return instance.getService(index);
      }
      /**
       * <code>repeated .google.protobuf.ServiceDescriptorProto service = 6;</code>
       */
      public Builder setService(
          int index, com.google.protobuf.DescriptorProtos.ServiceDescriptorProto value) {
        copyOnWrite();
        instance.setService(index, value);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.ServiceDescriptorProto service = 6;</code>
       */
      public Builder setService(
          int index, com.google.protobuf.DescriptorProtos.ServiceDescriptorProto.Builder builderForValue) {
        copyOnWrite();
        instance.setService(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.ServiceDescriptorProto service = 6;</code>
       */
      public Builder addService(com.google.protobuf.DescriptorProtos.ServiceDescriptorProto value) {
        copyOnWrite();
        instance.addService(value);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.ServiceDescriptorProto service = 6;</code>
       */
      public Builder addService(
          int index, com.google.protobuf.DescriptorProtos.ServiceDescriptorProto value) {
        copyOnWrite();
        instance.addService(index, value);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.ServiceDescriptorProto service = 6;</code>
       */
      public Builder addService(
          com.google.protobuf.DescriptorProtos.ServiceDescriptorProto.Builder builderForValue) {
        copyOnWrite();
        instance.addService(builderForValue);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.ServiceDescriptorProto service = 6;</code>
       */
      public Builder addService(
          int index, com.google.protobuf.DescriptorProtos.ServiceDescriptorProto.Builder builderForValue) {
        copyOnWrite();
        instance.addService(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.ServiceDescriptorProto service = 6;</code>
       */
      public Builder addAllService(
          java.lang.Iterable<? extends com.google.protobuf.DescriptorProtos.ServiceDescriptorProto> values) {
        copyOnWrite();
        instance.addAllService(values);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.ServiceDescriptorProto service = 6;</code>
       */
      public Builder clearService() {
        copyOnWrite();
        instance.clearService();
        return this;
      }
      /**
       * <code>repeated .google.protobuf.ServiceDescriptorProto service = 6;</code>
       */
      public Builder removeService(int index) {
        copyOnWrite();
        instance.removeService(index);
        return this;
      }

      /**
       * <code>repeated .google.protobuf.FieldDescriptorProto extension = 7;</code>
       */
      public java.util.List<com.google.protobuf.DescriptorProtos.FieldDescriptorProto> getExtensionList() {
        return java.util.Collections.unmodifiableList(
            instance.getExtensionList());
      }
      /**
       * <code>repeated .google.protobuf.FieldDescriptorProto extension = 7;</code>
       */
      public int getExtensionCount() {
        return instance.getExtensionCount();
      }/**
       * <code>repeated .google.protobuf.FieldDescriptorProto extension = 7;</code>
       */
      public com.google.protobuf.DescriptorProtos.FieldDescriptorProto getExtension(int index) {
        return instance.getExtension(index);
      }
      /**
       * <code>repeated .google.protobuf.FieldDescriptorProto extension = 7;</code>
       */
      public Builder setExtension(
          int index, com.google.protobuf.DescriptorProtos.FieldDescriptorProto value) {
        copyOnWrite();
        instance.setExtension(index, value);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.FieldDescriptorProto extension = 7;</code>
       */
      public Builder setExtension(
          int index, com.google.protobuf.DescriptorProtos.FieldDescriptorProto.Builder builderForValue) {
        copyOnWrite();
        instance.setExtension(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.FieldDescriptorProto extension = 7;</code>
       */
      public Builder addExtension(com.google.protobuf.DescriptorProtos.FieldDescriptorProto value) {
        copyOnWrite();
        instance.addExtension(value);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.FieldDescriptorProto extension = 7;</code>
       */
      public Builder addExtension(
          int index, com.google.protobuf.DescriptorProtos.FieldDescriptorProto value) {
        copyOnWrite();
        instance.addExtension(index, value);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.FieldDescriptorProto extension = 7;</code>
       */
      public Builder addExtension(
          com.google.protobuf.DescriptorProtos.FieldDescriptorProto.Builder builderForValue) {
        copyOnWrite();
        instance.addExtension(builderForValue);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.FieldDescriptorProto extension = 7;</code>
       */
      public Builder addExtension(
          int index, com.google.protobuf.DescriptorProtos.FieldDescriptorProto.Builder builderForValue) {
        copyOnWrite();
        instance.addExtension(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.FieldDescriptorProto extension = 7;</code>
       */
      public Builder addAllExtension(
          java.lang.Iterable<? extends com.google.protobuf.DescriptorProtos.FieldDescriptorProto> values) {
        copyOnWrite();
        instance.addAllExtension(values);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.FieldDescriptorProto extension = 7;</code>
       */
      public Builder clearExtension() {
        copyOnWrite();
        instance.clearExtension();
        return this;
      }
      /**
       * <code>repeated .google.protobuf.FieldDescriptorProto extension = 7;</code>
       */
      public Builder removeExtension(int index) {
        copyOnWrite();
        instance.removeExtension(index);
        return this;
      }

      /**
       * <code>optional .google.protobuf.FileOptions options = 8;</code>
       */
      public boolean hasOptions() {
        return instance.hasOptions();
      }
      /**
       * <code>optional .google.protobuf.FileOptions options = 8;</code>
       */
      public com.google.protobuf.DescriptorProtos.FileOptions getOptions() {
        return instance.getOptions();
      }
      /**
       * <code>optional .google.protobuf.FileOptions options = 8;</code>
       */
      public Builder setOptions(com.google.protobuf.DescriptorProtos.FileOptions value) {
        copyOnWrite();
        instance.setOptions(value);
        return this;
        }
      /**
       * <code>optional .google.protobuf.FileOptions options = 8;</code>
       */
      public Builder setOptions(
          com.google.protobuf.DescriptorProtos.FileOptions.Builder builderForValue) {
        copyOnWrite();
        instance.setOptions(builderForValue);
        return this;
      }
      /**
       * <code>optional .google.protobuf.FileOptions options = 8;</code>
       */
      public Builder mergeOptions(com.google.protobuf.DescriptorProtos.FileOptions value) {
        copyOnWrite();
        instance.mergeOptions(value);
        return this;
      }
      /**
       * <code>optional .google.protobuf.FileOptions options = 8;</code>
       */
      public Builder clearOptions() {  copyOnWrite();
        instance.clearOptions();
        return this;
      }

      /**
       * <pre>
       * This field contains optional information about the original source code.
       * You may safely remove this entire field without harming runtime
       * functionality of the descriptors -- the information is needed only by
       * development tools.
       * </pre>
       *
       * <code>optional .google.protobuf.SourceCodeInfo source_code_info = 9;</code>
       */
      public boolean hasSourceCodeInfo() {
        return instance.hasSourceCodeInfo();
      }
      /**
       * <pre>
       * This field contains optional information about the original source code.
       * You may safely remove this entire field without harming runtime
       * functionality of the descriptors -- the information is needed only by
       * development tools.
       * </pre>
       *
       * <code>optional .google.protobuf.SourceCodeInfo source_code_info = 9;</code>
       */
      public com.google.protobuf.DescriptorProtos.SourceCodeInfo getSourceCodeInfo() {
        return instance.getSourceCodeInfo();
      }
      /**
       * <pre>
       * This field contains optional information about the original source code.
       * You may safely remove this entire field without harming runtime
       * functionality of the descriptors -- the information is needed only by
       * development tools.
       * </pre>
       *
       * <code>optional .google.protobuf.SourceCodeInfo source_code_info = 9;</code>
       */
      public Builder setSourceCodeInfo(com.google.protobuf.DescriptorProtos.SourceCodeInfo value) {
        copyOnWrite();
        instance.setSourceCodeInfo(value);
        return this;
        }
      /**
       * <pre>
       * This field contains optional information about the original source code.
       * You may safely remove this entire field without harming runtime
       * functionality of the descriptors -- the information is needed only by
       * development tools.
       * </pre>
       *
       * <code>optional .google.protobuf.SourceCodeInfo source_code_info = 9;</code>
       */
      public Builder setSourceCodeInfo(
          com.google.protobuf.DescriptorProtos.SourceCodeInfo.Builder builderForValue) {
        copyOnWrite();
        instance.setSourceCodeInfo(builderForValue);
        return this;
      }
      /**
       * <pre>
       * This field contains optional information about the original source code.
       * You may safely remove this entire field without harming runtime
       * functionality of the descriptors -- the information is needed only by
       * development tools.
       * </pre>
       *
       * <code>optional .google.protobuf.SourceCodeInfo source_code_info = 9;</code>
       */
      public Builder mergeSourceCodeInfo(com.google.protobuf.DescriptorProtos.SourceCodeInfo value) {
        copyOnWrite();
        instance.mergeSourceCodeInfo(value);
        return this;
      }
      /**
       * <pre>
       * This field contains optional information about the original source code.
       * You may safely remove this entire field without harming runtime
       * functionality of the descriptors -- the information is needed only by
       * development tools.
       * </pre>
       *
       * <code>optional .google.protobuf.SourceCodeInfo source_code_info = 9;</code>
       */
      public Builder clearSourceCodeInfo() {  copyOnWrite();
        instance.clearSourceCodeInfo();
        return this;
      }

      /**
       * <pre>
       * The syntax of the proto file.
       * The supported values are "proto2" and "proto3".
       * </pre>
       *
       * <code>optional string syntax = 12;</code>
       */
      public boolean hasSyntax() {
        return instance.hasSyntax();
      }
      /**
       * <pre>
       * The syntax of the proto file.
       * The supported values are "proto2" and "proto3".
       * </pre>
       *
       * <code>optional string syntax = 12;</code>
       */
      public java.lang.String getSyntax() {
        return instance.getSyntax();
      }
      /**
       * <pre>
       * The syntax of the proto file.
       * The supported values are "proto2" and "proto3".
       * </pre>
       *
       * <code>optional string syntax = 12;</code>
       */
      public com.google.protobuf.ByteString
          getSyntaxBytes() {
        return instance.getSyntaxBytes();
      }
      /**
       * <pre>
       * The syntax of the proto file.
       * The supported values are "proto2" and "proto3".
       * </pre>
       *
       * <code>optional string syntax = 12;</code>
       */
      public Builder setSyntax(
          java.lang.String value) {
        copyOnWrite();
        instance.setSyntax(value);
        return this;
      }
      /**
       * <pre>
       * The syntax of the proto file.
       * The supported values are "proto2" and "proto3".
       * </pre>
       *
       * <code>optional string syntax = 12;</code>
       */
      public Builder clearSyntax() {
        copyOnWrite();
        instance.clearSyntax();
        return this;
      }
      /**
       * <pre>
       * The syntax of the proto file.
       * The supported values are "proto2" and "proto3".
       * </pre>
       *
       * <code>optional string syntax = 12;</code>
       */
      public Builder setSyntaxBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setSyntaxBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:google.protobuf.FileDescriptorProto)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.google.protobuf.DescriptorProtos.FileDescriptorProto();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          for (int i = 0; i < getMessageTypeCount(); i++) {
            if (!getMessageType(i).isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          for (int i = 0; i < getEnumTypeCount(); i++) {
            if (!getEnumType(i).isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          for (int i = 0; i < getServiceCount(); i++) {
            if (!getService(i).isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          for (int i = 0; i < getExtensionCount(); i++) {
            if (!getExtension(i).isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasOptions()) {
            if (!getOptions().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          dependency_.makeImmutable();
          publicDependency_.makeImmutable();
          weakDependency_.makeImmutable();
          messageType_.makeImmutable();
          enumType_.makeImmutable();
          service_.makeImmutable();
          extension_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.google.protobuf.DescriptorProtos.FileDescriptorProto other = (com.google.protobuf.DescriptorProtos.FileDescriptorProto) arg1;
          name_ = visitor.visitString(
              hasName(), name_,
              other.hasName(), other.name_);
          package_ = visitor.visitString(
              hasPackage(), package_,
              other.hasPackage(), other.package_);
          dependency_= visitor.visitList(dependency_, other.dependency_);
          publicDependency_= visitor.visitIntList(publicDependency_, other.publicDependency_);
          weakDependency_= visitor.visitIntList(weakDependency_, other.weakDependency_);
          messageType_= visitor.visitList(messageType_, other.messageType_);
          enumType_= visitor.visitList(enumType_, other.enumType_);
          service_= visitor.visitList(service_, other.service_);
          extension_= visitor.visitList(extension_, other.extension_);
          options_ = visitor.visitMessage(options_, other.options_);
          sourceCodeInfo_ = visitor.visitMessage(sourceCodeInfo_, other.sourceCodeInfo_);
          syntax_ = visitor.visitString(
              hasSyntax(), syntax_,
              other.hasSyntax(), other.syntax_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readString();
                  bitField0_ |= 0x00000001;
                  name_ = s;
                  break;
                }
                case 18: {
                  String s = input.readString();
                  bitField0_ |= 0x00000002;
                  package_ = s;
                  break;
                }
                case 26: {
                  String s = input.readString();
                  if (!dependency_.isModifiable()) {
                    dependency_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(dependency_);
                  }
                  dependency_.add(s);
                  break;
                }
                case 34: {
                  if (!messageType_.isModifiable()) {
                    messageType_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(messageType_);
                  }
                  messageType_.add(
                      input.readMessage(com.google.protobuf.DescriptorProtos.DescriptorProto.parser(), extensionRegistry));
                  break;
                }
                case 42: {
                  if (!enumType_.isModifiable()) {
                    enumType_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(enumType_);
                  }
                  enumType_.add(
                      input.readMessage(com.google.protobuf.DescriptorProtos.EnumDescriptorProto.parser(), extensionRegistry));
                  break;
                }
                case 50: {
                  if (!service_.isModifiable()) {
                    service_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(service_);
                  }
                  service_.add(
                      input.readMessage(com.google.protobuf.DescriptorProtos.ServiceDescriptorProto.parser(), extensionRegistry));
                  break;
                }
                case 58: {
                  if (!extension_.isModifiable()) {
                    extension_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(extension_);
                  }
                  extension_.add(
                      input.readMessage(com.google.protobuf.DescriptorProtos.FieldDescriptorProto.parser(), extensionRegistry));
                  break;
                }
                case 66: {
                  com.google.protobuf.DescriptorProtos.FileOptions.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000004) == 0x00000004)) {
                    subBuilder = options_.toBuilder();
                  }
                  options_ = input.readMessage(com.google.protobuf.DescriptorProtos.FileOptions.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(options_);
                    options_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000004;
                  break;
                }
                case 74: {
                  com.google.protobuf.DescriptorProtos.SourceCodeInfo.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000008) == 0x00000008)) {
                    subBuilder = sourceCodeInfo_.toBuilder();
                  }
                  sourceCodeInfo_ = input.readMessage(com.google.protobuf.DescriptorProtos.SourceCodeInfo.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(sourceCodeInfo_);
                    sourceCodeInfo_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000008;
                  break;
                }
                case 80: {
                  if (!publicDependency_.isModifiable()) {
                    publicDependency_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(publicDependency_);
                  }
                  publicDependency_.addInt(input.readInt32());
                  break;
                }
                case 82: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  if (!publicDependency_.isModifiable() && input.getBytesUntilLimit() > 0) {
                    publicDependency_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(publicDependency_);
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    publicDependency_.addInt(input.readInt32());
                  }
                  input.popLimit(limit);
                  break;
                }
                case 88: {
                  if (!weakDependency_.isModifiable()) {
                    weakDependency_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(weakDependency_);
                  }
                  weakDependency_.addInt(input.readInt32());
                  break;
                }
                case 90: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  if (!weakDependency_.isModifiable() && input.getBytesUntilLimit() > 0) {
                    weakDependency_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(weakDependency_);
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    weakDependency_.addInt(input.readInt32());
                  }
                  input.popLimit(limit);
                  break;
                }
                case 98: {
                  String s = input.readString();
                  bitField0_ |= 0x00000010;
                  syntax_ = s;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.google.protobuf.DescriptorProtos.FileDescriptorProto.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:google.protobuf.FileDescriptorProto)
    private static final com.google.protobuf.DescriptorProtos.FileDescriptorProto DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new FileDescriptorProto();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.google.protobuf.DescriptorProtos.FileDescriptorProto getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<FileDescriptorProto> PARSER;

    public static com.google.protobuf.Parser<FileDescriptorProto> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface DescriptorProtoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.protobuf.DescriptorProto)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional string name = 1;</code>
     */
    boolean hasName();
    /**
     * <code>optional string name = 1;</code>
     */
    java.lang.String getName();
    /**
     * <code>optional string name = 1;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>repeated .google.protobuf.FieldDescriptorProto field = 2;</code>
     */
    java.util.List<com.google.protobuf.DescriptorProtos.FieldDescriptorProto>
        getFieldList();
    /**
     * <code>repeated .google.protobuf.FieldDescriptorProto field = 2;</code>
     */
    com.google.protobuf.DescriptorProtos.FieldDescriptorProto getField(int index);
    /**
     * <code>repeated .google.protobuf.FieldDescriptorProto field = 2;</code>
     */
    int getFieldCount();

    /**
     * <code>repeated .google.protobuf.FieldDescriptorProto extension = 6;</code>
     */
    java.util.List<com.google.protobuf.DescriptorProtos.FieldDescriptorProto>
        getExtensionList();
    /**
     * <code>repeated .google.protobuf.FieldDescriptorProto extension = 6;</code>
     */
    com.google.protobuf.DescriptorProtos.FieldDescriptorProto getExtension(int index);
    /**
     * <code>repeated .google.protobuf.FieldDescriptorProto extension = 6;</code>
     */
    int getExtensionCount();

    /**
     * <code>repeated .google.protobuf.DescriptorProto nested_type = 3;</code>
     */
    java.util.List<com.google.protobuf.DescriptorProtos.DescriptorProto>
        getNestedTypeList();
    /**
     * <code>repeated .google.protobuf.DescriptorProto nested_type = 3;</code>
     */
    com.google.protobuf.DescriptorProtos.DescriptorProto getNestedType(int index);
    /**
     * <code>repeated .google.protobuf.DescriptorProto nested_type = 3;</code>
     */
    int getNestedTypeCount();

    /**
     * <code>repeated .google.protobuf.EnumDescriptorProto enum_type = 4;</code>
     */
    java.util.List<com.google.protobuf.DescriptorProtos.EnumDescriptorProto>
        getEnumTypeList();
    /**
     * <code>repeated .google.protobuf.EnumDescriptorProto enum_type = 4;</code>
     */
    com.google.protobuf.DescriptorProtos.EnumDescriptorProto getEnumType(int index);
    /**
     * <code>repeated .google.protobuf.EnumDescriptorProto enum_type = 4;</code>
     */
    int getEnumTypeCount();

    /**
     * <code>repeated .google.protobuf.DescriptorProto.ExtensionRange extension_range = 5;</code>
     */
    java.util.List<com.google.protobuf.DescriptorProtos.DescriptorProto.ExtensionRange>
        getExtensionRangeList();
    /**
     * <code>repeated .google.protobuf.DescriptorProto.ExtensionRange extension_range = 5;</code>
     */
    com.google.protobuf.DescriptorProtos.DescriptorProto.ExtensionRange getExtensionRange(int index);
    /**
     * <code>repeated .google.protobuf.DescriptorProto.ExtensionRange extension_range = 5;</code>
     */
    int getExtensionRangeCount();

    /**
     * <code>repeated .google.protobuf.OneofDescriptorProto oneof_decl = 8;</code>
     */
    java.util.List<com.google.protobuf.DescriptorProtos.OneofDescriptorProto>
        getOneofDeclList();
    /**
     * <code>repeated .google.protobuf.OneofDescriptorProto oneof_decl = 8;</code>
     */
    com.google.protobuf.DescriptorProtos.OneofDescriptorProto getOneofDecl(int index);
    /**
     * <code>repeated .google.protobuf.OneofDescriptorProto oneof_decl = 8;</code>
     */
    int getOneofDeclCount();

    /**
     * <code>optional .google.protobuf.MessageOptions options = 7;</code>
     */
    boolean hasOptions();
    /**
     * <code>optional .google.protobuf.MessageOptions options = 7;</code>
     */
    com.google.protobuf.DescriptorProtos.MessageOptions getOptions();

    /**
     * <code>repeated .google.protobuf.DescriptorProto.ReservedRange reserved_range = 9;</code>
     */
    java.util.List<com.google.protobuf.DescriptorProtos.DescriptorProto.ReservedRange>
        getReservedRangeList();
    /**
     * <code>repeated .google.protobuf.DescriptorProto.ReservedRange reserved_range = 9;</code>
     */
    com.google.protobuf.DescriptorProtos.DescriptorProto.ReservedRange getReservedRange(int index);
    /**
     * <code>repeated .google.protobuf.DescriptorProto.ReservedRange reserved_range = 9;</code>
     */
    int getReservedRangeCount();

    /**
     * <pre>
     * Reserved field names, which may not be used by fields in the same message.
     * A given name may only be reserved once.
     * </pre>
     *
     * <code>repeated string reserved_name = 10;</code>
     */
    java.util.List<String>
        getReservedNameList();
    /**
     * <pre>
     * Reserved field names, which may not be used by fields in the same message.
     * A given name may only be reserved once.
     * </pre>
     *
     * <code>repeated string reserved_name = 10;</code>
     */
    int getReservedNameCount();
    /**
     * <pre>
     * Reserved field names, which may not be used by fields in the same message.
     * A given name may only be reserved once.
     * </pre>
     *
     * <code>repeated string reserved_name = 10;</code>
     */
    java.lang.String getReservedName(int index);
    /**
     * <pre>
     * Reserved field names, which may not be used by fields in the same message.
     * A given name may only be reserved once.
     * </pre>
     *
     * <code>repeated string reserved_name = 10;</code>
     */
    com.google.protobuf.ByteString
        getReservedNameBytes(int index);
  }
  /**
   * <pre>
   * Describes a message type.
   * </pre>
   *
   * Protobuf type {@code google.protobuf.DescriptorProto}
   */
  public  static final class DescriptorProto extends
      com.google.protobuf.GeneratedMessageLite<
          DescriptorProto, DescriptorProto.Builder> implements
      // @@protoc_insertion_point(message_implements:google.protobuf.DescriptorProto)
      DescriptorProtoOrBuilder {
    private DescriptorProto() {
      name_ = "";
      field_ = emptyProtobufList();
      extension_ = emptyProtobufList();
      nestedType_ = emptyProtobufList();
      enumType_ = emptyProtobufList();
      extensionRange_ = emptyProtobufList();
      oneofDecl_ = emptyProtobufList();
      reservedRange_ = emptyProtobufList();
      reservedName_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
    }
    public interface ExtensionRangeOrBuilder extends
        // @@protoc_insertion_point(interface_extends:google.protobuf.DescriptorProto.ExtensionRange)
        com.google.protobuf.MessageLiteOrBuilder {

      /**
       * <code>optional int32 start = 1;</code>
       */
      boolean hasStart();
      /**
       * <code>optional int32 start = 1;</code>
       */
      int getStart();

      /**
       * <code>optional int32 end = 2;</code>
       */
      boolean hasEnd();
      /**
       * <code>optional int32 end = 2;</code>
       */
      int getEnd();

      /**
       * <code>optional .google.protobuf.ExtensionRangeOptions options = 3;</code>
       */
      boolean hasOptions();
      /**
       * <code>optional .google.protobuf.ExtensionRangeOptions options = 3;</code>
       */
      com.google.protobuf.DescriptorProtos.ExtensionRangeOptions getOptions();
    }
    /**
     * Protobuf type {@code google.protobuf.DescriptorProto.ExtensionRange}
     */
    public  static final class ExtensionRange extends
        com.google.protobuf.GeneratedMessageLite<
            ExtensionRange, ExtensionRange.Builder> implements
        // @@protoc_insertion_point(message_implements:google.protobuf.DescriptorProto.ExtensionRange)
        ExtensionRangeOrBuilder {
      private ExtensionRange() {
      }
      private int bitField0_;
      public static final int START_FIELD_NUMBER = 1;
      private int start_;
      /**
       * <code>optional int32 start = 1;</code>
       */
      public boolean hasStart() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 start = 1;</code>
       */
      public int getStart() {
        return start_;
      }
      /**
       * <code>optional int32 start = 1;</code>
       */
      private void setStart(int value) {
        bitField0_ |= 0x00000001;
        start_ = value;
      }
      /**
       * <code>optional int32 start = 1;</code>
       */
      private void clearStart() {
        bitField0_ = (bitField0_ & ~0x00000001);
        start_ = 0;
      }

      public static final int END_FIELD_NUMBER = 2;
      private int end_;
      /**
       * <code>optional int32 end = 2;</code>
       */
      public boolean hasEnd() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 end = 2;</code>
       */
      public int getEnd() {
        return end_;
      }
      /**
       * <code>optional int32 end = 2;</code>
       */
      private void setEnd(int value) {
        bitField0_ |= 0x00000002;
        end_ = value;
      }
      /**
       * <code>optional int32 end = 2;</code>
       */
      private void clearEnd() {
        bitField0_ = (bitField0_ & ~0x00000002);
        end_ = 0;
      }

      public static final int OPTIONS_FIELD_NUMBER = 3;
      private com.google.protobuf.DescriptorProtos.ExtensionRangeOptions options_;
      /**
       * <code>optional .google.protobuf.ExtensionRangeOptions options = 3;</code>
       */
      public boolean hasOptions() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .google.protobuf.ExtensionRangeOptions options = 3;</code>
       */
      public com.google.protobuf.DescriptorProtos.ExtensionRangeOptions getOptions() {
        return options_ == null ? com.google.protobuf.DescriptorProtos.ExtensionRangeOptions.getDefaultInstance() : options_;
      }
      /**
       * <code>optional .google.protobuf.ExtensionRangeOptions options = 3;</code>
       */
      private void setOptions(com.google.protobuf.DescriptorProtos.ExtensionRangeOptions value) {
        if (value == null) {
          throw new NullPointerException();
        }
        options_ = value;
        bitField0_ |= 0x00000004;
        }
      /**
       * <code>optional .google.protobuf.ExtensionRangeOptions options = 3;</code>
       */
      private void setOptions(
          com.google.protobuf.DescriptorProtos.ExtensionRangeOptions.Builder builderForValue) {
        options_ = builderForValue.build();
        bitField0_ |= 0x00000004;
      }
      /**
       * <code>optional .google.protobuf.ExtensionRangeOptions options = 3;</code>
       */
      private void mergeOptions(com.google.protobuf.DescriptorProtos.ExtensionRangeOptions value) {
        if (options_ != null &&
            options_ != com.google.protobuf.DescriptorProtos.ExtensionRangeOptions.getDefaultInstance()) {
          options_ =
            com.google.protobuf.DescriptorProtos.ExtensionRangeOptions.newBuilder(options_).mergeFrom(value).buildPartial();
        } else {
          options_ = value;
        }
        bitField0_ |= 0x00000004;
      }
      /**
       * <code>optional .google.protobuf.ExtensionRangeOptions options = 3;</code>
       */
      private void clearOptions() {  options_ = null;
        bitField0_ = (bitField0_ & ~0x00000004);
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt32(1, start_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeInt32(2, end_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeMessage(3, getOptions());
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, start_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, end_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, getOptions());
        }
        size += unknownFields.getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      public static com.google.protobuf.DescriptorProtos.DescriptorProto.ExtensionRange parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static com.google.protobuf.DescriptorProtos.DescriptorProto.ExtensionRange parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static com.google.protobuf.DescriptorProtos.DescriptorProto.ExtensionRange parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static com.google.protobuf.DescriptorProtos.DescriptorProto.ExtensionRange parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static com.google.protobuf.DescriptorProtos.DescriptorProto.ExtensionRange parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static com.google.protobuf.DescriptorProtos.DescriptorProto.ExtensionRange parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static com.google.protobuf.DescriptorProtos.DescriptorProto.ExtensionRange parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input);
      }
      public static com.google.protobuf.DescriptorProtos.DescriptorProto.ExtensionRange parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static com.google.protobuf.DescriptorProtos.DescriptorProto.ExtensionRange parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static com.google.protobuf.DescriptorProtos.DescriptorProto.ExtensionRange parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }

      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.google.protobuf.DescriptorProtos.DescriptorProto.ExtensionRange prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      /**
       * Protobuf type {@code google.protobuf.DescriptorProto.ExtensionRange}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            com.google.protobuf.DescriptorProtos.DescriptorProto.ExtensionRange, Builder> implements
          // @@protoc_insertion_point(builder_implements:google.protobuf.DescriptorProto.ExtensionRange)
          com.google.protobuf.DescriptorProtos.DescriptorProto.ExtensionRangeOrBuilder {
        // Construct using com.google.protobuf.DescriptorProtos.DescriptorProto.ExtensionRange.newBuilder()
        private Builder() {
          super(DEFAULT_INSTANCE);
        }


        /**
         * <code>optional int32 start = 1;</code>
         */
        public boolean hasStart() {
          return instance.hasStart();
        }
        /**
         * <code>optional int32 start = 1;</code>
         */
        public int getStart() {
          return instance.getStart();
        }
        /**
         * <code>optional int32 start = 1;</code>
         */
        public Builder setStart(int value) {
          copyOnWrite();
          instance.setStart(value);
          return this;
        }
        /**
         * <code>optional int32 start = 1;</code>
         */
        public Builder clearStart() {
          copyOnWrite();
          instance.clearStart();
          return this;
        }

        /**
         * <code>optional int32 end = 2;</code>
         */
        public boolean hasEnd() {
          return instance.hasEnd();
        }
        /**
         * <code>optional int32 end = 2;</code>
         */
        public int getEnd() {
          return instance.getEnd();
        }
        /**
         * <code>optional int32 end = 2;</code>
         */
        public Builder setEnd(int value) {
          copyOnWrite();
          instance.setEnd(value);
          return this;
        }
        /**
         * <code>optional int32 end = 2;</code>
         */
        public Builder clearEnd() {
          copyOnWrite();
          instance.clearEnd();
          return this;
        }

        /**
         * <code>optional .google.protobuf.ExtensionRangeOptions options = 3;</code>
         */
        public boolean hasOptions() {
          return instance.hasOptions();
        }
        /**
         * <code>optional .google.protobuf.ExtensionRangeOptions options = 3;</code>
         */
        public com.google.protobuf.DescriptorProtos.ExtensionRangeOptions getOptions() {
          return instance.getOptions();
        }
        /**
         * <code>optional .google.protobuf.ExtensionRangeOptions options = 3;</code>
         */
        public Builder setOptions(com.google.protobuf.DescriptorProtos.ExtensionRangeOptions value) {
          copyOnWrite();
          instance.setOptions(value);
          return this;
          }
        /**
         * <code>optional .google.protobuf.ExtensionRangeOptions options = 3;</code>
         */
        public Builder setOptions(
            com.google.protobuf.DescriptorProtos.ExtensionRangeOptions.Builder builderForValue) {
          copyOnWrite();
          instance.setOptions(builderForValue);
          return this;
        }
        /**
         * <code>optional .google.protobuf.ExtensionRangeOptions options = 3;</code>
         */
        public Builder mergeOptions(com.google.protobuf.DescriptorProtos.ExtensionRangeOptions value) {
          copyOnWrite();
          instance.mergeOptions(value);
          return this;
        }
        /**
         * <code>optional .google.protobuf.ExtensionRangeOptions options = 3;</code>
         */
        public Builder clearOptions() {  copyOnWrite();
          instance.clearOptions();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:google.protobuf.DescriptorProto.ExtensionRange)
      }
      private byte memoizedIsInitialized = -1;
      protected final Object dynamicMethod(
          com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
          Object arg0, Object arg1) {
        switch (method) {
          case NEW_MUTABLE_INSTANCE: {
            return new com.google.protobuf.DescriptorProtos.DescriptorProto.ExtensionRange();
          }
          case IS_INITIALIZED: {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return DEFAULT_INSTANCE;
            if (isInitialized == 0) return null;

            boolean shouldMemoize = ((Boolean) arg0).booleanValue();
            if (hasOptions()) {
              if (!getOptions().isInitialized()) {
                if (shouldMemoize) {
                  memoizedIsInitialized = 0;
                }
                return null;
              }
            }
            if (shouldMemoize) memoizedIsInitialized = 1;
            return DEFAULT_INSTANCE;

          }
          case MAKE_IMMUTABLE: {
            return null;
          }
          case NEW_BUILDER: {
            return new Builder();
          }
          case VISIT: {
            Visitor visitor = (Visitor) arg0;
            com.google.protobuf.DescriptorProtos.DescriptorProto.ExtensionRange other = (com.google.protobuf.DescriptorProtos.DescriptorProto.ExtensionRange) arg1;
            start_ = visitor.visitInt(
                hasStart(), start_,
                other.hasStart(), other.start_);
            end_ = visitor.visitInt(
                hasEnd(), end_,
                other.hasEnd(), other.end_);
            options_ = visitor.visitMessage(options_, other.options_);
            if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                .INSTANCE) {
              bitField0_ |= other.bitField0_;
            }
            return this;
          }
          case MERGE_FROM_STREAM: {
            com.google.protobuf.CodedInputStream input =
                (com.google.protobuf.CodedInputStream) arg0;
            com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                (com.google.protobuf.ExtensionRegistryLite) arg1;
            try {
              boolean done = false;
              while (!done) {
                int tag = input.readTag();
                switch (tag) {
                  case 0:
                    done = true;
                    break;
                  default: {
                    if (!parseUnknownField(tag, input)) {
                      done = true;
                    }
                    break;
                  }
                  case 8: {
                    bitField0_ |= 0x00000001;
                    start_ = input.readInt32();
                    break;
                  }
                  case 16: {
                    bitField0_ |= 0x00000002;
                    end_ = input.readInt32();
                    break;
                  }
                  case 26: {
                    com.google.protobuf.DescriptorProtos.ExtensionRangeOptions.Builder subBuilder = null;
                    if (((bitField0_ & 0x00000004) == 0x00000004)) {
                      subBuilder = options_.toBuilder();
                    }
                    options_ = input.readMessage(com.google.protobuf.DescriptorProtos.ExtensionRangeOptions.parser(), extensionRegistry);
                    if (subBuilder != null) {
                      subBuilder.mergeFrom(options_);
                      options_ = subBuilder.buildPartial();
                    }
                    bitField0_ |= 0x00000004;
                    break;
                  }
                }
              }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw new RuntimeException(e.setUnfinishedMessage(this));
            } catch (java.io.IOException e) {
              throw new RuntimeException(
                  new com.google.protobuf.InvalidProtocolBufferException(
                      e.getMessage()).setUnfinishedMessage(this));
            } finally {
            }
          }
          case GET_DEFAULT_INSTANCE: {
            return DEFAULT_INSTANCE;
          }
          case GET_PARSER: {
            if (PARSER == null) {    synchronized (com.google.protobuf.DescriptorProtos.DescriptorProto.ExtensionRange.class) {
                if (PARSER == null) {
                  PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                }
              }
            }
            return PARSER;
          }
        }
        throw new UnsupportedOperationException();
      }


      // @@protoc_insertion_point(class_scope:google.protobuf.DescriptorProto.ExtensionRange)
      private static final com.google.protobuf.DescriptorProtos.DescriptorProto.ExtensionRange DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new ExtensionRange();
        DEFAULT_INSTANCE.makeImmutable();
      }

      public static com.google.protobuf.DescriptorProtos.DescriptorProto.ExtensionRange getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static volatile com.google.protobuf.Parser<ExtensionRange> PARSER;

      public static com.google.protobuf.Parser<ExtensionRange> parser() {
        return DEFAULT_INSTANCE.getParserForType();
      }
    }

    public interface ReservedRangeOrBuilder extends
        // @@protoc_insertion_point(interface_extends:google.protobuf.DescriptorProto.ReservedRange)
        com.google.protobuf.MessageLiteOrBuilder {

      /**
       * <pre>
       * Inclusive.
       * </pre>
       *
       * <code>optional int32 start = 1;</code>
       */
      boolean hasStart();
      /**
       * <pre>
       * Inclusive.
       * </pre>
       *
       * <code>optional int32 start = 1;</code>
       */
      int getStart();

      /**
       * <pre>
       * Exclusive.
       * </pre>
       *
       * <code>optional int32 end = 2;</code>
       */
      boolean hasEnd();
      /**
       * <pre>
       * Exclusive.
       * </pre>
       *
       * <code>optional int32 end = 2;</code>
       */
      int getEnd();
    }
    /**
     * <pre>
     * Range of reserved tag numbers. Reserved tag numbers may not be used by
     * fields or extension ranges in the same message. Reserved ranges may
     * not overlap.
     * </pre>
     *
     * Protobuf type {@code google.protobuf.DescriptorProto.ReservedRange}
     */
    public  static final class ReservedRange extends
        com.google.protobuf.GeneratedMessageLite<
            ReservedRange, ReservedRange.Builder> implements
        // @@protoc_insertion_point(message_implements:google.protobuf.DescriptorProto.ReservedRange)
        ReservedRangeOrBuilder {
      private ReservedRange() {
      }
      private int bitField0_;
      public static final int START_FIELD_NUMBER = 1;
      private int start_;
      /**
       * <pre>
       * Inclusive.
       * </pre>
       *
       * <code>optional int32 start = 1;</code>
       */
      public boolean hasStart() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * Inclusive.
       * </pre>
       *
       * <code>optional int32 start = 1;</code>
       */
      public int getStart() {
        return start_;
      }
      /**
       * <pre>
       * Inclusive.
       * </pre>
       *
       * <code>optional int32 start = 1;</code>
       */
      private void setStart(int value) {
        bitField0_ |= 0x00000001;
        start_ = value;
      }
      /**
       * <pre>
       * Inclusive.
       * </pre>
       *
       * <code>optional int32 start = 1;</code>
       */
      private void clearStart() {
        bitField0_ = (bitField0_ & ~0x00000001);
        start_ = 0;
      }

      public static final int END_FIELD_NUMBER = 2;
      private int end_;
      /**
       * <pre>
       * Exclusive.
       * </pre>
       *
       * <code>optional int32 end = 2;</code>
       */
      public boolean hasEnd() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * Exclusive.
       * </pre>
       *
       * <code>optional int32 end = 2;</code>
       */
      public int getEnd() {
        return end_;
      }
      /**
       * <pre>
       * Exclusive.
       * </pre>
       *
       * <code>optional int32 end = 2;</code>
       */
      private void setEnd(int value) {
        bitField0_ |= 0x00000002;
        end_ = value;
      }
      /**
       * <pre>
       * Exclusive.
       * </pre>
       *
       * <code>optional int32 end = 2;</code>
       */
      private void clearEnd() {
        bitField0_ = (bitField0_ & ~0x00000002);
        end_ = 0;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt32(1, start_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeInt32(2, end_);
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, start_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, end_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      public static com.google.protobuf.DescriptorProtos.DescriptorProto.ReservedRange parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static com.google.protobuf.DescriptorProtos.DescriptorProto.ReservedRange parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static com.google.protobuf.DescriptorProtos.DescriptorProto.ReservedRange parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static com.google.protobuf.DescriptorProtos.DescriptorProto.ReservedRange parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static com.google.protobuf.DescriptorProtos.DescriptorProto.ReservedRange parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static com.google.protobuf.DescriptorProtos.DescriptorProto.ReservedRange parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static com.google.protobuf.DescriptorProtos.DescriptorProto.ReservedRange parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input);
      }
      public static com.google.protobuf.DescriptorProtos.DescriptorProto.ReservedRange parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static com.google.protobuf.DescriptorProtos.DescriptorProto.ReservedRange parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static com.google.protobuf.DescriptorProtos.DescriptorProto.ReservedRange parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }

      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.google.protobuf.DescriptorProtos.DescriptorProto.ReservedRange prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      /**
       * <pre>
       * Range of reserved tag numbers. Reserved tag numbers may not be used by
       * fields or extension ranges in the same message. Reserved ranges may
       * not overlap.
       * </pre>
       *
       * Protobuf type {@code google.protobuf.DescriptorProto.ReservedRange}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            com.google.protobuf.DescriptorProtos.DescriptorProto.ReservedRange, Builder> implements
          // @@protoc_insertion_point(builder_implements:google.protobuf.DescriptorProto.ReservedRange)
          com.google.protobuf.DescriptorProtos.DescriptorProto.ReservedRangeOrBuilder {
        // Construct using com.google.protobuf.DescriptorProtos.DescriptorProto.ReservedRange.newBuilder()
        private Builder() {
          super(DEFAULT_INSTANCE);
        }


        /**
         * <pre>
         * Inclusive.
         * </pre>
         *
         * <code>optional int32 start = 1;</code>
         */
        public boolean hasStart() {
          return instance.hasStart();
        }
        /**
         * <pre>
         * Inclusive.
         * </pre>
         *
         * <code>optional int32 start = 1;</code>
         */
        public int getStart() {
          return instance.getStart();
        }
        /**
         * <pre>
         * Inclusive.
         * </pre>
         *
         * <code>optional int32 start = 1;</code>
         */
        public Builder setStart(int value) {
          copyOnWrite();
          instance.setStart(value);
          return this;
        }
        /**
         * <pre>
         * Inclusive.
         * </pre>
         *
         * <code>optional int32 start = 1;</code>
         */
        public Builder clearStart() {
          copyOnWrite();
          instance.clearStart();
          return this;
        }

        /**
         * <pre>
         * Exclusive.
         * </pre>
         *
         * <code>optional int32 end = 2;</code>
         */
        public boolean hasEnd() {
          return instance.hasEnd();
        }
        /**
         * <pre>
         * Exclusive.
         * </pre>
         *
         * <code>optional int32 end = 2;</code>
         */
        public int getEnd() {
          return instance.getEnd();
        }
        /**
         * <pre>
         * Exclusive.
         * </pre>
         *
         * <code>optional int32 end = 2;</code>
         */
        public Builder setEnd(int value) {
          copyOnWrite();
          instance.setEnd(value);
          return this;
        }
        /**
         * <pre>
         * Exclusive.
         * </pre>
         *
         * <code>optional int32 end = 2;</code>
         */
        public Builder clearEnd() {
          copyOnWrite();
          instance.clearEnd();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:google.protobuf.DescriptorProto.ReservedRange)
      }
      protected final Object dynamicMethod(
          com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
          Object arg0, Object arg1) {
        switch (method) {
          case NEW_MUTABLE_INSTANCE: {
            return new com.google.protobuf.DescriptorProtos.DescriptorProto.ReservedRange();
          }
          case IS_INITIALIZED: {
            return DEFAULT_INSTANCE;
          }
          case MAKE_IMMUTABLE: {
            return null;
          }
          case NEW_BUILDER: {
            return new Builder();
          }
          case VISIT: {
            Visitor visitor = (Visitor) arg0;
            com.google.protobuf.DescriptorProtos.DescriptorProto.ReservedRange other = (com.google.protobuf.DescriptorProtos.DescriptorProto.ReservedRange) arg1;
            start_ = visitor.visitInt(
                hasStart(), start_,
                other.hasStart(), other.start_);
            end_ = visitor.visitInt(
                hasEnd(), end_,
                other.hasEnd(), other.end_);
            if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                .INSTANCE) {
              bitField0_ |= other.bitField0_;
            }
            return this;
          }
          case MERGE_FROM_STREAM: {
            com.google.protobuf.CodedInputStream input =
                (com.google.protobuf.CodedInputStream) arg0;
            com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                (com.google.protobuf.ExtensionRegistryLite) arg1;
            try {
              boolean done = false;
              while (!done) {
                int tag = input.readTag();
                switch (tag) {
                  case 0:
                    done = true;
                    break;
                  default: {
                    if (!parseUnknownField(tag, input)) {
                      done = true;
                    }
                    break;
                  }
                  case 8: {
                    bitField0_ |= 0x00000001;
                    start_ = input.readInt32();
                    break;
                  }
                  case 16: {
                    bitField0_ |= 0x00000002;
                    end_ = input.readInt32();
                    break;
                  }
                }
              }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw new RuntimeException(e.setUnfinishedMessage(this));
            } catch (java.io.IOException e) {
              throw new RuntimeException(
                  new com.google.protobuf.InvalidProtocolBufferException(
                      e.getMessage()).setUnfinishedMessage(this));
            } finally {
            }
          }
          case GET_DEFAULT_INSTANCE: {
            return DEFAULT_INSTANCE;
          }
          case GET_PARSER: {
            if (PARSER == null) {    synchronized (com.google.protobuf.DescriptorProtos.DescriptorProto.ReservedRange.class) {
                if (PARSER == null) {
                  PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                }
              }
            }
            return PARSER;
          }
        }
        throw new UnsupportedOperationException();
      }


      // @@protoc_insertion_point(class_scope:google.protobuf.DescriptorProto.ReservedRange)
      private static final com.google.protobuf.DescriptorProtos.DescriptorProto.ReservedRange DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new ReservedRange();
        DEFAULT_INSTANCE.makeImmutable();
      }

      public static com.google.protobuf.DescriptorProtos.DescriptorProto.ReservedRange getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static volatile com.google.protobuf.Parser<ReservedRange> PARSER;

      public static com.google.protobuf.Parser<ReservedRange> parser() {
        return DEFAULT_INSTANCE.getParserForType();
      }
    }

    private int bitField0_;
    public static final int NAME_FIELD_NUMBER = 1;
    private java.lang.String name_;
    /**
     * <code>optional string name = 1;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string name = 1;</code>
     */
    public java.lang.String getName() {
      return name_;
    }
    /**
     * <code>optional string name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(name_);
    }
    /**
     * <code>optional string name = 1;</code>
     */
    private void setName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      name_ = value;
    }
    /**
     * <code>optional string name = 1;</code>
     */
    private void clearName() {
      bitField0_ = (bitField0_ & ~0x00000001);
      name_ = getDefaultInstance().getName();
    }
    /**
     * <code>optional string name = 1;</code>
     */
    private void setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      name_ = value.toStringUtf8();
    }

    public static final int FIELD_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.ProtobufList<com.google.protobuf.DescriptorProtos.FieldDescriptorProto> field_;
    /**
     * <code>repeated .google.protobuf.FieldDescriptorProto field = 2;</code>
     */
    public java.util.List<com.google.protobuf.DescriptorProtos.FieldDescriptorProto> getFieldList() {
      return field_;
    }
    /**
     * <code>repeated .google.protobuf.FieldDescriptorProto field = 2;</code>
     */
    public java.util.List<? extends com.google.protobuf.DescriptorProtos.FieldDescriptorProtoOrBuilder>
        getFieldOrBuilderList() {
      return field_;
    }
    /**
     * <code>repeated .google.protobuf.FieldDescriptorProto field = 2;</code>
     */
    public int getFieldCount() {
      return field_.size();
    }
    /**
     * <code>repeated .google.protobuf.FieldDescriptorProto field = 2;</code>
     */
    public com.google.protobuf.DescriptorProtos.FieldDescriptorProto getField(int index) {
      return field_.get(index);
    }
    /**
     * <code>repeated .google.protobuf.FieldDescriptorProto field = 2;</code>
     */
    public com.google.protobuf.DescriptorProtos.FieldDescriptorProtoOrBuilder getFieldOrBuilder(
        int index) {
      return field_.get(index);
    }
    private void ensureFieldIsMutable() {
      if (!field_.isModifiable()) {
        field_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(field_);
       }
    }

    /**
     * <code>repeated .google.protobuf.FieldDescriptorProto field = 2;</code>
     */
    private void setField(
        int index, com.google.protobuf.DescriptorProtos.FieldDescriptorProto value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureFieldIsMutable();
      field_.set(index, value);
    }
    /**
     * <code>repeated .google.protobuf.FieldDescriptorProto field = 2;</code>
     */
    private void setField(
        int index, com.google.protobuf.DescriptorProtos.FieldDescriptorProto.Builder builderForValue) {
      ensureFieldIsMutable();
      field_.set(index, builderForValue.build());
    }
    /**
     * <code>repeated .google.protobuf.FieldDescriptorProto field = 2;</code>
     */
    private void addField(com.google.protobuf.DescriptorProtos.FieldDescriptorProto value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureFieldIsMutable();
      field_.add(value);
    }
    /**
     * <code>repeated .google.protobuf.FieldDescriptorProto field = 2;</code>
     */
    private void addField(
        int index, com.google.protobuf.DescriptorProtos.FieldDescriptorProto value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureFieldIsMutable();
      field_.add(index, value);
    }
    /**
     * <code>repeated .google.protobuf.FieldDescriptorProto field = 2;</code>
     */
    private void addField(
        com.google.protobuf.DescriptorProtos.FieldDescriptorProto.Builder builderForValue) {
      ensureFieldIsMutable();
      field_.add(builderForValue.build());
    }
    /**
     * <code>repeated .google.protobuf.FieldDescriptorProto field = 2;</code>
     */
    private void addField(
        int index, com.google.protobuf.DescriptorProtos.FieldDescriptorProto.Builder builderForValue) {
      ensureFieldIsMutable();
      field_.add(index, builderForValue.build());
    }
    /**
     * <code>repeated .google.protobuf.FieldDescriptorProto field = 2;</code>
     */
    private void addAllField(
        java.lang.Iterable<? extends com.google.protobuf.DescriptorProtos.FieldDescriptorProto> values) {
      ensureFieldIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, field_);
    }
    /**
     * <code>repeated .google.protobuf.FieldDescriptorProto field = 2;</code>
     */
    private void clearField() {
      field_ = emptyProtobufList();
    }
    /**
     * <code>repeated .google.protobuf.FieldDescriptorProto field = 2;</code>
     */
    private void removeField(int index) {
      ensureFieldIsMutable();
      field_.remove(index);
    }

    public static final int EXTENSION_FIELD_NUMBER = 6;
    private com.google.protobuf.Internal.ProtobufList<com.google.protobuf.DescriptorProtos.FieldDescriptorProto> extension_;
    /**
     * <code>repeated .google.protobuf.FieldDescriptorProto extension = 6;</code>
     */
    public java.util.List<com.google.protobuf.DescriptorProtos.FieldDescriptorProto> getExtensionList() {
      return extension_;
    }
    /**
     * <code>repeated .google.protobuf.FieldDescriptorProto extension = 6;</code>
     */
    public java.util.List<? extends com.google.protobuf.DescriptorProtos.FieldDescriptorProtoOrBuilder>
        getExtensionOrBuilderList() {
      return extension_;
    }
    /**
     * <code>repeated .google.protobuf.FieldDescriptorProto extension = 6;</code>
     */
    public int getExtensionCount() {
      return extension_.size();
    }
    /**
     * <code>repeated .google.protobuf.FieldDescriptorProto extension = 6;</code>
     */
    public com.google.protobuf.DescriptorProtos.FieldDescriptorProto getExtension(int index) {
      return extension_.get(index);
    }
    /**
     * <code>repeated .google.protobuf.FieldDescriptorProto extension = 6;</code>
     */
    public com.google.protobuf.DescriptorProtos.FieldDescriptorProtoOrBuilder getExtensionOrBuilder(
        int index) {
      return extension_.get(index);
    }
    private void ensureExtensionIsMutable() {
      if (!extension_.isModifiable()) {
        extension_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(extension_);
       }
    }

    /**
     * <code>repeated .google.protobuf.FieldDescriptorProto extension = 6;</code>
     */
    private void setExtension(
        int index, com.google.protobuf.DescriptorProtos.FieldDescriptorProto value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureExtensionIsMutable();
      extension_.set(index, value);
    }
    /**
     * <code>repeated .google.protobuf.FieldDescriptorProto extension = 6;</code>
     */
    private void setExtension(
        int index, com.google.protobuf.DescriptorProtos.FieldDescriptorProto.Builder builderForValue) {
      ensureExtensionIsMutable();
      extension_.set(index, builderForValue.build());
    }
    /**
     * <code>repeated .google.protobuf.FieldDescriptorProto extension = 6;</code>
     */
    private void addExtension(com.google.protobuf.DescriptorProtos.FieldDescriptorProto value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureExtensionIsMutable();
      extension_.add(value);
    }
    /**
     * <code>repeated .google.protobuf.FieldDescriptorProto extension = 6;</code>
     */
    private void addExtension(
        int index, com.google.protobuf.DescriptorProtos.FieldDescriptorProto value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureExtensionIsMutable();
      extension_.add(index, value);
    }
    /**
     * <code>repeated .google.protobuf.FieldDescriptorProto extension = 6;</code>
     */
    private void addExtension(
        com.google.protobuf.DescriptorProtos.FieldDescriptorProto.Builder builderForValue) {
      ensureExtensionIsMutable();
      extension_.add(builderForValue.build());
    }
    /**
     * <code>repeated .google.protobuf.FieldDescriptorProto extension = 6;</code>
     */
    private void addExtension(
        int index, com.google.protobuf.DescriptorProtos.FieldDescriptorProto.Builder builderForValue) {
      ensureExtensionIsMutable();
      extension_.add(index, builderForValue.build());
    }
    /**
     * <code>repeated .google.protobuf.FieldDescriptorProto extension = 6;</code>
     */
    private void addAllExtension(
        java.lang.Iterable<? extends com.google.protobuf.DescriptorProtos.FieldDescriptorProto> values) {
      ensureExtensionIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, extension_);
    }
    /**
     * <code>repeated .google.protobuf.FieldDescriptorProto extension = 6;</code>
     */
    private void clearExtension() {
      extension_ = emptyProtobufList();
    }
    /**
     * <code>repeated .google.protobuf.FieldDescriptorProto extension = 6;</code>
     */
    private void removeExtension(int index) {
      ensureExtensionIsMutable();
      extension_.remove(index);
    }

    public static final int NESTED_TYPE_FIELD_NUMBER = 3;
    private com.google.protobuf.Internal.ProtobufList<com.google.protobuf.DescriptorProtos.DescriptorProto> nestedType_;
    /**
     * <code>repeated .google.protobuf.DescriptorProto nested_type = 3;</code>
     */
    public java.util.List<com.google.protobuf.DescriptorProtos.DescriptorProto> getNestedTypeList() {
      return nestedType_;
    }
    /**
     * <code>repeated .google.protobuf.DescriptorProto nested_type = 3;</code>
     */
    public java.util.List<? extends com.google.protobuf.DescriptorProtos.DescriptorProtoOrBuilder>
        getNestedTypeOrBuilderList() {
      return nestedType_;
    }
    /**
     * <code>repeated .google.protobuf.DescriptorProto nested_type = 3;</code>
     */
    public int getNestedTypeCount() {
      return nestedType_.size();
    }
    /**
     * <code>repeated .google.protobuf.DescriptorProto nested_type = 3;</code>
     */
    public com.google.protobuf.DescriptorProtos.DescriptorProto getNestedType(int index) {
      return nestedType_.get(index);
    }
    /**
     * <code>repeated .google.protobuf.DescriptorProto nested_type = 3;</code>
     */
    public com.google.protobuf.DescriptorProtos.DescriptorProtoOrBuilder getNestedTypeOrBuilder(
        int index) {
      return nestedType_.get(index);
    }
    private void ensureNestedTypeIsMutable() {
      if (!nestedType_.isModifiable()) {
        nestedType_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(nestedType_);
       }
    }

    /**
     * <code>repeated .google.protobuf.DescriptorProto nested_type = 3;</code>
     */
    private void setNestedType(
        int index, com.google.protobuf.DescriptorProtos.DescriptorProto value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureNestedTypeIsMutable();
      nestedType_.set(index, value);
    }
    /**
     * <code>repeated .google.protobuf.DescriptorProto nested_type = 3;</code>
     */
    private void setNestedType(
        int index, com.google.protobuf.DescriptorProtos.DescriptorProto.Builder builderForValue) {
      ensureNestedTypeIsMutable();
      nestedType_.set(index, builderForValue.build());
    }
    /**
     * <code>repeated .google.protobuf.DescriptorProto nested_type = 3;</code>
     */
    private void addNestedType(com.google.protobuf.DescriptorProtos.DescriptorProto value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureNestedTypeIsMutable();
      nestedType_.add(value);
    }
    /**
     * <code>repeated .google.protobuf.DescriptorProto nested_type = 3;</code>
     */
    private void addNestedType(
        int index, com.google.protobuf.DescriptorProtos.DescriptorProto value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureNestedTypeIsMutable();
      nestedType_.add(index, value);
    }
    /**
     * <code>repeated .google.protobuf.DescriptorProto nested_type = 3;</code>
     */
    private void addNestedType(
        com.google.protobuf.DescriptorProtos.DescriptorProto.Builder builderForValue) {
      ensureNestedTypeIsMutable();
      nestedType_.add(builderForValue.build());
    }
    /**
     * <code>repeated .google.protobuf.DescriptorProto nested_type = 3;</code>
     */
    private void addNestedType(
        int index, com.google.protobuf.DescriptorProtos.DescriptorProto.Builder builderForValue) {
      ensureNestedTypeIsMutable();
      nestedType_.add(index, builderForValue.build());
    }
    /**
     * <code>repeated .google.protobuf.DescriptorProto nested_type = 3;</code>
     */
    private void addAllNestedType(
        java.lang.Iterable<? extends com.google.protobuf.DescriptorProtos.DescriptorProto> values) {
      ensureNestedTypeIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, nestedType_);
    }
    /**
     * <code>repeated .google.protobuf.DescriptorProto nested_type = 3;</code>
     */
    private void clearNestedType() {
      nestedType_ = emptyProtobufList();
    }
    /**
     * <code>repeated .google.protobuf.DescriptorProto nested_type = 3;</code>
     */
    private void removeNestedType(int index) {
      ensureNestedTypeIsMutable();
      nestedType_.remove(index);
    }

    public static final int ENUM_TYPE_FIELD_NUMBER = 4;
    private com.google.protobuf.Internal.ProtobufList<com.google.protobuf.DescriptorProtos.EnumDescriptorProto> enumType_;
    /**
     * <code>repeated .google.protobuf.EnumDescriptorProto enum_type = 4;</code>
     */
    public java.util.List<com.google.protobuf.DescriptorProtos.EnumDescriptorProto> getEnumTypeList() {
      return enumType_;
    }
    /**
     * <code>repeated .google.protobuf.EnumDescriptorProto enum_type = 4;</code>
     */
    public java.util.List<? extends com.google.protobuf.DescriptorProtos.EnumDescriptorProtoOrBuilder>
        getEnumTypeOrBuilderList() {
      return enumType_;
    }
    /**
     * <code>repeated .google.protobuf.EnumDescriptorProto enum_type = 4;</code>
     */
    public int getEnumTypeCount() {
      return enumType_.size();
    }
    /**
     * <code>repeated .google.protobuf.EnumDescriptorProto enum_type = 4;</code>
     */
    public com.google.protobuf.DescriptorProtos.EnumDescriptorProto getEnumType(int index) {
      return enumType_.get(index);
    }
    /**
     * <code>repeated .google.protobuf.EnumDescriptorProto enum_type = 4;</code>
     */
    public com.google.protobuf.DescriptorProtos.EnumDescriptorProtoOrBuilder getEnumTypeOrBuilder(
        int index) {
      return enumType_.get(index);
    }
    private void ensureEnumTypeIsMutable() {
      if (!enumType_.isModifiable()) {
        enumType_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(enumType_);
       }
    }

    /**
     * <code>repeated .google.protobuf.EnumDescriptorProto enum_type = 4;</code>
     */
    private void setEnumType(
        int index, com.google.protobuf.DescriptorProtos.EnumDescriptorProto value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureEnumTypeIsMutable();
      enumType_.set(index, value);
    }
    /**
     * <code>repeated .google.protobuf.EnumDescriptorProto enum_type = 4;</code>
     */
    private void setEnumType(
        int index, com.google.protobuf.DescriptorProtos.EnumDescriptorProto.Builder builderForValue) {
      ensureEnumTypeIsMutable();
      enumType_.set(index, builderForValue.build());
    }
    /**
     * <code>repeated .google.protobuf.EnumDescriptorProto enum_type = 4;</code>
     */
    private void addEnumType(com.google.protobuf.DescriptorProtos.EnumDescriptorProto value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureEnumTypeIsMutable();
      enumType_.add(value);
    }
    /**
     * <code>repeated .google.protobuf.EnumDescriptorProto enum_type = 4;</code>
     */
    private void addEnumType(
        int index, com.google.protobuf.DescriptorProtos.EnumDescriptorProto value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureEnumTypeIsMutable();
      enumType_.add(index, value);
    }
    /**
     * <code>repeated .google.protobuf.EnumDescriptorProto enum_type = 4;</code>
     */
    private void addEnumType(
        com.google.protobuf.DescriptorProtos.EnumDescriptorProto.Builder builderForValue) {
      ensureEnumTypeIsMutable();
      enumType_.add(builderForValue.build());
    }
    /**
     * <code>repeated .google.protobuf.EnumDescriptorProto enum_type = 4;</code>
     */
    private void addEnumType(
        int index, com.google.protobuf.DescriptorProtos.EnumDescriptorProto.Builder builderForValue) {
      ensureEnumTypeIsMutable();
      enumType_.add(index, builderForValue.build());
    }
    /**
     * <code>repeated .google.protobuf.EnumDescriptorProto enum_type = 4;</code>
     */
    private void addAllEnumType(
        java.lang.Iterable<? extends com.google.protobuf.DescriptorProtos.EnumDescriptorProto> values) {
      ensureEnumTypeIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, enumType_);
    }
    /**
     * <code>repeated .google.protobuf.EnumDescriptorProto enum_type = 4;</code>
     */
    private void clearEnumType() {
      enumType_ = emptyProtobufList();
    }
    /**
     * <code>repeated .google.protobuf.EnumDescriptorProto enum_type = 4;</code>
     */
    private void removeEnumType(int index) {
      ensureEnumTypeIsMutable();
      enumType_.remove(index);
    }

    public static final int EXTENSION_RANGE_FIELD_NUMBER = 5;
    private com.google.protobuf.Internal.ProtobufList<com.google.protobuf.DescriptorProtos.DescriptorProto.ExtensionRange> extensionRange_;
    /**
     * <code>repeated .google.protobuf.DescriptorProto.ExtensionRange extension_range = 5;</code>
     */
    public java.util.List<com.google.protobuf.DescriptorProtos.DescriptorProto.ExtensionRange> getExtensionRangeList() {
      return extensionRange_;
    }
    /**
     * <code>repeated .google.protobuf.DescriptorProto.ExtensionRange extension_range = 5;</code>
     */
    public java.util.List<? extends com.google.protobuf.DescriptorProtos.DescriptorProto.ExtensionRangeOrBuilder>
        getExtensionRangeOrBuilderList() {
      return extensionRange_;
    }
    /**
     * <code>repeated .google.protobuf.DescriptorProto.ExtensionRange extension_range = 5;</code>
     */
    public int getExtensionRangeCount() {
      return extensionRange_.size();
    }
    /**
     * <code>repeated .google.protobuf.DescriptorProto.ExtensionRange extension_range = 5;</code>
     */
    public com.google.protobuf.DescriptorProtos.DescriptorProto.ExtensionRange getExtensionRange(int index) {
      return extensionRange_.get(index);
    }
    /**
     * <code>repeated .google.protobuf.DescriptorProto.ExtensionRange extension_range = 5;</code>
     */
    public com.google.protobuf.DescriptorProtos.DescriptorProto.ExtensionRangeOrBuilder getExtensionRangeOrBuilder(
        int index) {
      return extensionRange_.get(index);
    }
    private void ensureExtensionRangeIsMutable() {
      if (!extensionRange_.isModifiable()) {
        extensionRange_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(extensionRange_);
       }
    }

    /**
     * <code>repeated .google.protobuf.DescriptorProto.ExtensionRange extension_range = 5;</code>
     */
    private void setExtensionRange(
        int index, com.google.protobuf.DescriptorProtos.DescriptorProto.ExtensionRange value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureExtensionRangeIsMutable();
      extensionRange_.set(index, value);
    }
    /**
     * <code>repeated .google.protobuf.DescriptorProto.ExtensionRange extension_range = 5;</code>
     */
    private void setExtensionRange(
        int index, com.google.protobuf.DescriptorProtos.DescriptorProto.ExtensionRange.Builder builderForValue) {
      ensureExtensionRangeIsMutable();
      extensionRange_.set(index, builderForValue.build());
    }
    /**
     * <code>repeated .google.protobuf.DescriptorProto.ExtensionRange extension_range = 5;</code>
     */
    private void addExtensionRange(com.google.protobuf.DescriptorProtos.DescriptorProto.ExtensionRange value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureExtensionRangeIsMutable();
      extensionRange_.add(value);
    }
    /**
     * <code>repeated .google.protobuf.DescriptorProto.ExtensionRange extension_range = 5;</code>
     */
    private void addExtensionRange(
        int index, com.google.protobuf.DescriptorProtos.DescriptorProto.ExtensionRange value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureExtensionRangeIsMutable();
      extensionRange_.add(index, value);
    }
    /**
     * <code>repeated .google.protobuf.DescriptorProto.ExtensionRange extension_range = 5;</code>
     */
    private void addExtensionRange(
        com.google.protobuf.DescriptorProtos.DescriptorProto.ExtensionRange.Builder builderForValue) {
      ensureExtensionRangeIsMutable();
      extensionRange_.add(builderForValue.build());
    }
    /**
     * <code>repeated .google.protobuf.DescriptorProto.ExtensionRange extension_range = 5;</code>
     */
    private void addExtensionRange(
        int index, com.google.protobuf.DescriptorProtos.DescriptorProto.ExtensionRange.Builder builderForValue) {
      ensureExtensionRangeIsMutable();
      extensionRange_.add(index, builderForValue.build());
    }
    /**
     * <code>repeated .google.protobuf.DescriptorProto.ExtensionRange extension_range = 5;</code>
     */
    private void addAllExtensionRange(
        java.lang.Iterable<? extends com.google.protobuf.DescriptorProtos.DescriptorProto.ExtensionRange> values) {
      ensureExtensionRangeIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, extensionRange_);
    }
    /**
     * <code>repeated .google.protobuf.DescriptorProto.ExtensionRange extension_range = 5;</code>
     */
    private void clearExtensionRange() {
      extensionRange_ = emptyProtobufList();
    }
    /**
     * <code>repeated .google.protobuf.DescriptorProto.ExtensionRange extension_range = 5;</code>
     */
    private void removeExtensionRange(int index) {
      ensureExtensionRangeIsMutable();
      extensionRange_.remove(index);
    }

    public static final int ONEOF_DECL_FIELD_NUMBER = 8;
    private com.google.protobuf.Internal.ProtobufList<com.google.protobuf.DescriptorProtos.OneofDescriptorProto> oneofDecl_;
    /**
     * <code>repeated .google.protobuf.OneofDescriptorProto oneof_decl = 8;</code>
     */
    public java.util.List<com.google.protobuf.DescriptorProtos.OneofDescriptorProto> getOneofDeclList() {
      return oneofDecl_;
    }
    /**
     * <code>repeated .google.protobuf.OneofDescriptorProto oneof_decl = 8;</code>
     */
    public java.util.List<? extends com.google.protobuf.DescriptorProtos.OneofDescriptorProtoOrBuilder>
        getOneofDeclOrBuilderList() {
      return oneofDecl_;
    }
    /**
     * <code>repeated .google.protobuf.OneofDescriptorProto oneof_decl = 8;</code>
     */
    public int getOneofDeclCount() {
      return oneofDecl_.size();
    }
    /**
     * <code>repeated .google.protobuf.OneofDescriptorProto oneof_decl = 8;</code>
     */
    public com.google.protobuf.DescriptorProtos.OneofDescriptorProto getOneofDecl(int index) {
      return oneofDecl_.get(index);
    }
    /**
     * <code>repeated .google.protobuf.OneofDescriptorProto oneof_decl = 8;</code>
     */
    public com.google.protobuf.DescriptorProtos.OneofDescriptorProtoOrBuilder getOneofDeclOrBuilder(
        int index) {
      return oneofDecl_.get(index);
    }
    private void ensureOneofDeclIsMutable() {
      if (!oneofDecl_.isModifiable()) {
        oneofDecl_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(oneofDecl_);
       }
    }

    /**
     * <code>repeated .google.protobuf.OneofDescriptorProto oneof_decl = 8;</code>
     */
    private void setOneofDecl(
        int index, com.google.protobuf.DescriptorProtos.OneofDescriptorProto value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureOneofDeclIsMutable();
      oneofDecl_.set(index, value);
    }
    /**
     * <code>repeated .google.protobuf.OneofDescriptorProto oneof_decl = 8;</code>
     */
    private void setOneofDecl(
        int index, com.google.protobuf.DescriptorProtos.OneofDescriptorProto.Builder builderForValue) {
      ensureOneofDeclIsMutable();
      oneofDecl_.set(index, builderForValue.build());
    }
    /**
     * <code>repeated .google.protobuf.OneofDescriptorProto oneof_decl = 8;</code>
     */
    private void addOneofDecl(com.google.protobuf.DescriptorProtos.OneofDescriptorProto value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureOneofDeclIsMutable();
      oneofDecl_.add(value);
    }
    /**
     * <code>repeated .google.protobuf.OneofDescriptorProto oneof_decl = 8;</code>
     */
    private void addOneofDecl(
        int index, com.google.protobuf.DescriptorProtos.OneofDescriptorProto value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureOneofDeclIsMutable();
      oneofDecl_.add(index, value);
    }
    /**
     * <code>repeated .google.protobuf.OneofDescriptorProto oneof_decl = 8;</code>
     */
    private void addOneofDecl(
        com.google.protobuf.DescriptorProtos.OneofDescriptorProto.Builder builderForValue) {
      ensureOneofDeclIsMutable();
      oneofDecl_.add(builderForValue.build());
    }
    /**
     * <code>repeated .google.protobuf.OneofDescriptorProto oneof_decl = 8;</code>
     */
    private void addOneofDecl(
        int index, com.google.protobuf.DescriptorProtos.OneofDescriptorProto.Builder builderForValue) {
      ensureOneofDeclIsMutable();
      oneofDecl_.add(index, builderForValue.build());
    }
    /**
     * <code>repeated .google.protobuf.OneofDescriptorProto oneof_decl = 8;</code>
     */
    private void addAllOneofDecl(
        java.lang.Iterable<? extends com.google.protobuf.DescriptorProtos.OneofDescriptorProto> values) {
      ensureOneofDeclIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, oneofDecl_);
    }
    /**
     * <code>repeated .google.protobuf.OneofDescriptorProto oneof_decl = 8;</code>
     */
    private void clearOneofDecl() {
      oneofDecl_ = emptyProtobufList();
    }
    /**
     * <code>repeated .google.protobuf.OneofDescriptorProto oneof_decl = 8;</code>
     */
    private void removeOneofDecl(int index) {
      ensureOneofDeclIsMutable();
      oneofDecl_.remove(index);
    }

    public static final int OPTIONS_FIELD_NUMBER = 7;
    private com.google.protobuf.DescriptorProtos.MessageOptions options_;
    /**
     * <code>optional .google.protobuf.MessageOptions options = 7;</code>
     */
    public boolean hasOptions() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .google.protobuf.MessageOptions options = 7;</code>
     */
    public com.google.protobuf.DescriptorProtos.MessageOptions getOptions() {
      return options_ == null ? com.google.protobuf.DescriptorProtos.MessageOptions.getDefaultInstance() : options_;
    }
    /**
     * <code>optional .google.protobuf.MessageOptions options = 7;</code>
     */
    private void setOptions(com.google.protobuf.DescriptorProtos.MessageOptions value) {
      if (value == null) {
        throw new NullPointerException();
      }
      options_ = value;
      bitField0_ |= 0x00000002;
      }
    /**
     * <code>optional .google.protobuf.MessageOptions options = 7;</code>
     */
    private void setOptions(
        com.google.protobuf.DescriptorProtos.MessageOptions.Builder builderForValue) {
      options_ = builderForValue.build();
      bitField0_ |= 0x00000002;
    }
    /**
     * <code>optional .google.protobuf.MessageOptions options = 7;</code>
     */
    private void mergeOptions(com.google.protobuf.DescriptorProtos.MessageOptions value) {
      if (options_ != null &&
          options_ != com.google.protobuf.DescriptorProtos.MessageOptions.getDefaultInstance()) {
        options_ =
          com.google.protobuf.DescriptorProtos.MessageOptions.newBuilder(options_).mergeFrom(value).buildPartial();
      } else {
        options_ = value;
      }
      bitField0_ |= 0x00000002;
    }
    /**
     * <code>optional .google.protobuf.MessageOptions options = 7;</code>
     */
    private void clearOptions() {  options_ = null;
      bitField0_ = (bitField0_ & ~0x00000002);
    }

    public static final int RESERVED_RANGE_FIELD_NUMBER = 9;
    private com.google.protobuf.Internal.ProtobufList<com.google.protobuf.DescriptorProtos.DescriptorProto.ReservedRange> reservedRange_;
    /**
     * <code>repeated .google.protobuf.DescriptorProto.ReservedRange reserved_range = 9;</code>
     */
    public java.util.List<com.google.protobuf.DescriptorProtos.DescriptorProto.ReservedRange> getReservedRangeList() {
      return reservedRange_;
    }
    /**
     * <code>repeated .google.protobuf.DescriptorProto.ReservedRange reserved_range = 9;</code>
     */
    public java.util.List<? extends com.google.protobuf.DescriptorProtos.DescriptorProto.ReservedRangeOrBuilder>
        getReservedRangeOrBuilderList() {
      return reservedRange_;
    }
    /**
     * <code>repeated .google.protobuf.DescriptorProto.ReservedRange reserved_range = 9;</code>
     */
    public int getReservedRangeCount() {
      return reservedRange_.size();
    }
    /**
     * <code>repeated .google.protobuf.DescriptorProto.ReservedRange reserved_range = 9;</code>
     */
    public com.google.protobuf.DescriptorProtos.DescriptorProto.ReservedRange getReservedRange(int index) {
      return reservedRange_.get(index);
    }
    /**
     * <code>repeated .google.protobuf.DescriptorProto.ReservedRange reserved_range = 9;</code>
     */
    public com.google.protobuf.DescriptorProtos.DescriptorProto.ReservedRangeOrBuilder getReservedRangeOrBuilder(
        int index) {
      return reservedRange_.get(index);
    }
    private void ensureReservedRangeIsMutable() {
      if (!reservedRange_.isModifiable()) {
        reservedRange_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(reservedRange_);
       }
    }

    /**
     * <code>repeated .google.protobuf.DescriptorProto.ReservedRange reserved_range = 9;</code>
     */
    private void setReservedRange(
        int index, com.google.protobuf.DescriptorProtos.DescriptorProto.ReservedRange value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureReservedRangeIsMutable();
      reservedRange_.set(index, value);
    }
    /**
     * <code>repeated .google.protobuf.DescriptorProto.ReservedRange reserved_range = 9;</code>
     */
    private void setReservedRange(
        int index, com.google.protobuf.DescriptorProtos.DescriptorProto.ReservedRange.Builder builderForValue) {
      ensureReservedRangeIsMutable();
      reservedRange_.set(index, builderForValue.build());
    }
    /**
     * <code>repeated .google.protobuf.DescriptorProto.ReservedRange reserved_range = 9;</code>
     */
    private void addReservedRange(com.google.protobuf.DescriptorProtos.DescriptorProto.ReservedRange value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureReservedRangeIsMutable();
      reservedRange_.add(value);
    }
    /**
     * <code>repeated .google.protobuf.DescriptorProto.ReservedRange reserved_range = 9;</code>
     */
    private void addReservedRange(
        int index, com.google.protobuf.DescriptorProtos.DescriptorProto.ReservedRange value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureReservedRangeIsMutable();
      reservedRange_.add(index, value);
    }
    /**
     * <code>repeated .google.protobuf.DescriptorProto.ReservedRange reserved_range = 9;</code>
     */
    private void addReservedRange(
        com.google.protobuf.DescriptorProtos.DescriptorProto.ReservedRange.Builder builderForValue) {
      ensureReservedRangeIsMutable();
      reservedRange_.add(builderForValue.build());
    }
    /**
     * <code>repeated .google.protobuf.DescriptorProto.ReservedRange reserved_range = 9;</code>
     */
    private void addReservedRange(
        int index, com.google.protobuf.DescriptorProtos.DescriptorProto.ReservedRange.Builder builderForValue) {
      ensureReservedRangeIsMutable();
      reservedRange_.add(index, builderForValue.build());
    }
    /**
     * <code>repeated .google.protobuf.DescriptorProto.ReservedRange reserved_range = 9;</code>
     */
    private void addAllReservedRange(
        java.lang.Iterable<? extends com.google.protobuf.DescriptorProtos.DescriptorProto.ReservedRange> values) {
      ensureReservedRangeIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, reservedRange_);
    }
    /**
     * <code>repeated .google.protobuf.DescriptorProto.ReservedRange reserved_range = 9;</code>
     */
    private void clearReservedRange() {
      reservedRange_ = emptyProtobufList();
    }
    /**
     * <code>repeated .google.protobuf.DescriptorProto.ReservedRange reserved_range = 9;</code>
     */
    private void removeReservedRange(int index) {
      ensureReservedRangeIsMutable();
      reservedRange_.remove(index);
    }

    public static final int RESERVED_NAME_FIELD_NUMBER = 10;
    private com.google.protobuf.Internal.ProtobufList<String> reservedName_;
    /**
     * <pre>
     * Reserved field names, which may not be used by fields in the same message.
     * A given name may only be reserved once.
     * </pre>
     *
     * <code>repeated string reserved_name = 10;</code>
     */
    public java.util.List<String> getReservedNameList() {
      return reservedName_;
    }
    /**
     * <pre>
     * Reserved field names, which may not be used by fields in the same message.
     * A given name may only be reserved once.
     * </pre>
     *
     * <code>repeated string reserved_name = 10;</code>
     */
    public int getReservedNameCount() {
      return reservedName_.size();
    }
    /**
     * <pre>
     * Reserved field names, which may not be used by fields in the same message.
     * A given name may only be reserved once.
     * </pre>
     *
     * <code>repeated string reserved_name = 10;</code>
     */
    public java.lang.String getReservedName(int index) {
      return reservedName_.get(index);
    }
    /**
     * <pre>
     * Reserved field names, which may not be used by fields in the same message.
     * A given name may only be reserved once.
     * </pre>
     *
     * <code>repeated string reserved_name = 10;</code>
     */
    public com.google.protobuf.ByteString
        getReservedNameBytes(int index) {
      return com.google.protobuf.ByteString.copyFromUtf8(
          reservedName_.get(index));
    }
    private void ensureReservedNameIsMutable() {
      if (!reservedName_.isModifiable()) {
        reservedName_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(reservedName_);
       }
    }
    /**
     * <pre>
     * Reserved field names, which may not be used by fields in the same message.
     * A given name may only be reserved once.
     * </pre>
     *
     * <code>repeated string reserved_name = 10;</code>
     */
    private void setReservedName(
        int index, java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureReservedNameIsMutable();
      reservedName_.set(index, value);
    }
    /**
     * <pre>
     * Reserved field names, which may not be used by fields in the same message.
     * A given name may only be reserved once.
     * </pre>
     *
     * <code>repeated string reserved_name = 10;</code>
     */
    private void addReservedName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureReservedNameIsMutable();
      reservedName_.add(value);
    }
    /**
     * <pre>
     * Reserved field names, which may not be used by fields in the same message.
     * A given name may only be reserved once.
     * </pre>
     *
     * <code>repeated string reserved_name = 10;</code>
     */
    private void addAllReservedName(
        java.lang.Iterable<java.lang.String> values) {
      ensureReservedNameIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, reservedName_);
    }
    /**
     * <pre>
     * Reserved field names, which may not be used by fields in the same message.
     * A given name may only be reserved once.
     * </pre>
     *
     * <code>repeated string reserved_name = 10;</code>
     */
    private void clearReservedName() {
      reservedName_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
    }
    /**
     * <pre>
     * Reserved field names, which may not be used by fields in the same message.
     * A given name may only be reserved once.
     * </pre>
     *
     * <code>repeated string reserved_name = 10;</code>
     */
    private void addReservedNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureReservedNameIsMutable();
      reservedName_.add(value.toStringUtf8());
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeString(1, getName());
      }
      for (int i = 0; i < field_.size(); i++) {
        output.writeMessage(2, field_.get(i));
      }
      for (int i = 0; i < nestedType_.size(); i++) {
        output.writeMessage(3, nestedType_.get(i));
      }
      for (int i = 0; i < enumType_.size(); i++) {
        output.writeMessage(4, enumType_.get(i));
      }
      for (int i = 0; i < extensionRange_.size(); i++) {
        output.writeMessage(5, extensionRange_.get(i));
      }
      for (int i = 0; i < extension_.size(); i++) {
        output.writeMessage(6, extension_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(7, getOptions());
      }
      for (int i = 0; i < oneofDecl_.size(); i++) {
        output.writeMessage(8, oneofDecl_.get(i));
      }
      for (int i = 0; i < reservedRange_.size(); i++) {
        output.writeMessage(9, reservedRange_.get(i));
      }
      for (int i = 0; i < reservedName_.size(); i++) {
        output.writeString(10, reservedName_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getName());
      }
      for (int i = 0; i < field_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, field_.get(i));
      }
      for (int i = 0; i < nestedType_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, nestedType_.get(i));
      }
      for (int i = 0; i < enumType_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, enumType_.get(i));
      }
      for (int i = 0; i < extensionRange_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, extensionRange_.get(i));
      }
      for (int i = 0; i < extension_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, extension_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getOptions());
      }
      for (int i = 0; i < oneofDecl_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, oneofDecl_.get(i));
      }
      for (int i = 0; i < reservedRange_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, reservedRange_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < reservedName_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeStringSizeNoTag(reservedName_.get(i));
        }
        size += dataSize;
        size += 1 * getReservedNameList().size();
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.google.protobuf.DescriptorProtos.DescriptorProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.google.protobuf.DescriptorProtos.DescriptorProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.google.protobuf.DescriptorProtos.DescriptorProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.google.protobuf.DescriptorProtos.DescriptorProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.google.protobuf.DescriptorProtos.DescriptorProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.google.protobuf.DescriptorProtos.DescriptorProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.google.protobuf.DescriptorProtos.DescriptorProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.google.protobuf.DescriptorProtos.DescriptorProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.google.protobuf.DescriptorProtos.DescriptorProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.google.protobuf.DescriptorProtos.DescriptorProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.protobuf.DescriptorProtos.DescriptorProto prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * Describes a message type.
     * </pre>
     *
     * Protobuf type {@code google.protobuf.DescriptorProto}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.google.protobuf.DescriptorProtos.DescriptorProto, Builder> implements
        // @@protoc_insertion_point(builder_implements:google.protobuf.DescriptorProto)
        com.google.protobuf.DescriptorProtos.DescriptorProtoOrBuilder {
      // Construct using com.google.protobuf.DescriptorProtos.DescriptorProto.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional string name = 1;</code>
       */
      public boolean hasName() {
        return instance.hasName();
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public java.lang.String getName() {
        return instance.getName();
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        return instance.getNameBytes();
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public Builder setName(
          java.lang.String value) {
        copyOnWrite();
        instance.setName(value);
        return this;
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public Builder clearName() {
        copyOnWrite();
        instance.clearName();
        return this;
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setNameBytes(value);
        return this;
      }

      /**
       * <code>repeated .google.protobuf.FieldDescriptorProto field = 2;</code>
       */
      public java.util.List<com.google.protobuf.DescriptorProtos.FieldDescriptorProto> getFieldList() {
        return java.util.Collections.unmodifiableList(
            instance.getFieldList());
      }
      /**
       * <code>repeated .google.protobuf.FieldDescriptorProto field = 2;</code>
       */
      public int getFieldCount() {
        return instance.getFieldCount();
      }/**
       * <code>repeated .google.protobuf.FieldDescriptorProto field = 2;</code>
       */
      public com.google.protobuf.DescriptorProtos.FieldDescriptorProto getField(int index) {
        return instance.getField(index);
      }
      /**
       * <code>repeated .google.protobuf.FieldDescriptorProto field = 2;</code>
       */
      public Builder setField(
          int index, com.google.protobuf.DescriptorProtos.FieldDescriptorProto value) {
        copyOnWrite();
        instance.setField(index, value);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.FieldDescriptorProto field = 2;</code>
       */
      public Builder setField(
          int index, com.google.protobuf.DescriptorProtos.FieldDescriptorProto.Builder builderForValue) {
        copyOnWrite();
        instance.setField(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.FieldDescriptorProto field = 2;</code>
       */
      public Builder addField(com.google.protobuf.DescriptorProtos.FieldDescriptorProto value) {
        copyOnWrite();
        instance.addField(value);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.FieldDescriptorProto field = 2;</code>
       */
      public Builder addField(
          int index, com.google.protobuf.DescriptorProtos.FieldDescriptorProto value) {
        copyOnWrite();
        instance.addField(index, value);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.FieldDescriptorProto field = 2;</code>
       */
      public Builder addField(
          com.google.protobuf.DescriptorProtos.FieldDescriptorProto.Builder builderForValue) {
        copyOnWrite();
        instance.addField(builderForValue);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.FieldDescriptorProto field = 2;</code>
       */
      public Builder addField(
          int index, com.google.protobuf.DescriptorProtos.FieldDescriptorProto.Builder builderForValue) {
        copyOnWrite();
        instance.addField(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.FieldDescriptorProto field = 2;</code>
       */
      public Builder addAllField(
          java.lang.Iterable<? extends com.google.protobuf.DescriptorProtos.FieldDescriptorProto> values) {
        copyOnWrite();
        instance.addAllField(values);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.FieldDescriptorProto field = 2;</code>
       */
      public Builder clearField() {
        copyOnWrite();
        instance.clearField();
        return this;
      }
      /**
       * <code>repeated .google.protobuf.FieldDescriptorProto field = 2;</code>
       */
      public Builder removeField(int index) {
        copyOnWrite();
        instance.removeField(index);
        return this;
      }

      /**
       * <code>repeated .google.protobuf.FieldDescriptorProto extension = 6;</code>
       */
      public java.util.List<com.google.protobuf.DescriptorProtos.FieldDescriptorProto> getExtensionList() {
        return java.util.Collections.unmodifiableList(
            instance.getExtensionList());
      }
      /**
       * <code>repeated .google.protobuf.FieldDescriptorProto extension = 6;</code>
       */
      public int getExtensionCount() {
        return instance.getExtensionCount();
      }/**
       * <code>repeated .google.protobuf.FieldDescriptorProto extension = 6;</code>
       */
      public com.google.protobuf.DescriptorProtos.FieldDescriptorProto getExtension(int index) {
        return instance.getExtension(index);
      }
      /**
       * <code>repeated .google.protobuf.FieldDescriptorProto extension = 6;</code>
       */
      public Builder setExtension(
          int index, com.google.protobuf.DescriptorProtos.FieldDescriptorProto value) {
        copyOnWrite();
        instance.setExtension(index, value);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.FieldDescriptorProto extension = 6;</code>
       */
      public Builder setExtension(
          int index, com.google.protobuf.DescriptorProtos.FieldDescriptorProto.Builder builderForValue) {
        copyOnWrite();
        instance.setExtension(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.FieldDescriptorProto extension = 6;</code>
       */
      public Builder addExtension(com.google.protobuf.DescriptorProtos.FieldDescriptorProto value) {
        copyOnWrite();
        instance.addExtension(value);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.FieldDescriptorProto extension = 6;</code>
       */
      public Builder addExtension(
          int index, com.google.protobuf.DescriptorProtos.FieldDescriptorProto value) {
        copyOnWrite();
        instance.addExtension(index, value);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.FieldDescriptorProto extension = 6;</code>
       */
      public Builder addExtension(
          com.google.protobuf.DescriptorProtos.FieldDescriptorProto.Builder builderForValue) {
        copyOnWrite();
        instance.addExtension(builderForValue);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.FieldDescriptorProto extension = 6;</code>
       */
      public Builder addExtension(
          int index, com.google.protobuf.DescriptorProtos.FieldDescriptorProto.Builder builderForValue) {
        copyOnWrite();
        instance.addExtension(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.FieldDescriptorProto extension = 6;</code>
       */
      public Builder addAllExtension(
          java.lang.Iterable<? extends com.google.protobuf.DescriptorProtos.FieldDescriptorProto> values) {
        copyOnWrite();
        instance.addAllExtension(values);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.FieldDescriptorProto extension = 6;</code>
       */
      public Builder clearExtension() {
        copyOnWrite();
        instance.clearExtension();
        return this;
      }
      /**
       * <code>repeated .google.protobuf.FieldDescriptorProto extension = 6;</code>
       */
      public Builder removeExtension(int index) {
        copyOnWrite();
        instance.removeExtension(index);
        return this;
      }

      /**
       * <code>repeated .google.protobuf.DescriptorProto nested_type = 3;</code>
       */
      public java.util.List<com.google.protobuf.DescriptorProtos.DescriptorProto> getNestedTypeList() {
        return java.util.Collections.unmodifiableList(
            instance.getNestedTypeList());
      }
      /**
       * <code>repeated .google.protobuf.DescriptorProto nested_type = 3;</code>
       */
      public int getNestedTypeCount() {
        return instance.getNestedTypeCount();
      }/**
       * <code>repeated .google.protobuf.DescriptorProto nested_type = 3;</code>
       */
      public com.google.protobuf.DescriptorProtos.DescriptorProto getNestedType(int index) {
        return instance.getNestedType(index);
      }
      /**
       * <code>repeated .google.protobuf.DescriptorProto nested_type = 3;</code>
       */
      public Builder setNestedType(
          int index, com.google.protobuf.DescriptorProtos.DescriptorProto value) {
        copyOnWrite();
        instance.setNestedType(index, value);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.DescriptorProto nested_type = 3;</code>
       */
      public Builder setNestedType(
          int index, com.google.protobuf.DescriptorProtos.DescriptorProto.Builder builderForValue) {
        copyOnWrite();
        instance.setNestedType(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.DescriptorProto nested_type = 3;</code>
       */
      public Builder addNestedType(com.google.protobuf.DescriptorProtos.DescriptorProto value) {
        copyOnWrite();
        instance.addNestedType(value);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.DescriptorProto nested_type = 3;</code>
       */
      public Builder addNestedType(
          int index, com.google.protobuf.DescriptorProtos.DescriptorProto value) {
        copyOnWrite();
        instance.addNestedType(index, value);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.DescriptorProto nested_type = 3;</code>
       */
      public Builder addNestedType(
          com.google.protobuf.DescriptorProtos.DescriptorProto.Builder builderForValue) {
        copyOnWrite();
        instance.addNestedType(builderForValue);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.DescriptorProto nested_type = 3;</code>
       */
      public Builder addNestedType(
          int index, com.google.protobuf.DescriptorProtos.DescriptorProto.Builder builderForValue) {
        copyOnWrite();
        instance.addNestedType(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.DescriptorProto nested_type = 3;</code>
       */
      public Builder addAllNestedType(
          java.lang.Iterable<? extends com.google.protobuf.DescriptorProtos.DescriptorProto> values) {
        copyOnWrite();
        instance.addAllNestedType(values);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.DescriptorProto nested_type = 3;</code>
       */
      public Builder clearNestedType() {
        copyOnWrite();
        instance.clearNestedType();
        return this;
      }
      /**
       * <code>repeated .google.protobuf.DescriptorProto nested_type = 3;</code>
       */
      public Builder removeNestedType(int index) {
        copyOnWrite();
        instance.removeNestedType(index);
        return this;
      }

      /**
       * <code>repeated .google.protobuf.EnumDescriptorProto enum_type = 4;</code>
       */
      public java.util.List<com.google.protobuf.DescriptorProtos.EnumDescriptorProto> getEnumTypeList() {
        return java.util.Collections.unmodifiableList(
            instance.getEnumTypeList());
      }
      /**
       * <code>repeated .google.protobuf.EnumDescriptorProto enum_type = 4;</code>
       */
      public int getEnumTypeCount() {
        return instance.getEnumTypeCount();
      }/**
       * <code>repeated .google.protobuf.EnumDescriptorProto enum_type = 4;</code>
       */
      public com.google.protobuf.DescriptorProtos.EnumDescriptorProto getEnumType(int index) {
        return instance.getEnumType(index);
      }
      /**
       * <code>repeated .google.protobuf.EnumDescriptorProto enum_type = 4;</code>
       */
      public Builder setEnumType(
          int index, com.google.protobuf.DescriptorProtos.EnumDescriptorProto value) {
        copyOnWrite();
        instance.setEnumType(index, value);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.EnumDescriptorProto enum_type = 4;</code>
       */
      public Builder setEnumType(
          int index, com.google.protobuf.DescriptorProtos.EnumDescriptorProto.Builder builderForValue) {
        copyOnWrite();
        instance.setEnumType(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.EnumDescriptorProto enum_type = 4;</code>
       */
      public Builder addEnumType(com.google.protobuf.DescriptorProtos.EnumDescriptorProto value) {
        copyOnWrite();
        instance.addEnumType(value);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.EnumDescriptorProto enum_type = 4;</code>
       */
      public Builder addEnumType(
          int index, com.google.protobuf.DescriptorProtos.EnumDescriptorProto value) {
        copyOnWrite();
        instance.addEnumType(index, value);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.EnumDescriptorProto enum_type = 4;</code>
       */
      public Builder addEnumType(
          com.google.protobuf.DescriptorProtos.EnumDescriptorProto.Builder builderForValue) {
        copyOnWrite();
        instance.addEnumType(builderForValue);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.EnumDescriptorProto enum_type = 4;</code>
       */
      public Builder addEnumType(
          int index, com.google.protobuf.DescriptorProtos.EnumDescriptorProto.Builder builderForValue) {
        copyOnWrite();
        instance.addEnumType(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.EnumDescriptorProto enum_type = 4;</code>
       */
      public Builder addAllEnumType(
          java.lang.Iterable<? extends com.google.protobuf.DescriptorProtos.EnumDescriptorProto> values) {
        copyOnWrite();
        instance.addAllEnumType(values);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.EnumDescriptorProto enum_type = 4;</code>
       */
      public Builder clearEnumType() {
        copyOnWrite();
        instance.clearEnumType();
        return this;
      }
      /**
       * <code>repeated .google.protobuf.EnumDescriptorProto enum_type = 4;</code>
       */
      public Builder removeEnumType(int index) {
        copyOnWrite();
        instance.removeEnumType(index);
        return this;
      }

      /**
       * <code>repeated .google.protobuf.DescriptorProto.ExtensionRange extension_range = 5;</code>
       */
      public java.util.List<com.google.protobuf.DescriptorProtos.DescriptorProto.ExtensionRange> getExtensionRangeList() {
        return java.util.Collections.unmodifiableList(
            instance.getExtensionRangeList());
      }
      /**
       * <code>repeated .google.protobuf.DescriptorProto.ExtensionRange extension_range = 5;</code>
       */
      public int getExtensionRangeCount() {
        return instance.getExtensionRangeCount();
      }/**
       * <code>repeated .google.protobuf.DescriptorProto.ExtensionRange extension_range = 5;</code>
       */
      public com.google.protobuf.DescriptorProtos.DescriptorProto.ExtensionRange getExtensionRange(int index) {
        return instance.getExtensionRange(index);
      }
      /**
       * <code>repeated .google.protobuf.DescriptorProto.ExtensionRange extension_range = 5;</code>
       */
      public Builder setExtensionRange(
          int index, com.google.protobuf.DescriptorProtos.DescriptorProto.ExtensionRange value) {
        copyOnWrite();
        instance.setExtensionRange(index, value);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.DescriptorProto.ExtensionRange extension_range = 5;</code>
       */
      public Builder setExtensionRange(
          int index, com.google.protobuf.DescriptorProtos.DescriptorProto.ExtensionRange.Builder builderForValue) {
        copyOnWrite();
        instance.setExtensionRange(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.DescriptorProto.ExtensionRange extension_range = 5;</code>
       */
      public Builder addExtensionRange(com.google.protobuf.DescriptorProtos.DescriptorProto.ExtensionRange value) {
        copyOnWrite();
        instance.addExtensionRange(value);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.DescriptorProto.ExtensionRange extension_range = 5;</code>
       */
      public Builder addExtensionRange(
          int index, com.google.protobuf.DescriptorProtos.DescriptorProto.ExtensionRange value) {
        copyOnWrite();
        instance.addExtensionRange(index, value);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.DescriptorProto.ExtensionRange extension_range = 5;</code>
       */
      public Builder addExtensionRange(
          com.google.protobuf.DescriptorProtos.DescriptorProto.ExtensionRange.Builder builderForValue) {
        copyOnWrite();
        instance.addExtensionRange(builderForValue);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.DescriptorProto.ExtensionRange extension_range = 5;</code>
       */
      public Builder addExtensionRange(
          int index, com.google.protobuf.DescriptorProtos.DescriptorProto.ExtensionRange.Builder builderForValue) {
        copyOnWrite();
        instance.addExtensionRange(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.DescriptorProto.ExtensionRange extension_range = 5;</code>
       */
      public Builder addAllExtensionRange(
          java.lang.Iterable<? extends com.google.protobuf.DescriptorProtos.DescriptorProto.ExtensionRange> values) {
        copyOnWrite();
        instance.addAllExtensionRange(values);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.DescriptorProto.ExtensionRange extension_range = 5;</code>
       */
      public Builder clearExtensionRange() {
        copyOnWrite();
        instance.clearExtensionRange();
        return this;
      }
      /**
       * <code>repeated .google.protobuf.DescriptorProto.ExtensionRange extension_range = 5;</code>
       */
      public Builder removeExtensionRange(int index) {
        copyOnWrite();
        instance.removeExtensionRange(index);
        return this;
      }

      /**
       * <code>repeated .google.protobuf.OneofDescriptorProto oneof_decl = 8;</code>
       */
      public java.util.List<com.google.protobuf.DescriptorProtos.OneofDescriptorProto> getOneofDeclList() {
        return java.util.Collections.unmodifiableList(
            instance.getOneofDeclList());
      }
      /**
       * <code>repeated .google.protobuf.OneofDescriptorProto oneof_decl = 8;</code>
       */
      public int getOneofDeclCount() {
        return instance.getOneofDeclCount();
      }/**
       * <code>repeated .google.protobuf.OneofDescriptorProto oneof_decl = 8;</code>
       */
      public com.google.protobuf.DescriptorProtos.OneofDescriptorProto getOneofDecl(int index) {
        return instance.getOneofDecl(index);
      }
      /**
       * <code>repeated .google.protobuf.OneofDescriptorProto oneof_decl = 8;</code>
       */
      public Builder setOneofDecl(
          int index, com.google.protobuf.DescriptorProtos.OneofDescriptorProto value) {
        copyOnWrite();
        instance.setOneofDecl(index, value);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.OneofDescriptorProto oneof_decl = 8;</code>
       */
      public Builder setOneofDecl(
          int index, com.google.protobuf.DescriptorProtos.OneofDescriptorProto.Builder builderForValue) {
        copyOnWrite();
        instance.setOneofDecl(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.OneofDescriptorProto oneof_decl = 8;</code>
       */
      public Builder addOneofDecl(com.google.protobuf.DescriptorProtos.OneofDescriptorProto value) {
        copyOnWrite();
        instance.addOneofDecl(value);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.OneofDescriptorProto oneof_decl = 8;</code>
       */
      public Builder addOneofDecl(
          int index, com.google.protobuf.DescriptorProtos.OneofDescriptorProto value) {
        copyOnWrite();
        instance.addOneofDecl(index, value);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.OneofDescriptorProto oneof_decl = 8;</code>
       */
      public Builder addOneofDecl(
          com.google.protobuf.DescriptorProtos.OneofDescriptorProto.Builder builderForValue) {
        copyOnWrite();
        instance.addOneofDecl(builderForValue);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.OneofDescriptorProto oneof_decl = 8;</code>
       */
      public Builder addOneofDecl(
          int index, com.google.protobuf.DescriptorProtos.OneofDescriptorProto.Builder builderForValue) {
        copyOnWrite();
        instance.addOneofDecl(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.OneofDescriptorProto oneof_decl = 8;</code>
       */
      public Builder addAllOneofDecl(
          java.lang.Iterable<? extends com.google.protobuf.DescriptorProtos.OneofDescriptorProto> values) {
        copyOnWrite();
        instance.addAllOneofDecl(values);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.OneofDescriptorProto oneof_decl = 8;</code>
       */
      public Builder clearOneofDecl() {
        copyOnWrite();
        instance.clearOneofDecl();
        return this;
      }
      /**
       * <code>repeated .google.protobuf.OneofDescriptorProto oneof_decl = 8;</code>
       */
      public Builder removeOneofDecl(int index) {
        copyOnWrite();
        instance.removeOneofDecl(index);
        return this;
      }

      /**
       * <code>optional .google.protobuf.MessageOptions options = 7;</code>
       */
      public boolean hasOptions() {
        return instance.hasOptions();
      }
      /**
       * <code>optional .google.protobuf.MessageOptions options = 7;</code>
       */
      public com.google.protobuf.DescriptorProtos.MessageOptions getOptions() {
        return instance.getOptions();
      }
      /**
       * <code>optional .google.protobuf.MessageOptions options = 7;</code>
       */
      public Builder setOptions(com.google.protobuf.DescriptorProtos.MessageOptions value) {
        copyOnWrite();
        instance.setOptions(value);
        return this;
        }
      /**
       * <code>optional .google.protobuf.MessageOptions options = 7;</code>
       */
      public Builder setOptions(
          com.google.protobuf.DescriptorProtos.MessageOptions.Builder builderForValue) {
        copyOnWrite();
        instance.setOptions(builderForValue);
        return this;
      }
      /**
       * <code>optional .google.protobuf.MessageOptions options = 7;</code>
       */
      public Builder mergeOptions(com.google.protobuf.DescriptorProtos.MessageOptions value) {
        copyOnWrite();
        instance.mergeOptions(value);
        return this;
      }
      /**
       * <code>optional .google.protobuf.MessageOptions options = 7;</code>
       */
      public Builder clearOptions() {  copyOnWrite();
        instance.clearOptions();
        return this;
      }

      /**
       * <code>repeated .google.protobuf.DescriptorProto.ReservedRange reserved_range = 9;</code>
       */
      public java.util.List<com.google.protobuf.DescriptorProtos.DescriptorProto.ReservedRange> getReservedRangeList() {
        return java.util.Collections.unmodifiableList(
            instance.getReservedRangeList());
      }
      /**
       * <code>repeated .google.protobuf.DescriptorProto.ReservedRange reserved_range = 9;</code>
       */
      public int getReservedRangeCount() {
        return instance.getReservedRangeCount();
      }/**
       * <code>repeated .google.protobuf.DescriptorProto.ReservedRange reserved_range = 9;</code>
       */
      public com.google.protobuf.DescriptorProtos.DescriptorProto.ReservedRange getReservedRange(int index) {
        return instance.getReservedRange(index);
      }
      /**
       * <code>repeated .google.protobuf.DescriptorProto.ReservedRange reserved_range = 9;</code>
       */
      public Builder setReservedRange(
          int index, com.google.protobuf.DescriptorProtos.DescriptorProto.ReservedRange value) {
        copyOnWrite();
        instance.setReservedRange(index, value);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.DescriptorProto.ReservedRange reserved_range = 9;</code>
       */
      public Builder setReservedRange(
          int index, com.google.protobuf.DescriptorProtos.DescriptorProto.ReservedRange.Builder builderForValue) {
        copyOnWrite();
        instance.setReservedRange(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.DescriptorProto.ReservedRange reserved_range = 9;</code>
       */
      public Builder addReservedRange(com.google.protobuf.DescriptorProtos.DescriptorProto.ReservedRange value) {
        copyOnWrite();
        instance.addReservedRange(value);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.DescriptorProto.ReservedRange reserved_range = 9;</code>
       */
      public Builder addReservedRange(
          int index, com.google.protobuf.DescriptorProtos.DescriptorProto.ReservedRange value) {
        copyOnWrite();
        instance.addReservedRange(index, value);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.DescriptorProto.ReservedRange reserved_range = 9;</code>
       */
      public Builder addReservedRange(
          com.google.protobuf.DescriptorProtos.DescriptorProto.ReservedRange.Builder builderForValue) {
        copyOnWrite();
        instance.addReservedRange(builderForValue);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.DescriptorProto.ReservedRange reserved_range = 9;</code>
       */
      public Builder addReservedRange(
          int index, com.google.protobuf.DescriptorProtos.DescriptorProto.ReservedRange.Builder builderForValue) {
        copyOnWrite();
        instance.addReservedRange(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.DescriptorProto.ReservedRange reserved_range = 9;</code>
       */
      public Builder addAllReservedRange(
          java.lang.Iterable<? extends com.google.protobuf.DescriptorProtos.DescriptorProto.ReservedRange> values) {
        copyOnWrite();
        instance.addAllReservedRange(values);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.DescriptorProto.ReservedRange reserved_range = 9;</code>
       */
      public Builder clearReservedRange() {
        copyOnWrite();
        instance.clearReservedRange();
        return this;
      }
      /**
       * <code>repeated .google.protobuf.DescriptorProto.ReservedRange reserved_range = 9;</code>
       */
      public Builder removeReservedRange(int index) {
        copyOnWrite();
        instance.removeReservedRange(index);
        return this;
      }

      /**
       * <pre>
       * Reserved field names, which may not be used by fields in the same message.
       * A given name may only be reserved once.
       * </pre>
       *
       * <code>repeated string reserved_name = 10;</code>
       */
      public java.util.List<String>
          getReservedNameList() {
        return java.util.Collections.unmodifiableList(
            instance.getReservedNameList());
      }
      /**
       * <pre>
       * Reserved field names, which may not be used by fields in the same message.
       * A given name may only be reserved once.
       * </pre>
       *
       * <code>repeated string reserved_name = 10;</code>
       */
      public int getReservedNameCount() {
        return instance.getReservedNameCount();
      }
      /**
       * <pre>
       * Reserved field names, which may not be used by fields in the same message.
       * A given name may only be reserved once.
       * </pre>
       *
       * <code>repeated string reserved_name = 10;</code>
       */
      public java.lang.String getReservedName(int index) {
        return instance.getReservedName(index);
      }
      /**
       * <pre>
       * Reserved field names, which may not be used by fields in the same message.
       * A given name may only be reserved once.
       * </pre>
       *
       * <code>repeated string reserved_name = 10;</code>
       */
      public com.google.protobuf.ByteString
          getReservedNameBytes(int index) {
        return instance.getReservedNameBytes(index);
      }
      /**
       * <pre>
       * Reserved field names, which may not be used by fields in the same message.
       * A given name may only be reserved once.
       * </pre>
       *
       * <code>repeated string reserved_name = 10;</code>
       */
      public Builder setReservedName(
          int index, java.lang.String value) {
        copyOnWrite();
        instance.setReservedName(index, value);
        return this;
      }
      /**
       * <pre>
       * Reserved field names, which may not be used by fields in the same message.
       * A given name may only be reserved once.
       * </pre>
       *
       * <code>repeated string reserved_name = 10;</code>
       */
      public Builder addReservedName(
          java.lang.String value) {
        copyOnWrite();
        instance.addReservedName(value);
        return this;
      }
      /**
       * <pre>
       * Reserved field names, which may not be used by fields in the same message.
       * A given name may only be reserved once.
       * </pre>
       *
       * <code>repeated string reserved_name = 10;</code>
       */
      public Builder addAllReservedName(
          java.lang.Iterable<java.lang.String> values) {
        copyOnWrite();
        instance.addAllReservedName(values);
        return this;
      }
      /**
       * <pre>
       * Reserved field names, which may not be used by fields in the same message.
       * A given name may only be reserved once.
       * </pre>
       *
       * <code>repeated string reserved_name = 10;</code>
       */
      public Builder clearReservedName() {
        copyOnWrite();
        instance.clearReservedName();
        return this;
      }
      /**
       * <pre>
       * Reserved field names, which may not be used by fields in the same message.
       * A given name may only be reserved once.
       * </pre>
       *
       * <code>repeated string reserved_name = 10;</code>
       */
      public Builder addReservedNameBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.addReservedNameBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:google.protobuf.DescriptorProto)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.google.protobuf.DescriptorProtos.DescriptorProto();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          for (int i = 0; i < getFieldCount(); i++) {
            if (!getField(i).isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          for (int i = 0; i < getExtensionCount(); i++) {
            if (!getExtension(i).isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          for (int i = 0; i < getNestedTypeCount(); i++) {
            if (!getNestedType(i).isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          for (int i = 0; i < getEnumTypeCount(); i++) {
            if (!getEnumType(i).isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          for (int i = 0; i < getExtensionRangeCount(); i++) {
            if (!getExtensionRange(i).isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          for (int i = 0; i < getOneofDeclCount(); i++) {
            if (!getOneofDecl(i).isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasOptions()) {
            if (!getOptions().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          field_.makeImmutable();
          extension_.makeImmutable();
          nestedType_.makeImmutable();
          enumType_.makeImmutable();
          extensionRange_.makeImmutable();
          oneofDecl_.makeImmutable();
          reservedRange_.makeImmutable();
          reservedName_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.google.protobuf.DescriptorProtos.DescriptorProto other = (com.google.protobuf.DescriptorProtos.DescriptorProto) arg1;
          name_ = visitor.visitString(
              hasName(), name_,
              other.hasName(), other.name_);
          field_= visitor.visitList(field_, other.field_);
          extension_= visitor.visitList(extension_, other.extension_);
          nestedType_= visitor.visitList(nestedType_, other.nestedType_);
          enumType_= visitor.visitList(enumType_, other.enumType_);
          extensionRange_= visitor.visitList(extensionRange_, other.extensionRange_);
          oneofDecl_= visitor.visitList(oneofDecl_, other.oneofDecl_);
          options_ = visitor.visitMessage(options_, other.options_);
          reservedRange_= visitor.visitList(reservedRange_, other.reservedRange_);
          reservedName_= visitor.visitList(reservedName_, other.reservedName_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readString();
                  bitField0_ |= 0x00000001;
                  name_ = s;
                  break;
                }
                case 18: {
                  if (!field_.isModifiable()) {
                    field_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(field_);
                  }
                  field_.add(
                      input.readMessage(com.google.protobuf.DescriptorProtos.FieldDescriptorProto.parser(), extensionRegistry));
                  break;
                }
                case 26: {
                  if (!nestedType_.isModifiable()) {
                    nestedType_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(nestedType_);
                  }
                  nestedType_.add(
                      input.readMessage(com.google.protobuf.DescriptorProtos.DescriptorProto.parser(), extensionRegistry));
                  break;
                }
                case 34: {
                  if (!enumType_.isModifiable()) {
                    enumType_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(enumType_);
                  }
                  enumType_.add(
                      input.readMessage(com.google.protobuf.DescriptorProtos.EnumDescriptorProto.parser(), extensionRegistry));
                  break;
                }
                case 42: {
                  if (!extensionRange_.isModifiable()) {
                    extensionRange_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(extensionRange_);
                  }
                  extensionRange_.add(
                      input.readMessage(com.google.protobuf.DescriptorProtos.DescriptorProto.ExtensionRange.parser(), extensionRegistry));
                  break;
                }
                case 50: {
                  if (!extension_.isModifiable()) {
                    extension_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(extension_);
                  }
                  extension_.add(
                      input.readMessage(com.google.protobuf.DescriptorProtos.FieldDescriptorProto.parser(), extensionRegistry));
                  break;
                }
                case 58: {
                  com.google.protobuf.DescriptorProtos.MessageOptions.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000002) == 0x00000002)) {
                    subBuilder = options_.toBuilder();
                  }
                  options_ = input.readMessage(com.google.protobuf.DescriptorProtos.MessageOptions.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(options_);
                    options_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000002;
                  break;
                }
                case 66: {
                  if (!oneofDecl_.isModifiable()) {
                    oneofDecl_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(oneofDecl_);
                  }
                  oneofDecl_.add(
                      input.readMessage(com.google.protobuf.DescriptorProtos.OneofDescriptorProto.parser(), extensionRegistry));
                  break;
                }
                case 74: {
                  if (!reservedRange_.isModifiable()) {
                    reservedRange_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(reservedRange_);
                  }
                  reservedRange_.add(
                      input.readMessage(com.google.protobuf.DescriptorProtos.DescriptorProto.ReservedRange.parser(), extensionRegistry));
                  break;
                }
                case 82: {
                  String s = input.readString();
                  if (!reservedName_.isModifiable()) {
                    reservedName_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(reservedName_);
                  }
                  reservedName_.add(s);
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.google.protobuf.DescriptorProtos.DescriptorProto.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:google.protobuf.DescriptorProto)
    private static final com.google.protobuf.DescriptorProtos.DescriptorProto DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new DescriptorProto();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.google.protobuf.DescriptorProtos.DescriptorProto getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<DescriptorProto> PARSER;

    public static com.google.protobuf.Parser<DescriptorProto> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ExtensionRangeOptionsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.protobuf.ExtensionRangeOptions)
       com.google.protobuf.GeneratedMessageLite.
            ExtendableMessageOrBuilder<
                ExtensionRangeOptions, ExtensionRangeOptions.Builder> {

    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    java.util.List<com.google.protobuf.DescriptorProtos.UninterpretedOption>
        getUninterpretedOptionList();
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    com.google.protobuf.DescriptorProtos.UninterpretedOption getUninterpretedOption(int index);
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    int getUninterpretedOptionCount();
  }
  /**
   * Protobuf type {@code google.protobuf.ExtensionRangeOptions}
   */
  public  static final class ExtensionRangeOptions extends
      com.google.protobuf.GeneratedMessageLite.ExtendableMessage<
        ExtensionRangeOptions, ExtensionRangeOptions.Builder> implements
      // @@protoc_insertion_point(message_implements:google.protobuf.ExtensionRangeOptions)
      ExtensionRangeOptionsOrBuilder {
    private ExtensionRangeOptions() {
      uninterpretedOption_ = emptyProtobufList();
    }
    public static final int UNINTERPRETED_OPTION_FIELD_NUMBER = 999;
    private com.google.protobuf.Internal.ProtobufList<com.google.protobuf.DescriptorProtos.UninterpretedOption> uninterpretedOption_;
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    public java.util.List<com.google.protobuf.DescriptorProtos.UninterpretedOption> getUninterpretedOptionList() {
      return uninterpretedOption_;
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    public java.util.List<? extends com.google.protobuf.DescriptorProtos.UninterpretedOptionOrBuilder>
        getUninterpretedOptionOrBuilderList() {
      return uninterpretedOption_;
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    public int getUninterpretedOptionCount() {
      return uninterpretedOption_.size();
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    public com.google.protobuf.DescriptorProtos.UninterpretedOption getUninterpretedOption(int index) {
      return uninterpretedOption_.get(index);
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    public com.google.protobuf.DescriptorProtos.UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(
        int index) {
      return uninterpretedOption_.get(index);
    }
    private void ensureUninterpretedOptionIsMutable() {
      if (!uninterpretedOption_.isModifiable()) {
        uninterpretedOption_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(uninterpretedOption_);
       }
    }

    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    private void setUninterpretedOption(
        int index, com.google.protobuf.DescriptorProtos.UninterpretedOption value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureUninterpretedOptionIsMutable();
      uninterpretedOption_.set(index, value);
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    private void setUninterpretedOption(
        int index, com.google.protobuf.DescriptorProtos.UninterpretedOption.Builder builderForValue) {
      ensureUninterpretedOptionIsMutable();
      uninterpretedOption_.set(index, builderForValue.build());
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    private void addUninterpretedOption(com.google.protobuf.DescriptorProtos.UninterpretedOption value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureUninterpretedOptionIsMutable();
      uninterpretedOption_.add(value);
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    private void addUninterpretedOption(
        int index, com.google.protobuf.DescriptorProtos.UninterpretedOption value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureUninterpretedOptionIsMutable();
      uninterpretedOption_.add(index, value);
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    private void addUninterpretedOption(
        com.google.protobuf.DescriptorProtos.UninterpretedOption.Builder builderForValue) {
      ensureUninterpretedOptionIsMutable();
      uninterpretedOption_.add(builderForValue.build());
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    private void addUninterpretedOption(
        int index, com.google.protobuf.DescriptorProtos.UninterpretedOption.Builder builderForValue) {
      ensureUninterpretedOptionIsMutable();
      uninterpretedOption_.add(index, builderForValue.build());
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    private void addAllUninterpretedOption(
        java.lang.Iterable<? extends com.google.protobuf.DescriptorProtos.UninterpretedOption> values) {
      ensureUninterpretedOptionIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, uninterpretedOption_);
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    private void clearUninterpretedOption() {
      uninterpretedOption_ = emptyProtobufList();
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    private void removeUninterpretedOption(int index) {
      ensureUninterpretedOptionIsMutable();
      uninterpretedOption_.remove(index);
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      com.google.protobuf.GeneratedMessageLite
        .ExtendableMessage<com.google.protobuf.DescriptorProtos.ExtensionRangeOptions, com.google.protobuf.DescriptorProtos.ExtensionRangeOptions.Builder>
          .ExtensionWriter extensionWriter =
            newExtensionWriter();
      for (int i = 0; i < uninterpretedOption_.size(); i++) {
        output.writeMessage(999, uninterpretedOption_.get(i));
      }
      extensionWriter.writeUntil(536870912, output);
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < uninterpretedOption_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(999, uninterpretedOption_.get(i));
      }
      size += extensionsSerializedSize();
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.google.protobuf.DescriptorProtos.ExtensionRangeOptions parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.google.protobuf.DescriptorProtos.ExtensionRangeOptions parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.google.protobuf.DescriptorProtos.ExtensionRangeOptions parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.google.protobuf.DescriptorProtos.ExtensionRangeOptions parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.google.protobuf.DescriptorProtos.ExtensionRangeOptions parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.google.protobuf.DescriptorProtos.ExtensionRangeOptions parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.google.protobuf.DescriptorProtos.ExtensionRangeOptions parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.google.protobuf.DescriptorProtos.ExtensionRangeOptions parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.google.protobuf.DescriptorProtos.ExtensionRangeOptions parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.google.protobuf.DescriptorProtos.ExtensionRangeOptions parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.protobuf.DescriptorProtos.ExtensionRangeOptions prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code google.protobuf.ExtensionRangeOptions}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.ExtendableBuilder<
          com.google.protobuf.DescriptorProtos.ExtensionRangeOptions, Builder> implements
        // @@protoc_insertion_point(builder_implements:google.protobuf.ExtensionRangeOptions)
        com.google.protobuf.DescriptorProtos.ExtensionRangeOptionsOrBuilder {
      // Construct using com.google.protobuf.DescriptorProtos.ExtensionRangeOptions.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public java.util.List<com.google.protobuf.DescriptorProtos.UninterpretedOption> getUninterpretedOptionList() {
        return java.util.Collections.unmodifiableList(
            instance.getUninterpretedOptionList());
      }
      /**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public int getUninterpretedOptionCount() {
        return instance.getUninterpretedOptionCount();
      }/**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public com.google.protobuf.DescriptorProtos.UninterpretedOption getUninterpretedOption(int index) {
        return instance.getUninterpretedOption(index);
      }
      /**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public Builder setUninterpretedOption(
          int index, com.google.protobuf.DescriptorProtos.UninterpretedOption value) {
        copyOnWrite();
        instance.setUninterpretedOption(index, value);
        return this;
      }
      /**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public Builder setUninterpretedOption(
          int index, com.google.protobuf.DescriptorProtos.UninterpretedOption.Builder builderForValue) {
        copyOnWrite();
        instance.setUninterpretedOption(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public Builder addUninterpretedOption(com.google.protobuf.DescriptorProtos.UninterpretedOption value) {
        copyOnWrite();
        instance.addUninterpretedOption(value);
        return this;
      }
      /**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public Builder addUninterpretedOption(
          int index, com.google.protobuf.DescriptorProtos.UninterpretedOption value) {
        copyOnWrite();
        instance.addUninterpretedOption(index, value);
        return this;
      }
      /**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public Builder addUninterpretedOption(
          com.google.protobuf.DescriptorProtos.UninterpretedOption.Builder builderForValue) {
        copyOnWrite();
        instance.addUninterpretedOption(builderForValue);
        return this;
      }
      /**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public Builder addUninterpretedOption(
          int index, com.google.protobuf.DescriptorProtos.UninterpretedOption.Builder builderForValue) {
        copyOnWrite();
        instance.addUninterpretedOption(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public Builder addAllUninterpretedOption(
          java.lang.Iterable<? extends com.google.protobuf.DescriptorProtos.UninterpretedOption> values) {
        copyOnWrite();
        instance.addAllUninterpretedOption(values);
        return this;
      }
      /**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public Builder clearUninterpretedOption() {
        copyOnWrite();
        instance.clearUninterpretedOption();
        return this;
      }
      /**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public Builder removeUninterpretedOption(int index) {
        copyOnWrite();
        instance.removeUninterpretedOption(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:google.protobuf.ExtensionRangeOptions)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.google.protobuf.DescriptorProtos.ExtensionRangeOptions();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          for (int i = 0; i < getUninterpretedOptionCount(); i++) {
            if (!getUninterpretedOption(i).isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (!extensionsAreInitialized()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          uninterpretedOption_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.google.protobuf.DescriptorProtos.ExtensionRangeOptions other = (com.google.protobuf.DescriptorProtos.ExtensionRangeOptions) arg1;
          uninterpretedOption_= visitor.visitList(uninterpretedOption_, other.uninterpretedOption_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(getDefaultInstanceForType(),
                                         input, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
                case 7994: {
                  if (!uninterpretedOption_.isModifiable()) {
                    uninterpretedOption_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(uninterpretedOption_);
                  }
                  uninterpretedOption_.add(
                      input.readMessage(com.google.protobuf.DescriptorProtos.UninterpretedOption.parser(), extensionRegistry));
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.google.protobuf.DescriptorProtos.ExtensionRangeOptions.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:google.protobuf.ExtensionRangeOptions)
    private static final com.google.protobuf.DescriptorProtos.ExtensionRangeOptions DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ExtensionRangeOptions();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.google.protobuf.DescriptorProtos.ExtensionRangeOptions getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ExtensionRangeOptions> PARSER;

    public static com.google.protobuf.Parser<ExtensionRangeOptions> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface FieldDescriptorProtoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.protobuf.FieldDescriptorProto)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional string name = 1;</code>
     */
    boolean hasName();
    /**
     * <code>optional string name = 1;</code>
     */
    java.lang.String getName();
    /**
     * <code>optional string name = 1;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>optional int32 number = 3;</code>
     */
    boolean hasNumber();
    /**
     * <code>optional int32 number = 3;</code>
     */
    int getNumber();

    /**
     * <code>optional .google.protobuf.FieldDescriptorProto.Label label = 4;</code>
     */
    boolean hasLabel();
    /**
     * <code>optional .google.protobuf.FieldDescriptorProto.Label label = 4;</code>
     */
    com.google.protobuf.DescriptorProtos.FieldDescriptorProto.Label getLabel();

    /**
     * <pre>
     * If type_name is set, this need not be set.  If both this and type_name
     * are set, this must be one of TYPE_ENUM, TYPE_MESSAGE or TYPE_GROUP.
     * </pre>
     *
     * <code>optional .google.protobuf.FieldDescriptorProto.Type type = 5;</code>
     */
    boolean hasType();
    /**
     * <pre>
     * If type_name is set, this need not be set.  If both this and type_name
     * are set, this must be one of TYPE_ENUM, TYPE_MESSAGE or TYPE_GROUP.
     * </pre>
     *
     * <code>optional .google.protobuf.FieldDescriptorProto.Type type = 5;</code>
     */
    com.google.protobuf.DescriptorProtos.FieldDescriptorProto.Type getType();

    /**
     * <pre>
     * For message and enum types, this is the name of the type.  If the name
     * starts with a '.', it is fully-qualified.  Otherwise, C++-like scoping
     * rules are used to find the type (i.e. first the nested types within this
     * message are searched, then within the parent, on up to the root
     * namespace).
     * </pre>
     *
     * <code>optional string type_name = 6;</code>
     */
    boolean hasTypeName();
    /**
     * <pre>
     * For message and enum types, this is the name of the type.  If the name
     * starts with a '.', it is fully-qualified.  Otherwise, C++-like scoping
     * rules are used to find the type (i.e. first the nested types within this
     * message are searched, then within the parent, on up to the root
     * namespace).
     * </pre>
     *
     * <code>optional string type_name = 6;</code>
     */
    java.lang.String getTypeName();
    /**
     * <pre>
     * For message and enum types, this is the name of the type.  If the name
     * starts with a '.', it is fully-qualified.  Otherwise, C++-like scoping
     * rules are used to find the type (i.e. first the nested types within this
     * message are searched, then within the parent, on up to the root
     * namespace).
     * </pre>
     *
     * <code>optional string type_name = 6;</code>
     */
    com.google.protobuf.ByteString
        getTypeNameBytes();

    /**
     * <pre>
     * For extensions, this is the name of the type being extended.  It is
     * resolved in the same manner as type_name.
     * </pre>
     *
     * <code>optional string extendee = 2;</code>
     */
    boolean hasExtendee();
    /**
     * <pre>
     * For extensions, this is the name of the type being extended.  It is
     * resolved in the same manner as type_name.
     * </pre>
     *
     * <code>optional string extendee = 2;</code>
     */
    java.lang.String getExtendee();
    /**
     * <pre>
     * For extensions, this is the name of the type being extended.  It is
     * resolved in the same manner as type_name.
     * </pre>
     *
     * <code>optional string extendee = 2;</code>
     */
    com.google.protobuf.ByteString
        getExtendeeBytes();

    /**
     * <pre>
     * For numeric types, contains the original text representation of the value.
     * For booleans, "true" or "false".
     * For strings, contains the default text contents (not escaped in any way).
     * For bytes, contains the C escaped value.  All bytes &gt;= 128 are escaped.
     * TODO(kenton):  Base-64 encode?
     * </pre>
     *
     * <code>optional string default_value = 7;</code>
     */
    boolean hasDefaultValue();
    /**
     * <pre>
     * For numeric types, contains the original text representation of the value.
     * For booleans, "true" or "false".
     * For strings, contains the default text contents (not escaped in any way).
     * For bytes, contains the C escaped value.  All bytes &gt;= 128 are escaped.
     * TODO(kenton):  Base-64 encode?
     * </pre>
     *
     * <code>optional string default_value = 7;</code>
     */
    java.lang.String getDefaultValue();
    /**
     * <pre>
     * For numeric types, contains the original text representation of the value.
     * For booleans, "true" or "false".
     * For strings, contains the default text contents (not escaped in any way).
     * For bytes, contains the C escaped value.  All bytes &gt;= 128 are escaped.
     * TODO(kenton):  Base-64 encode?
     * </pre>
     *
     * <code>optional string default_value = 7;</code>
     */
    com.google.protobuf.ByteString
        getDefaultValueBytes();

    /**
     * <pre>
     * If set, gives the index of a oneof in the containing type's oneof_decl
     * list.  This field is a member of that oneof.
     * </pre>
     *
     * <code>optional int32 oneof_index = 9;</code>
     */
    boolean hasOneofIndex();
    /**
     * <pre>
     * If set, gives the index of a oneof in the containing type's oneof_decl
     * list.  This field is a member of that oneof.
     * </pre>
     *
     * <code>optional int32 oneof_index = 9;</code>
     */
    int getOneofIndex();

    /**
     * <pre>
     * JSON name of this field. The value is set by protocol compiler. If the
     * user has set a "json_name" option on this field, that option's value
     * will be used. Otherwise, it's deduced from the field's name by converting
     * it to camelCase.
     * </pre>
     *
     * <code>optional string json_name = 10;</code>
     */
    boolean hasJsonName();
    /**
     * <pre>
     * JSON name of this field. The value is set by protocol compiler. If the
     * user has set a "json_name" option on this field, that option's value
     * will be used. Otherwise, it's deduced from the field's name by converting
     * it to camelCase.
     * </pre>
     *
     * <code>optional string json_name = 10;</code>
     */
    java.lang.String getJsonName();
    /**
     * <pre>
     * JSON name of this field. The value is set by protocol compiler. If the
     * user has set a "json_name" option on this field, that option's value
     * will be used. Otherwise, it's deduced from the field's name by converting
     * it to camelCase.
     * </pre>
     *
     * <code>optional string json_name = 10;</code>
     */
    com.google.protobuf.ByteString
        getJsonNameBytes();

    /**
     * <code>optional .google.protobuf.FieldOptions options = 8;</code>
     */
    boolean hasOptions();
    /**
     * <code>optional .google.protobuf.FieldOptions options = 8;</code>
     */
    com.google.protobuf.DescriptorProtos.FieldOptions getOptions();
  }
  /**
   * <pre>
   * Describes a field within a message.
   * </pre>
   *
   * Protobuf type {@code google.protobuf.FieldDescriptorProto}
   */
  public  static final class FieldDescriptorProto extends
      com.google.protobuf.GeneratedMessageLite<
          FieldDescriptorProto, FieldDescriptorProto.Builder> implements
      // @@protoc_insertion_point(message_implements:google.protobuf.FieldDescriptorProto)
      FieldDescriptorProtoOrBuilder {
    private FieldDescriptorProto() {
      name_ = "";
      label_ = 1;
      type_ = 1;
      typeName_ = "";
      extendee_ = "";
      defaultValue_ = "";
      jsonName_ = "";
    }
    /**
     * Protobuf enum {@code google.protobuf.FieldDescriptorProto.Type}
     */
    public enum Type
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <pre>
       * 0 is reserved for errors.
       * Order is weird for historical reasons.
       * </pre>
       *
       * <code>TYPE_DOUBLE = 1;</code>
       */
      TYPE_DOUBLE(1),
      /**
       * <code>TYPE_FLOAT = 2;</code>
       */
      TYPE_FLOAT(2),
      /**
       * <pre>
       * Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT64 if
       * negative values are likely.
       * </pre>
       *
       * <code>TYPE_INT64 = 3;</code>
       */
      TYPE_INT64(3),
      /**
       * <code>TYPE_UINT64 = 4;</code>
       */
      TYPE_UINT64(4),
      /**
       * <pre>
       * Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT32 if
       * negative values are likely.
       * </pre>
       *
       * <code>TYPE_INT32 = 5;</code>
       */
      TYPE_INT32(5),
      /**
       * <code>TYPE_FIXED64 = 6;</code>
       */
      TYPE_FIXED64(6),
      /**
       * <code>TYPE_FIXED32 = 7;</code>
       */
      TYPE_FIXED32(7),
      /**
       * <code>TYPE_BOOL = 8;</code>
       */
      TYPE_BOOL(8),
      /**
       * <code>TYPE_STRING = 9;</code>
       */
      TYPE_STRING(9),
      /**
       * <pre>
       * Tag-delimited aggregate.
       * Group type is deprecated and not supported in proto3. However, Proto3
       * implementations should still be able to parse the group wire format and
       * treat group fields as unknown fields.
       * </pre>
       *
       * <code>TYPE_GROUP = 10;</code>
       */
      TYPE_GROUP(10),
      /**
       * <pre>
       * Length-delimited aggregate.
       * </pre>
       *
       * <code>TYPE_MESSAGE = 11;</code>
       */
      TYPE_MESSAGE(11),
      /**
       * <pre>
       * New in version 2.
       * </pre>
       *
       * <code>TYPE_BYTES = 12;</code>
       */
      TYPE_BYTES(12),
      /**
       * <code>TYPE_UINT32 = 13;</code>
       */
      TYPE_UINT32(13),
      /**
       * <code>TYPE_ENUM = 14;</code>
       */
      TYPE_ENUM(14),
      /**
       * <code>TYPE_SFIXED32 = 15;</code>
       */
      TYPE_SFIXED32(15),
      /**
       * <code>TYPE_SFIXED64 = 16;</code>
       */
      TYPE_SFIXED64(16),
      /**
       * <pre>
       * Uses ZigZag encoding.
       * </pre>
       *
       * <code>TYPE_SINT32 = 17;</code>
       */
      TYPE_SINT32(17),
      /**
       * <pre>
       * Uses ZigZag encoding.
       * </pre>
       *
       * <code>TYPE_SINT64 = 18;</code>
       */
      TYPE_SINT64(18),
      ;

      /**
       * <pre>
       * 0 is reserved for errors.
       * Order is weird for historical reasons.
       * </pre>
       *
       * <code>TYPE_DOUBLE = 1;</code>
       */
      public static final int TYPE_DOUBLE_VALUE = 1;
      /**
       * <code>TYPE_FLOAT = 2;</code>
       */
      public static final int TYPE_FLOAT_VALUE = 2;
      /**
       * <pre>
       * Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT64 if
       * negative values are likely.
       * </pre>
       *
       * <code>TYPE_INT64 = 3;</code>
       */
      public static final int TYPE_INT64_VALUE = 3;
      /**
       * <code>TYPE_UINT64 = 4;</code>
       */
      public static final int TYPE_UINT64_VALUE = 4;
      /**
       * <pre>
       * Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT32 if
       * negative values are likely.
       * </pre>
       *
       * <code>TYPE_INT32 = 5;</code>
       */
      public static final int TYPE_INT32_VALUE = 5;
      /**
       * <code>TYPE_FIXED64 = 6;</code>
       */
      public static final int TYPE_FIXED64_VALUE = 6;
      /**
       * <code>TYPE_FIXED32 = 7;</code>
       */
      public static final int TYPE_FIXED32_VALUE = 7;
      /**
       * <code>TYPE_BOOL = 8;</code>
       */
      public static final int TYPE_BOOL_VALUE = 8;
      /**
       * <code>TYPE_STRING = 9;</code>
       */
      public static final int TYPE_STRING_VALUE = 9;
      /**
       * <pre>
       * Tag-delimited aggregate.
       * Group type is deprecated and not supported in proto3. However, Proto3
       * implementations should still be able to parse the group wire format and
       * treat group fields as unknown fields.
       * </pre>
       *
       * <code>TYPE_GROUP = 10;</code>
       */
      public static final int TYPE_GROUP_VALUE = 10;
      /**
       * <pre>
       * Length-delimited aggregate.
       * </pre>
       *
       * <code>TYPE_MESSAGE = 11;</code>
       */
      public static final int TYPE_MESSAGE_VALUE = 11;
      /**
       * <pre>
       * New in version 2.
       * </pre>
       *
       * <code>TYPE_BYTES = 12;</code>
       */
      public static final int TYPE_BYTES_VALUE = 12;
      /**
       * <code>TYPE_UINT32 = 13;</code>
       */
      public static final int TYPE_UINT32_VALUE = 13;
      /**
       * <code>TYPE_ENUM = 14;</code>
       */
      public static final int TYPE_ENUM_VALUE = 14;
      /**
       * <code>TYPE_SFIXED32 = 15;</code>
       */
      public static final int TYPE_SFIXED32_VALUE = 15;
      /**
       * <code>TYPE_SFIXED64 = 16;</code>
       */
      public static final int TYPE_SFIXED64_VALUE = 16;
      /**
       * <pre>
       * Uses ZigZag encoding.
       * </pre>
       *
       * <code>TYPE_SINT32 = 17;</code>
       */
      public static final int TYPE_SINT32_VALUE = 17;
      /**
       * <pre>
       * Uses ZigZag encoding.
       * </pre>
       *
       * <code>TYPE_SINT64 = 18;</code>
       */
      public static final int TYPE_SINT64_VALUE = 18;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Type valueOf(int value) {
        return forNumber(value);
      }

      public static Type forNumber(int value) {
        switch (value) {
          case 1: return TYPE_DOUBLE;
          case 2: return TYPE_FLOAT;
          case 3: return TYPE_INT64;
          case 4: return TYPE_UINT64;
          case 5: return TYPE_INT32;
          case 6: return TYPE_FIXED64;
          case 7: return TYPE_FIXED32;
          case 8: return TYPE_BOOL;
          case 9: return TYPE_STRING;
          case 10: return TYPE_GROUP;
          case 11: return TYPE_MESSAGE;
          case 12: return TYPE_BYTES;
          case 13: return TYPE_UINT32;
          case 14: return TYPE_ENUM;
          case 15: return TYPE_SFIXED32;
          case 16: return TYPE_SFIXED64;
          case 17: return TYPE_SINT32;
          case 18: return TYPE_SINT64;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Type> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Type>() {
              public Type findValueByNumber(int number) {
                return Type.forNumber(number);
              }
            };

      private final int value;

      private Type(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:google.protobuf.FieldDescriptorProto.Type)
    }

    /**
     * Protobuf enum {@code google.protobuf.FieldDescriptorProto.Label}
     */
    public enum Label
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <pre>
       * 0 is reserved for errors
       * </pre>
       *
       * <code>LABEL_OPTIONAL = 1;</code>
       */
      LABEL_OPTIONAL(1),
      /**
       * <code>LABEL_REQUIRED = 2;</code>
       */
      LABEL_REQUIRED(2),
      /**
       * <code>LABEL_REPEATED = 3;</code>
       */
      LABEL_REPEATED(3),
      ;

      /**
       * <pre>
       * 0 is reserved for errors
       * </pre>
       *
       * <code>LABEL_OPTIONAL = 1;</code>
       */
      public static final int LABEL_OPTIONAL_VALUE = 1;
      /**
       * <code>LABEL_REQUIRED = 2;</code>
       */
      public static final int LABEL_REQUIRED_VALUE = 2;
      /**
       * <code>LABEL_REPEATED = 3;</code>
       */
      public static final int LABEL_REPEATED_VALUE = 3;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Label valueOf(int value) {
        return forNumber(value);
      }

      public static Label forNumber(int value) {
        switch (value) {
          case 1: return LABEL_OPTIONAL;
          case 2: return LABEL_REQUIRED;
          case 3: return LABEL_REPEATED;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Label>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Label> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Label>() {
              public Label findValueByNumber(int number) {
                return Label.forNumber(number);
              }
            };

      private final int value;

      private Label(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:google.protobuf.FieldDescriptorProto.Label)
    }

    private int bitField0_;
    public static final int NAME_FIELD_NUMBER = 1;
    private java.lang.String name_;
    /**
     * <code>optional string name = 1;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string name = 1;</code>
     */
    public java.lang.String getName() {
      return name_;
    }
    /**
     * <code>optional string name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(name_);
    }
    /**
     * <code>optional string name = 1;</code>
     */
    private void setName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      name_ = value;
    }
    /**
     * <code>optional string name = 1;</code>
     */
    private void clearName() {
      bitField0_ = (bitField0_ & ~0x00000001);
      name_ = getDefaultInstance().getName();
    }
    /**
     * <code>optional string name = 1;</code>
     */
    private void setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      name_ = value.toStringUtf8();
    }

    public static final int NUMBER_FIELD_NUMBER = 3;
    private int number_;
    /**
     * <code>optional int32 number = 3;</code>
     */
    public boolean hasNumber() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 number = 3;</code>
     */
    public int getNumber() {
      return number_;
    }
    /**
     * <code>optional int32 number = 3;</code>
     */
    private void setNumber(int value) {
      bitField0_ |= 0x00000002;
      number_ = value;
    }
    /**
     * <code>optional int32 number = 3;</code>
     */
    private void clearNumber() {
      bitField0_ = (bitField0_ & ~0x00000002);
      number_ = 0;
    }

    public static final int LABEL_FIELD_NUMBER = 4;
    private int label_;
    /**
     * <code>optional .google.protobuf.FieldDescriptorProto.Label label = 4;</code>
     */
    public boolean hasLabel() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .google.protobuf.FieldDescriptorProto.Label label = 4;</code>
     */
    public com.google.protobuf.DescriptorProtos.FieldDescriptorProto.Label getLabel() {
      com.google.protobuf.DescriptorProtos.FieldDescriptorProto.Label result = com.google.protobuf.DescriptorProtos.FieldDescriptorProto.Label.forNumber(label_);
      return result == null ? com.google.protobuf.DescriptorProtos.FieldDescriptorProto.Label.LABEL_OPTIONAL : result;
    }
    /**
     * <code>optional .google.protobuf.FieldDescriptorProto.Label label = 4;</code>
     */
    private void setLabel(com.google.protobuf.DescriptorProtos.FieldDescriptorProto.Label value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000004;
      label_ = value.getNumber();
    }
    /**
     * <code>optional .google.protobuf.FieldDescriptorProto.Label label = 4;</code>
     */
    private void clearLabel() {
      bitField0_ = (bitField0_ & ~0x00000004);
      label_ = 1;
    }

    public static final int TYPE_FIELD_NUMBER = 5;
    private int type_;
    /**
     * <pre>
     * If type_name is set, this need not be set.  If both this and type_name
     * are set, this must be one of TYPE_ENUM, TYPE_MESSAGE or TYPE_GROUP.
     * </pre>
     *
     * <code>optional .google.protobuf.FieldDescriptorProto.Type type = 5;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     * If type_name is set, this need not be set.  If both this and type_name
     * are set, this must be one of TYPE_ENUM, TYPE_MESSAGE or TYPE_GROUP.
     * </pre>
     *
     * <code>optional .google.protobuf.FieldDescriptorProto.Type type = 5;</code>
     */
    public com.google.protobuf.DescriptorProtos.FieldDescriptorProto.Type getType() {
      com.google.protobuf.DescriptorProtos.FieldDescriptorProto.Type result = com.google.protobuf.DescriptorProtos.FieldDescriptorProto.Type.forNumber(type_);
      return result == null ? com.google.protobuf.DescriptorProtos.FieldDescriptorProto.Type.TYPE_DOUBLE : result;
    }
    /**
     * <pre>
     * If type_name is set, this need not be set.  If both this and type_name
     * are set, this must be one of TYPE_ENUM, TYPE_MESSAGE or TYPE_GROUP.
     * </pre>
     *
     * <code>optional .google.protobuf.FieldDescriptorProto.Type type = 5;</code>
     */
    private void setType(com.google.protobuf.DescriptorProtos.FieldDescriptorProto.Type value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000008;
      type_ = value.getNumber();
    }
    /**
     * <pre>
     * If type_name is set, this need not be set.  If both this and type_name
     * are set, this must be one of TYPE_ENUM, TYPE_MESSAGE or TYPE_GROUP.
     * </pre>
     *
     * <code>optional .google.protobuf.FieldDescriptorProto.Type type = 5;</code>
     */
    private void clearType() {
      bitField0_ = (bitField0_ & ~0x00000008);
      type_ = 1;
    }

    public static final int TYPE_NAME_FIELD_NUMBER = 6;
    private java.lang.String typeName_;
    /**
     * <pre>
     * For message and enum types, this is the name of the type.  If the name
     * starts with a '.', it is fully-qualified.  Otherwise, C++-like scoping
     * rules are used to find the type (i.e. first the nested types within this
     * message are searched, then within the parent, on up to the root
     * namespace).
     * </pre>
     *
     * <code>optional string type_name = 6;</code>
     */
    public boolean hasTypeName() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <pre>
     * For message and enum types, this is the name of the type.  If the name
     * starts with a '.', it is fully-qualified.  Otherwise, C++-like scoping
     * rules are used to find the type (i.e. first the nested types within this
     * message are searched, then within the parent, on up to the root
     * namespace).
     * </pre>
     *
     * <code>optional string type_name = 6;</code>
     */
    public java.lang.String getTypeName() {
      return typeName_;
    }
    /**
     * <pre>
     * For message and enum types, this is the name of the type.  If the name
     * starts with a '.', it is fully-qualified.  Otherwise, C++-like scoping
     * rules are used to find the type (i.e. first the nested types within this
     * message are searched, then within the parent, on up to the root
     * namespace).
     * </pre>
     *
     * <code>optional string type_name = 6;</code>
     */
    public com.google.protobuf.ByteString
        getTypeNameBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(typeName_);
    }
    /**
     * <pre>
     * For message and enum types, this is the name of the type.  If the name
     * starts with a '.', it is fully-qualified.  Otherwise, C++-like scoping
     * rules are used to find the type (i.e. first the nested types within this
     * message are searched, then within the parent, on up to the root
     * namespace).
     * </pre>
     *
     * <code>optional string type_name = 6;</code>
     */
    private void setTypeName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
      typeName_ = value;
    }
    /**
     * <pre>
     * For message and enum types, this is the name of the type.  If the name
     * starts with a '.', it is fully-qualified.  Otherwise, C++-like scoping
     * rules are used to find the type (i.e. first the nested types within this
     * message are searched, then within the parent, on up to the root
     * namespace).
     * </pre>
     *
     * <code>optional string type_name = 6;</code>
     */
    private void clearTypeName() {
      bitField0_ = (bitField0_ & ~0x00000010);
      typeName_ = getDefaultInstance().getTypeName();
    }
    /**
     * <pre>
     * For message and enum types, this is the name of the type.  If the name
     * starts with a '.', it is fully-qualified.  Otherwise, C++-like scoping
     * rules are used to find the type (i.e. first the nested types within this
     * message are searched, then within the parent, on up to the root
     * namespace).
     * </pre>
     *
     * <code>optional string type_name = 6;</code>
     */
    private void setTypeNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
      typeName_ = value.toStringUtf8();
    }

    public static final int EXTENDEE_FIELD_NUMBER = 2;
    private java.lang.String extendee_;
    /**
     * <pre>
     * For extensions, this is the name of the type being extended.  It is
     * resolved in the same manner as type_name.
     * </pre>
     *
     * <code>optional string extendee = 2;</code>
     */
    public boolean hasExtendee() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <pre>
     * For extensions, this is the name of the type being extended.  It is
     * resolved in the same manner as type_name.
     * </pre>
     *
     * <code>optional string extendee = 2;</code>
     */
    public java.lang.String getExtendee() {
      return extendee_;
    }
    /**
     * <pre>
     * For extensions, this is the name of the type being extended.  It is
     * resolved in the same manner as type_name.
     * </pre>
     *
     * <code>optional string extendee = 2;</code>
     */
    public com.google.protobuf.ByteString
        getExtendeeBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(extendee_);
    }
    /**
     * <pre>
     * For extensions, this is the name of the type being extended.  It is
     * resolved in the same manner as type_name.
     * </pre>
     *
     * <code>optional string extendee = 2;</code>
     */
    private void setExtendee(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
      extendee_ = value;
    }
    /**
     * <pre>
     * For extensions, this is the name of the type being extended.  It is
     * resolved in the same manner as type_name.
     * </pre>
     *
     * <code>optional string extendee = 2;</code>
     */
    private void clearExtendee() {
      bitField0_ = (bitField0_ & ~0x00000020);
      extendee_ = getDefaultInstance().getExtendee();
    }
    /**
     * <pre>
     * For extensions, this is the name of the type being extended.  It is
     * resolved in the same manner as type_name.
     * </pre>
     *
     * <code>optional string extendee = 2;</code>
     */
    private void setExtendeeBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
      extendee_ = value.toStringUtf8();
    }

    public static final int DEFAULT_VALUE_FIELD_NUMBER = 7;
    private java.lang.String defaultValue_;
    /**
     * <pre>
     * For numeric types, contains the original text representation of the value.
     * For booleans, "true" or "false".
     * For strings, contains the default text contents (not escaped in any way).
     * For bytes, contains the C escaped value.  All bytes &gt;= 128 are escaped.
     * TODO(kenton):  Base-64 encode?
     * </pre>
     *
     * <code>optional string default_value = 7;</code>
     */
    public boolean hasDefaultValue() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <pre>
     * For numeric types, contains the original text representation of the value.
     * For booleans, "true" or "false".
     * For strings, contains the default text contents (not escaped in any way).
     * For bytes, contains the C escaped value.  All bytes &gt;= 128 are escaped.
     * TODO(kenton):  Base-64 encode?
     * </pre>
     *
     * <code>optional string default_value = 7;</code>
     */
    public java.lang.String getDefaultValue() {
      return defaultValue_;
    }
    /**
     * <pre>
     * For numeric types, contains the original text representation of the value.
     * For booleans, "true" or "false".
     * For strings, contains the default text contents (not escaped in any way).
     * For bytes, contains the C escaped value.  All bytes &gt;= 128 are escaped.
     * TODO(kenton):  Base-64 encode?
     * </pre>
     *
     * <code>optional string default_value = 7;</code>
     */
    public com.google.protobuf.ByteString
        getDefaultValueBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(defaultValue_);
    }
    /**
     * <pre>
     * For numeric types, contains the original text representation of the value.
     * For booleans, "true" or "false".
     * For strings, contains the default text contents (not escaped in any way).
     * For bytes, contains the C escaped value.  All bytes &gt;= 128 are escaped.
     * TODO(kenton):  Base-64 encode?
     * </pre>
     *
     * <code>optional string default_value = 7;</code>
     */
    private void setDefaultValue(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
      defaultValue_ = value;
    }
    /**
     * <pre>
     * For numeric types, contains the original text representation of the value.
     * For booleans, "true" or "false".
     * For strings, contains the default text contents (not escaped in any way).
     * For bytes, contains the C escaped value.  All bytes &gt;= 128 are escaped.
     * TODO(kenton):  Base-64 encode?
     * </pre>
     *
     * <code>optional string default_value = 7;</code>
     */
    private void clearDefaultValue() {
      bitField0_ = (bitField0_ & ~0x00000040);
      defaultValue_ = getDefaultInstance().getDefaultValue();
    }
    /**
     * <pre>
     * For numeric types, contains the original text representation of the value.
     * For booleans, "true" or "false".
     * For strings, contains the default text contents (not escaped in any way).
     * For bytes, contains the C escaped value.  All bytes &gt;= 128 are escaped.
     * TODO(kenton):  Base-64 encode?
     * </pre>
     *
     * <code>optional string default_value = 7;</code>
     */
    private void setDefaultValueBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
      defaultValue_ = value.toStringUtf8();
    }

    public static final int ONEOF_INDEX_FIELD_NUMBER = 9;
    private int oneofIndex_;
    /**
     * <pre>
     * If set, gives the index of a oneof in the containing type's oneof_decl
     * list.  This field is a member of that oneof.
     * </pre>
     *
     * <code>optional int32 oneof_index = 9;</code>
     */
    public boolean hasOneofIndex() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <pre>
     * If set, gives the index of a oneof in the containing type's oneof_decl
     * list.  This field is a member of that oneof.
     * </pre>
     *
     * <code>optional int32 oneof_index = 9;</code>
     */
    public int getOneofIndex() {
      return oneofIndex_;
    }
    /**
     * <pre>
     * If set, gives the index of a oneof in the containing type's oneof_decl
     * list.  This field is a member of that oneof.
     * </pre>
     *
     * <code>optional int32 oneof_index = 9;</code>
     */
    private void setOneofIndex(int value) {
      bitField0_ |= 0x00000080;
      oneofIndex_ = value;
    }
    /**
     * <pre>
     * If set, gives the index of a oneof in the containing type's oneof_decl
     * list.  This field is a member of that oneof.
     * </pre>
     *
     * <code>optional int32 oneof_index = 9;</code>
     */
    private void clearOneofIndex() {
      bitField0_ = (bitField0_ & ~0x00000080);
      oneofIndex_ = 0;
    }

    public static final int JSON_NAME_FIELD_NUMBER = 10;
    private java.lang.String jsonName_;
    /**
     * <pre>
     * JSON name of this field. The value is set by protocol compiler. If the
     * user has set a "json_name" option on this field, that option's value
     * will be used. Otherwise, it's deduced from the field's name by converting
     * it to camelCase.
     * </pre>
     *
     * <code>optional string json_name = 10;</code>
     */
    public boolean hasJsonName() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <pre>
     * JSON name of this field. The value is set by protocol compiler. If the
     * user has set a "json_name" option on this field, that option's value
     * will be used. Otherwise, it's deduced from the field's name by converting
     * it to camelCase.
     * </pre>
     *
     * <code>optional string json_name = 10;</code>
     */
    public java.lang.String getJsonName() {
      return jsonName_;
    }
    /**
     * <pre>
     * JSON name of this field. The value is set by protocol compiler. If the
     * user has set a "json_name" option on this field, that option's value
     * will be used. Otherwise, it's deduced from the field's name by converting
     * it to camelCase.
     * </pre>
     *
     * <code>optional string json_name = 10;</code>
     */
    public com.google.protobuf.ByteString
        getJsonNameBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(jsonName_);
    }
    /**
     * <pre>
     * JSON name of this field. The value is set by protocol compiler. If the
     * user has set a "json_name" option on this field, that option's value
     * will be used. Otherwise, it's deduced from the field's name by converting
     * it to camelCase.
     * </pre>
     *
     * <code>optional string json_name = 10;</code>
     */
    private void setJsonName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
      jsonName_ = value;
    }
    /**
     * <pre>
     * JSON name of this field. The value is set by protocol compiler. If the
     * user has set a "json_name" option on this field, that option's value
     * will be used. Otherwise, it's deduced from the field's name by converting
     * it to camelCase.
     * </pre>
     *
     * <code>optional string json_name = 10;</code>
     */
    private void clearJsonName() {
      bitField0_ = (bitField0_ & ~0x00000100);
      jsonName_ = getDefaultInstance().getJsonName();
    }
    /**
     * <pre>
     * JSON name of this field. The value is set by protocol compiler. If the
     * user has set a "json_name" option on this field, that option's value
     * will be used. Otherwise, it's deduced from the field's name by converting
     * it to camelCase.
     * </pre>
     *
     * <code>optional string json_name = 10;</code>
     */
    private void setJsonNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
      jsonName_ = value.toStringUtf8();
    }

    public static final int OPTIONS_FIELD_NUMBER = 8;
    private com.google.protobuf.DescriptorProtos.FieldOptions options_;
    /**
     * <code>optional .google.protobuf.FieldOptions options = 8;</code>
     */
    public boolean hasOptions() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional .google.protobuf.FieldOptions options = 8;</code>
     */
    public com.google.protobuf.DescriptorProtos.FieldOptions getOptions() {
      return options_ == null ? com.google.protobuf.DescriptorProtos.FieldOptions.getDefaultInstance() : options_;
    }
    /**
     * <code>optional .google.protobuf.FieldOptions options = 8;</code>
     */
    private void setOptions(com.google.protobuf.DescriptorProtos.FieldOptions value) {
      if (value == null) {
        throw new NullPointerException();
      }
      options_ = value;
      bitField0_ |= 0x00000200;
      }
    /**
     * <code>optional .google.protobuf.FieldOptions options = 8;</code>
     */
    private void setOptions(
        com.google.protobuf.DescriptorProtos.FieldOptions.Builder builderForValue) {
      options_ = builderForValue.build();
      bitField0_ |= 0x00000200;
    }
    /**
     * <code>optional .google.protobuf.FieldOptions options = 8;</code>
     */
    private void mergeOptions(com.google.protobuf.DescriptorProtos.FieldOptions value) {
      if (options_ != null &&
          options_ != com.google.protobuf.DescriptorProtos.FieldOptions.getDefaultInstance()) {
        options_ =
          com.google.protobuf.DescriptorProtos.FieldOptions.newBuilder(options_).mergeFrom(value).buildPartial();
      } else {
        options_ = value;
      }
      bitField0_ |= 0x00000200;
    }
    /**
     * <code>optional .google.protobuf.FieldOptions options = 8;</code>
     */
    private void clearOptions() {  options_ = null;
      bitField0_ = (bitField0_ & ~0x00000200);
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeString(1, getName());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeString(2, getExtendee());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(3, number_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(4, label_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeEnum(5, type_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeString(6, getTypeName());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeString(7, getDefaultValue());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeMessage(8, getOptions());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(9, oneofIndex_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeString(10, getJsonName());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getName());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getExtendee());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, number_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, label_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, type_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(6, getTypeName());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(7, getDefaultValue());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getOptions());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, oneofIndex_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(10, getJsonName());
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.google.protobuf.DescriptorProtos.FieldDescriptorProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.google.protobuf.DescriptorProtos.FieldDescriptorProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.google.protobuf.DescriptorProtos.FieldDescriptorProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.google.protobuf.DescriptorProtos.FieldDescriptorProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.google.protobuf.DescriptorProtos.FieldDescriptorProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.google.protobuf.DescriptorProtos.FieldDescriptorProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.google.protobuf.DescriptorProtos.FieldDescriptorProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.google.protobuf.DescriptorProtos.FieldDescriptorProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.google.protobuf.DescriptorProtos.FieldDescriptorProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.google.protobuf.DescriptorProtos.FieldDescriptorProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.protobuf.DescriptorProtos.FieldDescriptorProto prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * Describes a field within a message.
     * </pre>
     *
     * Protobuf type {@code google.protobuf.FieldDescriptorProto}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.google.protobuf.DescriptorProtos.FieldDescriptorProto, Builder> implements
        // @@protoc_insertion_point(builder_implements:google.protobuf.FieldDescriptorProto)
        com.google.protobuf.DescriptorProtos.FieldDescriptorProtoOrBuilder {
      // Construct using com.google.protobuf.DescriptorProtos.FieldDescriptorProto.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional string name = 1;</code>
       */
      public boolean hasName() {
        return instance.hasName();
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public java.lang.String getName() {
        return instance.getName();
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        return instance.getNameBytes();
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public Builder setName(
          java.lang.String value) {
        copyOnWrite();
        instance.setName(value);
        return this;
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public Builder clearName() {
        copyOnWrite();
        instance.clearName();
        return this;
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setNameBytes(value);
        return this;
      }

      /**
       * <code>optional int32 number = 3;</code>
       */
      public boolean hasNumber() {
        return instance.hasNumber();
      }
      /**
       * <code>optional int32 number = 3;</code>
       */
      public int getNumber() {
        return instance.getNumber();
      }
      /**
       * <code>optional int32 number = 3;</code>
       */
      public Builder setNumber(int value) {
        copyOnWrite();
        instance.setNumber(value);
        return this;
      }
      /**
       * <code>optional int32 number = 3;</code>
       */
      public Builder clearNumber() {
        copyOnWrite();
        instance.clearNumber();
        return this;
      }

      /**
       * <code>optional .google.protobuf.FieldDescriptorProto.Label label = 4;</code>
       */
      public boolean hasLabel() {
        return instance.hasLabel();
      }
      /**
       * <code>optional .google.protobuf.FieldDescriptorProto.Label label = 4;</code>
       */
      public com.google.protobuf.DescriptorProtos.FieldDescriptorProto.Label getLabel() {
        return instance.getLabel();
      }
      /**
       * <code>optional .google.protobuf.FieldDescriptorProto.Label label = 4;</code>
       */
      public Builder setLabel(com.google.protobuf.DescriptorProtos.FieldDescriptorProto.Label value) {
        copyOnWrite();
        instance.setLabel(value);
        return this;
      }
      /**
       * <code>optional .google.protobuf.FieldDescriptorProto.Label label = 4;</code>
       */
      public Builder clearLabel() {
        copyOnWrite();
        instance.clearLabel();
        return this;
      }

      /**
       * <pre>
       * If type_name is set, this need not be set.  If both this and type_name
       * are set, this must be one of TYPE_ENUM, TYPE_MESSAGE or TYPE_GROUP.
       * </pre>
       *
       * <code>optional .google.protobuf.FieldDescriptorProto.Type type = 5;</code>
       */
      public boolean hasType() {
        return instance.hasType();
      }
      /**
       * <pre>
       * If type_name is set, this need not be set.  If both this and type_name
       * are set, this must be one of TYPE_ENUM, TYPE_MESSAGE or TYPE_GROUP.
       * </pre>
       *
       * <code>optional .google.protobuf.FieldDescriptorProto.Type type = 5;</code>
       */
      public com.google.protobuf.DescriptorProtos.FieldDescriptorProto.Type getType() {
        return instance.getType();
      }
      /**
       * <pre>
       * If type_name is set, this need not be set.  If both this and type_name
       * are set, this must be one of TYPE_ENUM, TYPE_MESSAGE or TYPE_GROUP.
       * </pre>
       *
       * <code>optional .google.protobuf.FieldDescriptorProto.Type type = 5;</code>
       */
      public Builder setType(com.google.protobuf.DescriptorProtos.FieldDescriptorProto.Type value) {
        copyOnWrite();
        instance.setType(value);
        return this;
      }
      /**
       * <pre>
       * If type_name is set, this need not be set.  If both this and type_name
       * are set, this must be one of TYPE_ENUM, TYPE_MESSAGE or TYPE_GROUP.
       * </pre>
       *
       * <code>optional .google.protobuf.FieldDescriptorProto.Type type = 5;</code>
       */
      public Builder clearType() {
        copyOnWrite();
        instance.clearType();
        return this;
      }

      /**
       * <pre>
       * For message and enum types, this is the name of the type.  If the name
       * starts with a '.', it is fully-qualified.  Otherwise, C++-like scoping
       * rules are used to find the type (i.e. first the nested types within this
       * message are searched, then within the parent, on up to the root
       * namespace).
       * </pre>
       *
       * <code>optional string type_name = 6;</code>
       */
      public boolean hasTypeName() {
        return instance.hasTypeName();
      }
      /**
       * <pre>
       * For message and enum types, this is the name of the type.  If the name
       * starts with a '.', it is fully-qualified.  Otherwise, C++-like scoping
       * rules are used to find the type (i.e. first the nested types within this
       * message are searched, then within the parent, on up to the root
       * namespace).
       * </pre>
       *
       * <code>optional string type_name = 6;</code>
       */
      public java.lang.String getTypeName() {
        return instance.getTypeName();
      }
      /**
       * <pre>
       * For message and enum types, this is the name of the type.  If the name
       * starts with a '.', it is fully-qualified.  Otherwise, C++-like scoping
       * rules are used to find the type (i.e. first the nested types within this
       * message are searched, then within the parent, on up to the root
       * namespace).
       * </pre>
       *
       * <code>optional string type_name = 6;</code>
       */
      public com.google.protobuf.ByteString
          getTypeNameBytes() {
        return instance.getTypeNameBytes();
      }
      /**
       * <pre>
       * For message and enum types, this is the name of the type.  If the name
       * starts with a '.', it is fully-qualified.  Otherwise, C++-like scoping
       * rules are used to find the type (i.e. first the nested types within this
       * message are searched, then within the parent, on up to the root
       * namespace).
       * </pre>
       *
       * <code>optional string type_name = 6;</code>
       */
      public Builder setTypeName(
          java.lang.String value) {
        copyOnWrite();
        instance.setTypeName(value);
        return this;
      }
      /**
       * <pre>
       * For message and enum types, this is the name of the type.  If the name
       * starts with a '.', it is fully-qualified.  Otherwise, C++-like scoping
       * rules are used to find the type (i.e. first the nested types within this
       * message are searched, then within the parent, on up to the root
       * namespace).
       * </pre>
       *
       * <code>optional string type_name = 6;</code>
       */
      public Builder clearTypeName() {
        copyOnWrite();
        instance.clearTypeName();
        return this;
      }
      /**
       * <pre>
       * For message and enum types, this is the name of the type.  If the name
       * starts with a '.', it is fully-qualified.  Otherwise, C++-like scoping
       * rules are used to find the type (i.e. first the nested types within this
       * message are searched, then within the parent, on up to the root
       * namespace).
       * </pre>
       *
       * <code>optional string type_name = 6;</code>
       */
      public Builder setTypeNameBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setTypeNameBytes(value);
        return this;
      }

      /**
       * <pre>
       * For extensions, this is the name of the type being extended.  It is
       * resolved in the same manner as type_name.
       * </pre>
       *
       * <code>optional string extendee = 2;</code>
       */
      public boolean hasExtendee() {
        return instance.hasExtendee();
      }
      /**
       * <pre>
       * For extensions, this is the name of the type being extended.  It is
       * resolved in the same manner as type_name.
       * </pre>
       *
       * <code>optional string extendee = 2;</code>
       */
      public java.lang.String getExtendee() {
        return instance.getExtendee();
      }
      /**
       * <pre>
       * For extensions, this is the name of the type being extended.  It is
       * resolved in the same manner as type_name.
       * </pre>
       *
       * <code>optional string extendee = 2;</code>
       */
      public com.google.protobuf.ByteString
          getExtendeeBytes() {
        return instance.getExtendeeBytes();
      }
      /**
       * <pre>
       * For extensions, this is the name of the type being extended.  It is
       * resolved in the same manner as type_name.
       * </pre>
       *
       * <code>optional string extendee = 2;</code>
       */
      public Builder setExtendee(
          java.lang.String value) {
        copyOnWrite();
        instance.setExtendee(value);
        return this;
      }
      /**
       * <pre>
       * For extensions, this is the name of the type being extended.  It is
       * resolved in the same manner as type_name.
       * </pre>
       *
       * <code>optional string extendee = 2;</code>
       */
      public Builder clearExtendee() {
        copyOnWrite();
        instance.clearExtendee();
        return this;
      }
      /**
       * <pre>
       * For extensions, this is the name of the type being extended.  It is
       * resolved in the same manner as type_name.
       * </pre>
       *
       * <code>optional string extendee = 2;</code>
       */
      public Builder setExtendeeBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setExtendeeBytes(value);
        return this;
      }

      /**
       * <pre>
       * For numeric types, contains the original text representation of the value.
       * For booleans, "true" or "false".
       * For strings, contains the default text contents (not escaped in any way).
       * For bytes, contains the C escaped value.  All bytes &gt;= 128 are escaped.
       * TODO(kenton):  Base-64 encode?
       * </pre>
       *
       * <code>optional string default_value = 7;</code>
       */
      public boolean hasDefaultValue() {
        return instance.hasDefaultValue();
      }
      /**
       * <pre>
       * For numeric types, contains the original text representation of the value.
       * For booleans, "true" or "false".
       * For strings, contains the default text contents (not escaped in any way).
       * For bytes, contains the C escaped value.  All bytes &gt;= 128 are escaped.
       * TODO(kenton):  Base-64 encode?
       * </pre>
       *
       * <code>optional string default_value = 7;</code>
       */
      public java.lang.String getDefaultValue() {
        return instance.getDefaultValue();
      }
      /**
       * <pre>
       * For numeric types, contains the original text representation of the value.
       * For booleans, "true" or "false".
       * For strings, contains the default text contents (not escaped in any way).
       * For bytes, contains the C escaped value.  All bytes &gt;= 128 are escaped.
       * TODO(kenton):  Base-64 encode?
       * </pre>
       *
       * <code>optional string default_value = 7;</code>
       */
      public com.google.protobuf.ByteString
          getDefaultValueBytes() {
        return instance.getDefaultValueBytes();
      }
      /**
       * <pre>
       * For numeric types, contains the original text representation of the value.
       * For booleans, "true" or "false".
       * For strings, contains the default text contents (not escaped in any way).
       * For bytes, contains the C escaped value.  All bytes &gt;= 128 are escaped.
       * TODO(kenton):  Base-64 encode?
       * </pre>
       *
       * <code>optional string default_value = 7;</code>
       */
      public Builder setDefaultValue(
          java.lang.String value) {
        copyOnWrite();
        instance.setDefaultValue(value);
        return this;
      }
      /**
       * <pre>
       * For numeric types, contains the original text representation of the value.
       * For booleans, "true" or "false".
       * For strings, contains the default text contents (not escaped in any way).
       * For bytes, contains the C escaped value.  All bytes &gt;= 128 are escaped.
       * TODO(kenton):  Base-64 encode?
       * </pre>
       *
       * <code>optional string default_value = 7;</code>
       */
      public Builder clearDefaultValue() {
        copyOnWrite();
        instance.clearDefaultValue();
        return this;
      }
      /**
       * <pre>
       * For numeric types, contains the original text representation of the value.
       * For booleans, "true" or "false".
       * For strings, contains the default text contents (not escaped in any way).
       * For bytes, contains the C escaped value.  All bytes &gt;= 128 are escaped.
       * TODO(kenton):  Base-64 encode?
       * </pre>
       *
       * <code>optional string default_value = 7;</code>
       */
      public Builder setDefaultValueBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setDefaultValueBytes(value);
        return this;
      }

      /**
       * <pre>
       * If set, gives the index of a oneof in the containing type's oneof_decl
       * list.  This field is a member of that oneof.
       * </pre>
       *
       * <code>optional int32 oneof_index = 9;</code>
       */
      public boolean hasOneofIndex() {
        return instance.hasOneofIndex();
      }
      /**
       * <pre>
       * If set, gives the index of a oneof in the containing type's oneof_decl
       * list.  This field is a member of that oneof.
       * </pre>
       *
       * <code>optional int32 oneof_index = 9;</code>
       */
      public int getOneofIndex() {
        return instance.getOneofIndex();
      }
      /**
       * <pre>
       * If set, gives the index of a oneof in the containing type's oneof_decl
       * list.  This field is a member of that oneof.
       * </pre>
       *
       * <code>optional int32 oneof_index = 9;</code>
       */
      public Builder setOneofIndex(int value) {
        copyOnWrite();
        instance.setOneofIndex(value);
        return this;
      }
      /**
       * <pre>
       * If set, gives the index of a oneof in the containing type's oneof_decl
       * list.  This field is a member of that oneof.
       * </pre>
       *
       * <code>optional int32 oneof_index = 9;</code>
       */
      public Builder clearOneofIndex() {
        copyOnWrite();
        instance.clearOneofIndex();
        return this;
      }

      /**
       * <pre>
       * JSON name of this field. The value is set by protocol compiler. If the
       * user has set a "json_name" option on this field, that option's value
       * will be used. Otherwise, it's deduced from the field's name by converting
       * it to camelCase.
       * </pre>
       *
       * <code>optional string json_name = 10;</code>
       */
      public boolean hasJsonName() {
        return instance.hasJsonName();
      }
      /**
       * <pre>
       * JSON name of this field. The value is set by protocol compiler. If the
       * user has set a "json_name" option on this field, that option's value
       * will be used. Otherwise, it's deduced from the field's name by converting
       * it to camelCase.
       * </pre>
       *
       * <code>optional string json_name = 10;</code>
       */
      public java.lang.String getJsonName() {
        return instance.getJsonName();
      }
      /**
       * <pre>
       * JSON name of this field. The value is set by protocol compiler. If the
       * user has set a "json_name" option on this field, that option's value
       * will be used. Otherwise, it's deduced from the field's name by converting
       * it to camelCase.
       * </pre>
       *
       * <code>optional string json_name = 10;</code>
       */
      public com.google.protobuf.ByteString
          getJsonNameBytes() {
        return instance.getJsonNameBytes();
      }
      /**
       * <pre>
       * JSON name of this field. The value is set by protocol compiler. If the
       * user has set a "json_name" option on this field, that option's value
       * will be used. Otherwise, it's deduced from the field's name by converting
       * it to camelCase.
       * </pre>
       *
       * <code>optional string json_name = 10;</code>
       */
      public Builder setJsonName(
          java.lang.String value) {
        copyOnWrite();
        instance.setJsonName(value);
        return this;
      }
      /**
       * <pre>
       * JSON name of this field. The value is set by protocol compiler. If the
       * user has set a "json_name" option on this field, that option's value
       * will be used. Otherwise, it's deduced from the field's name by converting
       * it to camelCase.
       * </pre>
       *
       * <code>optional string json_name = 10;</code>
       */
      public Builder clearJsonName() {
        copyOnWrite();
        instance.clearJsonName();
        return this;
      }
      /**
       * <pre>
       * JSON name of this field. The value is set by protocol compiler. If the
       * user has set a "json_name" option on this field, that option's value
       * will be used. Otherwise, it's deduced from the field's name by converting
       * it to camelCase.
       * </pre>
       *
       * <code>optional string json_name = 10;</code>
       */
      public Builder setJsonNameBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setJsonNameBytes(value);
        return this;
      }

      /**
       * <code>optional .google.protobuf.FieldOptions options = 8;</code>
       */
      public boolean hasOptions() {
        return instance.hasOptions();
      }
      /**
       * <code>optional .google.protobuf.FieldOptions options = 8;</code>
       */
      public com.google.protobuf.DescriptorProtos.FieldOptions getOptions() {
        return instance.getOptions();
      }
      /**
       * <code>optional .google.protobuf.FieldOptions options = 8;</code>
       */
      public Builder setOptions(com.google.protobuf.DescriptorProtos.FieldOptions value) {
        copyOnWrite();
        instance.setOptions(value);
        return this;
        }
      /**
       * <code>optional .google.protobuf.FieldOptions options = 8;</code>
       */
      public Builder setOptions(
          com.google.protobuf.DescriptorProtos.FieldOptions.Builder builderForValue) {
        copyOnWrite();
        instance.setOptions(builderForValue);
        return this;
      }
      /**
       * <code>optional .google.protobuf.FieldOptions options = 8;</code>
       */
      public Builder mergeOptions(com.google.protobuf.DescriptorProtos.FieldOptions value) {
        copyOnWrite();
        instance.mergeOptions(value);
        return this;
      }
      /**
       * <code>optional .google.protobuf.FieldOptions options = 8;</code>
       */
      public Builder clearOptions() {  copyOnWrite();
        instance.clearOptions();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:google.protobuf.FieldDescriptorProto)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.google.protobuf.DescriptorProtos.FieldDescriptorProto();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (hasOptions()) {
            if (!getOptions().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.google.protobuf.DescriptorProtos.FieldDescriptorProto other = (com.google.protobuf.DescriptorProtos.FieldDescriptorProto) arg1;
          name_ = visitor.visitString(
              hasName(), name_,
              other.hasName(), other.name_);
          number_ = visitor.visitInt(
              hasNumber(), number_,
              other.hasNumber(), other.number_);
          label_ = visitor.visitInt(hasLabel(), label_,
              other.hasLabel(), other.label_);
          type_ = visitor.visitInt(hasType(), type_,
              other.hasType(), other.type_);
          typeName_ = visitor.visitString(
              hasTypeName(), typeName_,
              other.hasTypeName(), other.typeName_);
          extendee_ = visitor.visitString(
              hasExtendee(), extendee_,
              other.hasExtendee(), other.extendee_);
          defaultValue_ = visitor.visitString(
              hasDefaultValue(), defaultValue_,
              other.hasDefaultValue(), other.defaultValue_);
          oneofIndex_ = visitor.visitInt(
              hasOneofIndex(), oneofIndex_,
              other.hasOneofIndex(), other.oneofIndex_);
          jsonName_ = visitor.visitString(
              hasJsonName(), jsonName_,
              other.hasJsonName(), other.jsonName_);
          options_ = visitor.visitMessage(options_, other.options_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readString();
                  bitField0_ |= 0x00000001;
                  name_ = s;
                  break;
                }
                case 18: {
                  String s = input.readString();
                  bitField0_ |= 0x00000020;
                  extendee_ = s;
                  break;
                }
                case 24: {
                  bitField0_ |= 0x00000002;
                  number_ = input.readInt32();
                  break;
                }
                case 32: {
                  int rawValue = input.readEnum();
                  com.google.protobuf.DescriptorProtos.FieldDescriptorProto.Label value = com.google.protobuf.DescriptorProtos.FieldDescriptorProto.Label.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(4, rawValue);
                  } else {
                    bitField0_ |= 0x00000004;
                    label_ = rawValue;
                  }
                  break;
                }
                case 40: {
                  int rawValue = input.readEnum();
                  com.google.protobuf.DescriptorProtos.FieldDescriptorProto.Type value = com.google.protobuf.DescriptorProtos.FieldDescriptorProto.Type.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(5, rawValue);
                  } else {
                    bitField0_ |= 0x00000008;
                    type_ = rawValue;
                  }
                  break;
                }
                case 50: {
                  String s = input.readString();
                  bitField0_ |= 0x00000010;
                  typeName_ = s;
                  break;
                }
                case 58: {
                  String s = input.readString();
                  bitField0_ |= 0x00000040;
                  defaultValue_ = s;
                  break;
                }
                case 66: {
                  com.google.protobuf.DescriptorProtos.FieldOptions.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000200) == 0x00000200)) {
                    subBuilder = options_.toBuilder();
                  }
                  options_ = input.readMessage(com.google.protobuf.DescriptorProtos.FieldOptions.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(options_);
                    options_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000200;
                  break;
                }
                case 72: {
                  bitField0_ |= 0x00000080;
                  oneofIndex_ = input.readInt32();
                  break;
                }
                case 82: {
                  String s = input.readString();
                  bitField0_ |= 0x00000100;
                  jsonName_ = s;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.google.protobuf.DescriptorProtos.FieldDescriptorProto.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:google.protobuf.FieldDescriptorProto)
    private static final com.google.protobuf.DescriptorProtos.FieldDescriptorProto DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new FieldDescriptorProto();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.google.protobuf.DescriptorProtos.FieldDescriptorProto getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<FieldDescriptorProto> PARSER;

    public static com.google.protobuf.Parser<FieldDescriptorProto> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface OneofDescriptorProtoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.protobuf.OneofDescriptorProto)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional string name = 1;</code>
     */
    boolean hasName();
    /**
     * <code>optional string name = 1;</code>
     */
    java.lang.String getName();
    /**
     * <code>optional string name = 1;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>optional .google.protobuf.OneofOptions options = 2;</code>
     */
    boolean hasOptions();
    /**
     * <code>optional .google.protobuf.OneofOptions options = 2;</code>
     */
    com.google.protobuf.DescriptorProtos.OneofOptions getOptions();
  }
  /**
   * <pre>
   * Describes a oneof.
   * </pre>
   *
   * Protobuf type {@code google.protobuf.OneofDescriptorProto}
   */
  public  static final class OneofDescriptorProto extends
      com.google.protobuf.GeneratedMessageLite<
          OneofDescriptorProto, OneofDescriptorProto.Builder> implements
      // @@protoc_insertion_point(message_implements:google.protobuf.OneofDescriptorProto)
      OneofDescriptorProtoOrBuilder {
    private OneofDescriptorProto() {
      name_ = "";
    }
    private int bitField0_;
    public static final int NAME_FIELD_NUMBER = 1;
    private java.lang.String name_;
    /**
     * <code>optional string name = 1;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string name = 1;</code>
     */
    public java.lang.String getName() {
      return name_;
    }
    /**
     * <code>optional string name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(name_);
    }
    /**
     * <code>optional string name = 1;</code>
     */
    private void setName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      name_ = value;
    }
    /**
     * <code>optional string name = 1;</code>
     */
    private void clearName() {
      bitField0_ = (bitField0_ & ~0x00000001);
      name_ = getDefaultInstance().getName();
    }
    /**
     * <code>optional string name = 1;</code>
     */
    private void setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      name_ = value.toStringUtf8();
    }

    public static final int OPTIONS_FIELD_NUMBER = 2;
    private com.google.protobuf.DescriptorProtos.OneofOptions options_;
    /**
     * <code>optional .google.protobuf.OneofOptions options = 2;</code>
     */
    public boolean hasOptions() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .google.protobuf.OneofOptions options = 2;</code>
     */
    public com.google.protobuf.DescriptorProtos.OneofOptions getOptions() {
      return options_ == null ? com.google.protobuf.DescriptorProtos.OneofOptions.getDefaultInstance() : options_;
    }
    /**
     * <code>optional .google.protobuf.OneofOptions options = 2;</code>
     */
    private void setOptions(com.google.protobuf.DescriptorProtos.OneofOptions value) {
      if (value == null) {
        throw new NullPointerException();
      }
      options_ = value;
      bitField0_ |= 0x00000002;
      }
    /**
     * <code>optional .google.protobuf.OneofOptions options = 2;</code>
     */
    private void setOptions(
        com.google.protobuf.DescriptorProtos.OneofOptions.Builder builderForValue) {
      options_ = builderForValue.build();
      bitField0_ |= 0x00000002;
    }
    /**
     * <code>optional .google.protobuf.OneofOptions options = 2;</code>
     */
    private void mergeOptions(com.google.protobuf.DescriptorProtos.OneofOptions value) {
      if (options_ != null &&
          options_ != com.google.protobuf.DescriptorProtos.OneofOptions.getDefaultInstance()) {
        options_ =
          com.google.protobuf.DescriptorProtos.OneofOptions.newBuilder(options_).mergeFrom(value).buildPartial();
      } else {
        options_ = value;
      }
      bitField0_ |= 0x00000002;
    }
    /**
     * <code>optional .google.protobuf.OneofOptions options = 2;</code>
     */
    private void clearOptions() {  options_ = null;
      bitField0_ = (bitField0_ & ~0x00000002);
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeString(1, getName());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, getOptions());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getName());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getOptions());
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.google.protobuf.DescriptorProtos.OneofDescriptorProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.google.protobuf.DescriptorProtos.OneofDescriptorProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.google.protobuf.DescriptorProtos.OneofDescriptorProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.google.protobuf.DescriptorProtos.OneofDescriptorProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.google.protobuf.DescriptorProtos.OneofDescriptorProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.google.protobuf.DescriptorProtos.OneofDescriptorProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.google.protobuf.DescriptorProtos.OneofDescriptorProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.google.protobuf.DescriptorProtos.OneofDescriptorProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.google.protobuf.DescriptorProtos.OneofDescriptorProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.google.protobuf.DescriptorProtos.OneofDescriptorProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.protobuf.DescriptorProtos.OneofDescriptorProto prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * Describes a oneof.
     * </pre>
     *
     * Protobuf type {@code google.protobuf.OneofDescriptorProto}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.google.protobuf.DescriptorProtos.OneofDescriptorProto, Builder> implements
        // @@protoc_insertion_point(builder_implements:google.protobuf.OneofDescriptorProto)
        com.google.protobuf.DescriptorProtos.OneofDescriptorProtoOrBuilder {
      // Construct using com.google.protobuf.DescriptorProtos.OneofDescriptorProto.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional string name = 1;</code>
       */
      public boolean hasName() {
        return instance.hasName();
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public java.lang.String getName() {
        return instance.getName();
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        return instance.getNameBytes();
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public Builder setName(
          java.lang.String value) {
        copyOnWrite();
        instance.setName(value);
        return this;
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public Builder clearName() {
        copyOnWrite();
        instance.clearName();
        return this;
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setNameBytes(value);
        return this;
      }

      /**
       * <code>optional .google.protobuf.OneofOptions options = 2;</code>
       */
      public boolean hasOptions() {
        return instance.hasOptions();
      }
      /**
       * <code>optional .google.protobuf.OneofOptions options = 2;</code>
       */
      public com.google.protobuf.DescriptorProtos.OneofOptions getOptions() {
        return instance.getOptions();
      }
      /**
       * <code>optional .google.protobuf.OneofOptions options = 2;</code>
       */
      public Builder setOptions(com.google.protobuf.DescriptorProtos.OneofOptions value) {
        copyOnWrite();
        instance.setOptions(value);
        return this;
        }
      /**
       * <code>optional .google.protobuf.OneofOptions options = 2;</code>
       */
      public Builder setOptions(
          com.google.protobuf.DescriptorProtos.OneofOptions.Builder builderForValue) {
        copyOnWrite();
        instance.setOptions(builderForValue);
        return this;
      }
      /**
       * <code>optional .google.protobuf.OneofOptions options = 2;</code>
       */
      public Builder mergeOptions(com.google.protobuf.DescriptorProtos.OneofOptions value) {
        copyOnWrite();
        instance.mergeOptions(value);
        return this;
      }
      /**
       * <code>optional .google.protobuf.OneofOptions options = 2;</code>
       */
      public Builder clearOptions() {  copyOnWrite();
        instance.clearOptions();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:google.protobuf.OneofDescriptorProto)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.google.protobuf.DescriptorProtos.OneofDescriptorProto();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (hasOptions()) {
            if (!getOptions().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.google.protobuf.DescriptorProtos.OneofDescriptorProto other = (com.google.protobuf.DescriptorProtos.OneofDescriptorProto) arg1;
          name_ = visitor.visitString(
              hasName(), name_,
              other.hasName(), other.name_);
          options_ = visitor.visitMessage(options_, other.options_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readString();
                  bitField0_ |= 0x00000001;
                  name_ = s;
                  break;
                }
                case 18: {
                  com.google.protobuf.DescriptorProtos.OneofOptions.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000002) == 0x00000002)) {
                    subBuilder = options_.toBuilder();
                  }
                  options_ = input.readMessage(com.google.protobuf.DescriptorProtos.OneofOptions.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(options_);
                    options_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000002;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.google.protobuf.DescriptorProtos.OneofDescriptorProto.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:google.protobuf.OneofDescriptorProto)
    private static final com.google.protobuf.DescriptorProtos.OneofDescriptorProto DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new OneofDescriptorProto();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.google.protobuf.DescriptorProtos.OneofDescriptorProto getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<OneofDescriptorProto> PARSER;

    public static com.google.protobuf.Parser<OneofDescriptorProto> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface EnumDescriptorProtoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.protobuf.EnumDescriptorProto)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional string name = 1;</code>
     */
    boolean hasName();
    /**
     * <code>optional string name = 1;</code>
     */
    java.lang.String getName();
    /**
     * <code>optional string name = 1;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>repeated .google.protobuf.EnumValueDescriptorProto value = 2;</code>
     */
    java.util.List<com.google.protobuf.DescriptorProtos.EnumValueDescriptorProto>
        getValueList();
    /**
     * <code>repeated .google.protobuf.EnumValueDescriptorProto value = 2;</code>
     */
    com.google.protobuf.DescriptorProtos.EnumValueDescriptorProto getValue(int index);
    /**
     * <code>repeated .google.protobuf.EnumValueDescriptorProto value = 2;</code>
     */
    int getValueCount();

    /**
     * <code>optional .google.protobuf.EnumOptions options = 3;</code>
     */
    boolean hasOptions();
    /**
     * <code>optional .google.protobuf.EnumOptions options = 3;</code>
     */
    com.google.protobuf.DescriptorProtos.EnumOptions getOptions();

    /**
     * <pre>
     * Range of reserved numeric values. Reserved numeric values may not be used
     * by enum values in the same enum declaration. Reserved ranges may not
     * overlap.
     * </pre>
     *
     * <code>repeated .google.protobuf.EnumDescriptorProto.EnumReservedRange reserved_range = 4;</code>
     */
    java.util.List<com.google.protobuf.DescriptorProtos.EnumDescriptorProto.EnumReservedRange>
        getReservedRangeList();
    /**
     * <pre>
     * Range of reserved numeric values. Reserved numeric values may not be used
     * by enum values in the same enum declaration. Reserved ranges may not
     * overlap.
     * </pre>
     *
     * <code>repeated .google.protobuf.EnumDescriptorProto.EnumReservedRange reserved_range = 4;</code>
     */
    com.google.protobuf.DescriptorProtos.EnumDescriptorProto.EnumReservedRange getReservedRange(int index);
    /**
     * <pre>
     * Range of reserved numeric values. Reserved numeric values may not be used
     * by enum values in the same enum declaration. Reserved ranges may not
     * overlap.
     * </pre>
     *
     * <code>repeated .google.protobuf.EnumDescriptorProto.EnumReservedRange reserved_range = 4;</code>
     */
    int getReservedRangeCount();

    /**
     * <pre>
     * Reserved enum value names, which may not be reused. A given name may only
     * be reserved once.
     * </pre>
     *
     * <code>repeated string reserved_name = 5;</code>
     */
    java.util.List<String>
        getReservedNameList();
    /**
     * <pre>
     * Reserved enum value names, which may not be reused. A given name may only
     * be reserved once.
     * </pre>
     *
     * <code>repeated string reserved_name = 5;</code>
     */
    int getReservedNameCount();
    /**
     * <pre>
     * Reserved enum value names, which may not be reused. A given name may only
     * be reserved once.
     * </pre>
     *
     * <code>repeated string reserved_name = 5;</code>
     */
    java.lang.String getReservedName(int index);
    /**
     * <pre>
     * Reserved enum value names, which may not be reused. A given name may only
     * be reserved once.
     * </pre>
     *
     * <code>repeated string reserved_name = 5;</code>
     */
    com.google.protobuf.ByteString
        getReservedNameBytes(int index);
  }
  /**
   * <pre>
   * Describes an enum type.
   * </pre>
   *
   * Protobuf type {@code google.protobuf.EnumDescriptorProto}
   */
  public  static final class EnumDescriptorProto extends
      com.google.protobuf.GeneratedMessageLite<
          EnumDescriptorProto, EnumDescriptorProto.Builder> implements
      // @@protoc_insertion_point(message_implements:google.protobuf.EnumDescriptorProto)
      EnumDescriptorProtoOrBuilder {
    private EnumDescriptorProto() {
      name_ = "";
      value_ = emptyProtobufList();
      reservedRange_ = emptyProtobufList();
      reservedName_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
    }
    public interface EnumReservedRangeOrBuilder extends
        // @@protoc_insertion_point(interface_extends:google.protobuf.EnumDescriptorProto.EnumReservedRange)
        com.google.protobuf.MessageLiteOrBuilder {

      /**
       * <pre>
       * Inclusive.
       * </pre>
       *
       * <code>optional int32 start = 1;</code>
       */
      boolean hasStart();
      /**
       * <pre>
       * Inclusive.
       * </pre>
       *
       * <code>optional int32 start = 1;</code>
       */
      int getStart();

      /**
       * <pre>
       * Inclusive.
       * </pre>
       *
       * <code>optional int32 end = 2;</code>
       */
      boolean hasEnd();
      /**
       * <pre>
       * Inclusive.
       * </pre>
       *
       * <code>optional int32 end = 2;</code>
       */
      int getEnd();
    }
    /**
     * <pre>
     * Range of reserved numeric values. Reserved values may not be used by
     * entries in the same enum. Reserved ranges may not overlap.
     * Note that this is distinct from DescriptorProto.ReservedRange in that it
     * is inclusive such that it can appropriately represent the entire int32
     * domain.
     * </pre>
     *
     * Protobuf type {@code google.protobuf.EnumDescriptorProto.EnumReservedRange}
     */
    public  static final class EnumReservedRange extends
        com.google.protobuf.GeneratedMessageLite<
            EnumReservedRange, EnumReservedRange.Builder> implements
        // @@protoc_insertion_point(message_implements:google.protobuf.EnumDescriptorProto.EnumReservedRange)
        EnumReservedRangeOrBuilder {
      private EnumReservedRange() {
      }
      private int bitField0_;
      public static final int START_FIELD_NUMBER = 1;
      private int start_;
      /**
       * <pre>
       * Inclusive.
       * </pre>
       *
       * <code>optional int32 start = 1;</code>
       */
      public boolean hasStart() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * Inclusive.
       * </pre>
       *
       * <code>optional int32 start = 1;</code>
       */
      public int getStart() {
        return start_;
      }
      /**
       * <pre>
       * Inclusive.
       * </pre>
       *
       * <code>optional int32 start = 1;</code>
       */
      private void setStart(int value) {
        bitField0_ |= 0x00000001;
        start_ = value;
      }
      /**
       * <pre>
       * Inclusive.
       * </pre>
       *
       * <code>optional int32 start = 1;</code>
       */
      private void clearStart() {
        bitField0_ = (bitField0_ & ~0x00000001);
        start_ = 0;
      }

      public static final int END_FIELD_NUMBER = 2;
      private int end_;
      /**
       * <pre>
       * Inclusive.
       * </pre>
       *
       * <code>optional int32 end = 2;</code>
       */
      public boolean hasEnd() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * Inclusive.
       * </pre>
       *
       * <code>optional int32 end = 2;</code>
       */
      public int getEnd() {
        return end_;
      }
      /**
       * <pre>
       * Inclusive.
       * </pre>
       *
       * <code>optional int32 end = 2;</code>
       */
      private void setEnd(int value) {
        bitField0_ |= 0x00000002;
        end_ = value;
      }
      /**
       * <pre>
       * Inclusive.
       * </pre>
       *
       * <code>optional int32 end = 2;</code>
       */
      private void clearEnd() {
        bitField0_ = (bitField0_ & ~0x00000002);
        end_ = 0;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt32(1, start_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeInt32(2, end_);
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, start_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, end_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      public static com.google.protobuf.DescriptorProtos.EnumDescriptorProto.EnumReservedRange parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static com.google.protobuf.DescriptorProtos.EnumDescriptorProto.EnumReservedRange parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static com.google.protobuf.DescriptorProtos.EnumDescriptorProto.EnumReservedRange parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static com.google.protobuf.DescriptorProtos.EnumDescriptorProto.EnumReservedRange parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static com.google.protobuf.DescriptorProtos.EnumDescriptorProto.EnumReservedRange parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static com.google.protobuf.DescriptorProtos.EnumDescriptorProto.EnumReservedRange parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static com.google.protobuf.DescriptorProtos.EnumDescriptorProto.EnumReservedRange parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input);
      }
      public static com.google.protobuf.DescriptorProtos.EnumDescriptorProto.EnumReservedRange parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static com.google.protobuf.DescriptorProtos.EnumDescriptorProto.EnumReservedRange parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static com.google.protobuf.DescriptorProtos.EnumDescriptorProto.EnumReservedRange parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }

      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.google.protobuf.DescriptorProtos.EnumDescriptorProto.EnumReservedRange prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      /**
       * <pre>
       * Range of reserved numeric values. Reserved values may not be used by
       * entries in the same enum. Reserved ranges may not overlap.
       * Note that this is distinct from DescriptorProto.ReservedRange in that it
       * is inclusive such that it can appropriately represent the entire int32
       * domain.
       * </pre>
       *
       * Protobuf type {@code google.protobuf.EnumDescriptorProto.EnumReservedRange}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            com.google.protobuf.DescriptorProtos.EnumDescriptorProto.EnumReservedRange, Builder> implements
          // @@protoc_insertion_point(builder_implements:google.protobuf.EnumDescriptorProto.EnumReservedRange)
          com.google.protobuf.DescriptorProtos.EnumDescriptorProto.EnumReservedRangeOrBuilder {
        // Construct using com.google.protobuf.DescriptorProtos.EnumDescriptorProto.EnumReservedRange.newBuilder()
        private Builder() {
          super(DEFAULT_INSTANCE);
        }


        /**
         * <pre>
         * Inclusive.
         * </pre>
         *
         * <code>optional int32 start = 1;</code>
         */
        public boolean hasStart() {
          return instance.hasStart();
        }
        /**
         * <pre>
         * Inclusive.
         * </pre>
         *
         * <code>optional int32 start = 1;</code>
         */
        public int getStart() {
          return instance.getStart();
        }
        /**
         * <pre>
         * Inclusive.
         * </pre>
         *
         * <code>optional int32 start = 1;</code>
         */
        public Builder setStart(int value) {
          copyOnWrite();
          instance.setStart(value);
          return this;
        }
        /**
         * <pre>
         * Inclusive.
         * </pre>
         *
         * <code>optional int32 start = 1;</code>
         */
        public Builder clearStart() {
          copyOnWrite();
          instance.clearStart();
          return this;
        }

        /**
         * <pre>
         * Inclusive.
         * </pre>
         *
         * <code>optional int32 end = 2;</code>
         */
        public boolean hasEnd() {
          return instance.hasEnd();
        }
        /**
         * <pre>
         * Inclusive.
         * </pre>
         *
         * <code>optional int32 end = 2;</code>
         */
        public int getEnd() {
          return instance.getEnd();
        }
        /**
         * <pre>
         * Inclusive.
         * </pre>
         *
         * <code>optional int32 end = 2;</code>
         */
        public Builder setEnd(int value) {
          copyOnWrite();
          instance.setEnd(value);
          return this;
        }
        /**
         * <pre>
         * Inclusive.
         * </pre>
         *
         * <code>optional int32 end = 2;</code>
         */
        public Builder clearEnd() {
          copyOnWrite();
          instance.clearEnd();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:google.protobuf.EnumDescriptorProto.EnumReservedRange)
      }
      protected final Object dynamicMethod(
          com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
          Object arg0, Object arg1) {
        switch (method) {
          case NEW_MUTABLE_INSTANCE: {
            return new com.google.protobuf.DescriptorProtos.EnumDescriptorProto.EnumReservedRange();
          }
          case IS_INITIALIZED: {
            return DEFAULT_INSTANCE;
          }
          case MAKE_IMMUTABLE: {
            return null;
          }
          case NEW_BUILDER: {
            return new Builder();
          }
          case VISIT: {
            Visitor visitor = (Visitor) arg0;
            com.google.protobuf.DescriptorProtos.EnumDescriptorProto.EnumReservedRange other = (com.google.protobuf.DescriptorProtos.EnumDescriptorProto.EnumReservedRange) arg1;
            start_ = visitor.visitInt(
                hasStart(), start_,
                other.hasStart(), other.start_);
            end_ = visitor.visitInt(
                hasEnd(), end_,
                other.hasEnd(), other.end_);
            if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                .INSTANCE) {
              bitField0_ |= other.bitField0_;
            }
            return this;
          }
          case MERGE_FROM_STREAM: {
            com.google.protobuf.CodedInputStream input =
                (com.google.protobuf.CodedInputStream) arg0;
            com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                (com.google.protobuf.ExtensionRegistryLite) arg1;
            try {
              boolean done = false;
              while (!done) {
                int tag = input.readTag();
                switch (tag) {
                  case 0:
                    done = true;
                    break;
                  default: {
                    if (!parseUnknownField(tag, input)) {
                      done = true;
                    }
                    break;
                  }
                  case 8: {
                    bitField0_ |= 0x00000001;
                    start_ = input.readInt32();
                    break;
                  }
                  case 16: {
                    bitField0_ |= 0x00000002;
                    end_ = input.readInt32();
                    break;
                  }
                }
              }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw new RuntimeException(e.setUnfinishedMessage(this));
            } catch (java.io.IOException e) {
              throw new RuntimeException(
                  new com.google.protobuf.InvalidProtocolBufferException(
                      e.getMessage()).setUnfinishedMessage(this));
            } finally {
            }
          }
          case GET_DEFAULT_INSTANCE: {
            return DEFAULT_INSTANCE;
          }
          case GET_PARSER: {
            if (PARSER == null) {    synchronized (com.google.protobuf.DescriptorProtos.EnumDescriptorProto.EnumReservedRange.class) {
                if (PARSER == null) {
                  PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                }
              }
            }
            return PARSER;
          }
        }
        throw new UnsupportedOperationException();
      }


      // @@protoc_insertion_point(class_scope:google.protobuf.EnumDescriptorProto.EnumReservedRange)
      private static final com.google.protobuf.DescriptorProtos.EnumDescriptorProto.EnumReservedRange DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new EnumReservedRange();
        DEFAULT_INSTANCE.makeImmutable();
      }

      public static com.google.protobuf.DescriptorProtos.EnumDescriptorProto.EnumReservedRange getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static volatile com.google.protobuf.Parser<EnumReservedRange> PARSER;

      public static com.google.protobuf.Parser<EnumReservedRange> parser() {
        return DEFAULT_INSTANCE.getParserForType();
      }
    }

    private int bitField0_;
    public static final int NAME_FIELD_NUMBER = 1;
    private java.lang.String name_;
    /**
     * <code>optional string name = 1;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string name = 1;</code>
     */
    public java.lang.String getName() {
      return name_;
    }
    /**
     * <code>optional string name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(name_);
    }
    /**
     * <code>optional string name = 1;</code>
     */
    private void setName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      name_ = value;
    }
    /**
     * <code>optional string name = 1;</code>
     */
    private void clearName() {
      bitField0_ = (bitField0_ & ~0x00000001);
      name_ = getDefaultInstance().getName();
    }
    /**
     * <code>optional string name = 1;</code>
     */
    private void setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      name_ = value.toStringUtf8();
    }

    public static final int VALUE_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.ProtobufList<com.google.protobuf.DescriptorProtos.EnumValueDescriptorProto> value_;
    /**
     * <code>repeated .google.protobuf.EnumValueDescriptorProto value = 2;</code>
     */
    public java.util.List<com.google.protobuf.DescriptorProtos.EnumValueDescriptorProto> getValueList() {
      return value_;
    }
    /**
     * <code>repeated .google.protobuf.EnumValueDescriptorProto value = 2;</code>
     */
    public java.util.List<? extends com.google.protobuf.DescriptorProtos.EnumValueDescriptorProtoOrBuilder>
        getValueOrBuilderList() {
      return value_;
    }
    /**
     * <code>repeated .google.protobuf.EnumValueDescriptorProto value = 2;</code>
     */
    public int getValueCount() {
      return value_.size();
    }
    /**
     * <code>repeated .google.protobuf.EnumValueDescriptorProto value = 2;</code>
     */
    public com.google.protobuf.DescriptorProtos.EnumValueDescriptorProto getValue(int index) {
      return value_.get(index);
    }
    /**
     * <code>repeated .google.protobuf.EnumValueDescriptorProto value = 2;</code>
     */
    public com.google.protobuf.DescriptorProtos.EnumValueDescriptorProtoOrBuilder getValueOrBuilder(
        int index) {
      return value_.get(index);
    }
    private void ensureValueIsMutable() {
      if (!value_.isModifiable()) {
        value_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(value_);
       }
    }

    /**
     * <code>repeated .google.protobuf.EnumValueDescriptorProto value = 2;</code>
     */
    private void setValue(
        int index, com.google.protobuf.DescriptorProtos.EnumValueDescriptorProto value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureValueIsMutable();
      value_.set(index, value);
    }
    /**
     * <code>repeated .google.protobuf.EnumValueDescriptorProto value = 2;</code>
     */
    private void setValue(
        int index, com.google.protobuf.DescriptorProtos.EnumValueDescriptorProto.Builder builderForValue) {
      ensureValueIsMutable();
      value_.set(index, builderForValue.build());
    }
    /**
     * <code>repeated .google.protobuf.EnumValueDescriptorProto value = 2;</code>
     */
    private void addValue(com.google.protobuf.DescriptorProtos.EnumValueDescriptorProto value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureValueIsMutable();
      value_.add(value);
    }
    /**
     * <code>repeated .google.protobuf.EnumValueDescriptorProto value = 2;</code>
     */
    private void addValue(
        int index, com.google.protobuf.DescriptorProtos.EnumValueDescriptorProto value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureValueIsMutable();
      value_.add(index, value);
    }
    /**
     * <code>repeated .google.protobuf.EnumValueDescriptorProto value = 2;</code>
     */
    private void addValue(
        com.google.protobuf.DescriptorProtos.EnumValueDescriptorProto.Builder builderForValue) {
      ensureValueIsMutable();
      value_.add(builderForValue.build());
    }
    /**
     * <code>repeated .google.protobuf.EnumValueDescriptorProto value = 2;</code>
     */
    private void addValue(
        int index, com.google.protobuf.DescriptorProtos.EnumValueDescriptorProto.Builder builderForValue) {
      ensureValueIsMutable();
      value_.add(index, builderForValue.build());
    }
    /**
     * <code>repeated .google.protobuf.EnumValueDescriptorProto value = 2;</code>
     */
    private void addAllValue(
        java.lang.Iterable<? extends com.google.protobuf.DescriptorProtos.EnumValueDescriptorProto> values) {
      ensureValueIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, value_);
    }
    /**
     * <code>repeated .google.protobuf.EnumValueDescriptorProto value = 2;</code>
     */
    private void clearValue() {
      value_ = emptyProtobufList();
    }
    /**
     * <code>repeated .google.protobuf.EnumValueDescriptorProto value = 2;</code>
     */
    private void removeValue(int index) {
      ensureValueIsMutable();
      value_.remove(index);
    }

    public static final int OPTIONS_FIELD_NUMBER = 3;
    private com.google.protobuf.DescriptorProtos.EnumOptions options_;
    /**
     * <code>optional .google.protobuf.EnumOptions options = 3;</code>
     */
    public boolean hasOptions() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .google.protobuf.EnumOptions options = 3;</code>
     */
    public com.google.protobuf.DescriptorProtos.EnumOptions getOptions() {
      return options_ == null ? com.google.protobuf.DescriptorProtos.EnumOptions.getDefaultInstance() : options_;
    }
    /**
     * <code>optional .google.protobuf.EnumOptions options = 3;</code>
     */
    private void setOptions(com.google.protobuf.DescriptorProtos.EnumOptions value) {
      if (value == null) {
        throw new NullPointerException();
      }
      options_ = value;
      bitField0_ |= 0x00000002;
      }
    /**
     * <code>optional .google.protobuf.EnumOptions options = 3;</code>
     */
    private void setOptions(
        com.google.protobuf.DescriptorProtos.EnumOptions.Builder builderForValue) {
      options_ = builderForValue.build();
      bitField0_ |= 0x00000002;
    }
    /**
     * <code>optional .google.protobuf.EnumOptions options = 3;</code>
     */
    private void mergeOptions(com.google.protobuf.DescriptorProtos.EnumOptions value) {
      if (options_ != null &&
          options_ != com.google.protobuf.DescriptorProtos.EnumOptions.getDefaultInstance()) {
        options_ =
          com.google.protobuf.DescriptorProtos.EnumOptions.newBuilder(options_).mergeFrom(value).buildPartial();
      } else {
        options_ = value;
      }
      bitField0_ |= 0x00000002;
    }
    /**
     * <code>optional .google.protobuf.EnumOptions options = 3;</code>
     */
    private void clearOptions() {  options_ = null;
      bitField0_ = (bitField0_ & ~0x00000002);
    }

    public static final int RESERVED_RANGE_FIELD_NUMBER = 4;
    private com.google.protobuf.Internal.ProtobufList<com.google.protobuf.DescriptorProtos.EnumDescriptorProto.EnumReservedRange> reservedRange_;
    /**
     * <pre>
     * Range of reserved numeric values. Reserved numeric values may not be used
     * by enum values in the same enum declaration. Reserved ranges may not
     * overlap.
     * </pre>
     *
     * <code>repeated .google.protobuf.EnumDescriptorProto.EnumReservedRange reserved_range = 4;</code>
     */
    public java.util.List<com.google.protobuf.DescriptorProtos.EnumDescriptorProto.EnumReservedRange> getReservedRangeList() {
      return reservedRange_;
    }
    /**
     * <pre>
     * Range of reserved numeric values. Reserved numeric values may not be used
     * by enum values in the same enum declaration. Reserved ranges may not
     * overlap.
     * </pre>
     *
     * <code>repeated .google.protobuf.EnumDescriptorProto.EnumReservedRange reserved_range = 4;</code>
     */
    public java.util.List<? extends com.google.protobuf.DescriptorProtos.EnumDescriptorProto.EnumReservedRangeOrBuilder>
        getReservedRangeOrBuilderList() {
      return reservedRange_;
    }
    /**
     * <pre>
     * Range of reserved numeric values. Reserved numeric values may not be used
     * by enum values in the same enum declaration. Reserved ranges may not
     * overlap.
     * </pre>
     *
     * <code>repeated .google.protobuf.EnumDescriptorProto.EnumReservedRange reserved_range = 4;</code>
     */
    public int getReservedRangeCount() {
      return reservedRange_.size();
    }
    /**
     * <pre>
     * Range of reserved numeric values. Reserved numeric values may not be used
     * by enum values in the same enum declaration. Reserved ranges may not
     * overlap.
     * </pre>
     *
     * <code>repeated .google.protobuf.EnumDescriptorProto.EnumReservedRange reserved_range = 4;</code>
     */
    public com.google.protobuf.DescriptorProtos.EnumDescriptorProto.EnumReservedRange getReservedRange(int index) {
      return reservedRange_.get(index);
    }
    /**
     * <pre>
     * Range of reserved numeric values. Reserved numeric values may not be used
     * by enum values in the same enum declaration. Reserved ranges may not
     * overlap.
     * </pre>
     *
     * <code>repeated .google.protobuf.EnumDescriptorProto.EnumReservedRange reserved_range = 4;</code>
     */
    public com.google.protobuf.DescriptorProtos.EnumDescriptorProto.EnumReservedRangeOrBuilder getReservedRangeOrBuilder(
        int index) {
      return reservedRange_.get(index);
    }
    private void ensureReservedRangeIsMutable() {
      if (!reservedRange_.isModifiable()) {
        reservedRange_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(reservedRange_);
       }
    }

    /**
     * <pre>
     * Range of reserved numeric values. Reserved numeric values may not be used
     * by enum values in the same enum declaration. Reserved ranges may not
     * overlap.
     * </pre>
     *
     * <code>repeated .google.protobuf.EnumDescriptorProto.EnumReservedRange reserved_range = 4;</code>
     */
    private void setReservedRange(
        int index, com.google.protobuf.DescriptorProtos.EnumDescriptorProto.EnumReservedRange value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureReservedRangeIsMutable();
      reservedRange_.set(index, value);
    }
    /**
     * <pre>
     * Range of reserved numeric values. Reserved numeric values may not be used
     * by enum values in the same enum declaration. Reserved ranges may not
     * overlap.
     * </pre>
     *
     * <code>repeated .google.protobuf.EnumDescriptorProto.EnumReservedRange reserved_range = 4;</code>
     */
    private void setReservedRange(
        int index, com.google.protobuf.DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder builderForValue) {
      ensureReservedRangeIsMutable();
      reservedRange_.set(index, builderForValue.build());
    }
    /**
     * <pre>
     * Range of reserved numeric values. Reserved numeric values may not be used
     * by enum values in the same enum declaration. Reserved ranges may not
     * overlap.
     * </pre>
     *
     * <code>repeated .google.protobuf.EnumDescriptorProto.EnumReservedRange reserved_range = 4;</code>
     */
    private void addReservedRange(com.google.protobuf.DescriptorProtos.EnumDescriptorProto.EnumReservedRange value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureReservedRangeIsMutable();
      reservedRange_.add(value);
    }
    /**
     * <pre>
     * Range of reserved numeric values. Reserved numeric values may not be used
     * by enum values in the same enum declaration. Reserved ranges may not
     * overlap.
     * </pre>
     *
     * <code>repeated .google.protobuf.EnumDescriptorProto.EnumReservedRange reserved_range = 4;</code>
     */
    private void addReservedRange(
        int index, com.google.protobuf.DescriptorProtos.EnumDescriptorProto.EnumReservedRange value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureReservedRangeIsMutable();
      reservedRange_.add(index, value);
    }
    /**
     * <pre>
     * Range of reserved numeric values. Reserved numeric values may not be used
     * by enum values in the same enum declaration. Reserved ranges may not
     * overlap.
     * </pre>
     *
     * <code>repeated .google.protobuf.EnumDescriptorProto.EnumReservedRange reserved_range = 4;</code>
     */
    private void addReservedRange(
        com.google.protobuf.DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder builderForValue) {
      ensureReservedRangeIsMutable();
      reservedRange_.add(builderForValue.build());
    }
    /**
     * <pre>
     * Range of reserved numeric values. Reserved numeric values may not be used
     * by enum values in the same enum declaration. Reserved ranges may not
     * overlap.
     * </pre>
     *
     * <code>repeated .google.protobuf.EnumDescriptorProto.EnumReservedRange reserved_range = 4;</code>
     */
    private void addReservedRange(
        int index, com.google.protobuf.DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder builderForValue) {
      ensureReservedRangeIsMutable();
      reservedRange_.add(index, builderForValue.build());
    }
    /**
     * <pre>
     * Range of reserved numeric values. Reserved numeric values may not be used
     * by enum values in the same enum declaration. Reserved ranges may not
     * overlap.
     * </pre>
     *
     * <code>repeated .google.protobuf.EnumDescriptorProto.EnumReservedRange reserved_range = 4;</code>
     */
    private void addAllReservedRange(
        java.lang.Iterable<? extends com.google.protobuf.DescriptorProtos.EnumDescriptorProto.EnumReservedRange> values) {
      ensureReservedRangeIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, reservedRange_);
    }
    /**
     * <pre>
     * Range of reserved numeric values. Reserved numeric values may not be used
     * by enum values in the same enum declaration. Reserved ranges may not
     * overlap.
     * </pre>
     *
     * <code>repeated .google.protobuf.EnumDescriptorProto.EnumReservedRange reserved_range = 4;</code>
     */
    private void clearReservedRange() {
      reservedRange_ = emptyProtobufList();
    }
    /**
     * <pre>
     * Range of reserved numeric values. Reserved numeric values may not be used
     * by enum values in the same enum declaration. Reserved ranges may not
     * overlap.
     * </pre>
     *
     * <code>repeated .google.protobuf.EnumDescriptorProto.EnumReservedRange reserved_range = 4;</code>
     */
    private void removeReservedRange(int index) {
      ensureReservedRangeIsMutable();
      reservedRange_.remove(index);
    }

    public static final int RESERVED_NAME_FIELD_NUMBER = 5;
    private com.google.protobuf.Internal.ProtobufList<String> reservedName_;
    /**
     * <pre>
     * Reserved enum value names, which may not be reused. A given name may only
     * be reserved once.
     * </pre>
     *
     * <code>repeated string reserved_name = 5;</code>
     */
    public java.util.List<String> getReservedNameList() {
      return reservedName_;
    }
    /**
     * <pre>
     * Reserved enum value names, which may not be reused. A given name may only
     * be reserved once.
     * </pre>
     *
     * <code>repeated string reserved_name = 5;</code>
     */
    public int getReservedNameCount() {
      return reservedName_.size();
    }
    /**
     * <pre>
     * Reserved enum value names, which may not be reused. A given name may only
     * be reserved once.
     * </pre>
     *
     * <code>repeated string reserved_name = 5;</code>
     */
    public java.lang.String getReservedName(int index) {
      return reservedName_.get(index);
    }
    /**
     * <pre>
     * Reserved enum value names, which may not be reused. A given name may only
     * be reserved once.
     * </pre>
     *
     * <code>repeated string reserved_name = 5;</code>
     */
    public com.google.protobuf.ByteString
        getReservedNameBytes(int index) {
      return com.google.protobuf.ByteString.copyFromUtf8(
          reservedName_.get(index));
    }
    private void ensureReservedNameIsMutable() {
      if (!reservedName_.isModifiable()) {
        reservedName_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(reservedName_);
       }
    }
    /**
     * <pre>
     * Reserved enum value names, which may not be reused. A given name may only
     * be reserved once.
     * </pre>
     *
     * <code>repeated string reserved_name = 5;</code>
     */
    private void setReservedName(
        int index, java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureReservedNameIsMutable();
      reservedName_.set(index, value);
    }
    /**
     * <pre>
     * Reserved enum value names, which may not be reused. A given name may only
     * be reserved once.
     * </pre>
     *
     * <code>repeated string reserved_name = 5;</code>
     */
    private void addReservedName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureReservedNameIsMutable();
      reservedName_.add(value);
    }
    /**
     * <pre>
     * Reserved enum value names, which may not be reused. A given name may only
     * be reserved once.
     * </pre>
     *
     * <code>repeated string reserved_name = 5;</code>
     */
    private void addAllReservedName(
        java.lang.Iterable<java.lang.String> values) {
      ensureReservedNameIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, reservedName_);
    }
    /**
     * <pre>
     * Reserved enum value names, which may not be reused. A given name may only
     * be reserved once.
     * </pre>
     *
     * <code>repeated string reserved_name = 5;</code>
     */
    private void clearReservedName() {
      reservedName_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
    }
    /**
     * <pre>
     * Reserved enum value names, which may not be reused. A given name may only
     * be reserved once.
     * </pre>
     *
     * <code>repeated string reserved_name = 5;</code>
     */
    private void addReservedNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureReservedNameIsMutable();
      reservedName_.add(value.toStringUtf8());
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeString(1, getName());
      }
      for (int i = 0; i < value_.size(); i++) {
        output.writeMessage(2, value_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(3, getOptions());
      }
      for (int i = 0; i < reservedRange_.size(); i++) {
        output.writeMessage(4, reservedRange_.get(i));
      }
      for (int i = 0; i < reservedName_.size(); i++) {
        output.writeString(5, reservedName_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getName());
      }
      for (int i = 0; i < value_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, value_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getOptions());
      }
      for (int i = 0; i < reservedRange_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, reservedRange_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < reservedName_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeStringSizeNoTag(reservedName_.get(i));
        }
        size += dataSize;
        size += 1 * getReservedNameList().size();
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.google.protobuf.DescriptorProtos.EnumDescriptorProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.google.protobuf.DescriptorProtos.EnumDescriptorProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.google.protobuf.DescriptorProtos.EnumDescriptorProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.google.protobuf.DescriptorProtos.EnumDescriptorProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.google.protobuf.DescriptorProtos.EnumDescriptorProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.google.protobuf.DescriptorProtos.EnumDescriptorProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.google.protobuf.DescriptorProtos.EnumDescriptorProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.google.protobuf.DescriptorProtos.EnumDescriptorProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.google.protobuf.DescriptorProtos.EnumDescriptorProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.google.protobuf.DescriptorProtos.EnumDescriptorProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.protobuf.DescriptorProtos.EnumDescriptorProto prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * Describes an enum type.
     * </pre>
     *
     * Protobuf type {@code google.protobuf.EnumDescriptorProto}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.google.protobuf.DescriptorProtos.EnumDescriptorProto, Builder> implements
        // @@protoc_insertion_point(builder_implements:google.protobuf.EnumDescriptorProto)
        com.google.protobuf.DescriptorProtos.EnumDescriptorProtoOrBuilder {
      // Construct using com.google.protobuf.DescriptorProtos.EnumDescriptorProto.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional string name = 1;</code>
       */
      public boolean hasName() {
        return instance.hasName();
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public java.lang.String getName() {
        return instance.getName();
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        return instance.getNameBytes();
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public Builder setName(
          java.lang.String value) {
        copyOnWrite();
        instance.setName(value);
        return this;
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public Builder clearName() {
        copyOnWrite();
        instance.clearName();
        return this;
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setNameBytes(value);
        return this;
      }

      /**
       * <code>repeated .google.protobuf.EnumValueDescriptorProto value = 2;</code>
       */
      public java.util.List<com.google.protobuf.DescriptorProtos.EnumValueDescriptorProto> getValueList() {
        return java.util.Collections.unmodifiableList(
            instance.getValueList());
      }
      /**
       * <code>repeated .google.protobuf.EnumValueDescriptorProto value = 2;</code>
       */
      public int getValueCount() {
        return instance.getValueCount();
      }/**
       * <code>repeated .google.protobuf.EnumValueDescriptorProto value = 2;</code>
       */
      public com.google.protobuf.DescriptorProtos.EnumValueDescriptorProto getValue(int index) {
        return instance.getValue(index);
      }
      /**
       * <code>repeated .google.protobuf.EnumValueDescriptorProto value = 2;</code>
       */
      public Builder setValue(
          int index, com.google.protobuf.DescriptorProtos.EnumValueDescriptorProto value) {
        copyOnWrite();
        instance.setValue(index, value);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.EnumValueDescriptorProto value = 2;</code>
       */
      public Builder setValue(
          int index, com.google.protobuf.DescriptorProtos.EnumValueDescriptorProto.Builder builderForValue) {
        copyOnWrite();
        instance.setValue(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.EnumValueDescriptorProto value = 2;</code>
       */
      public Builder addValue(com.google.protobuf.DescriptorProtos.EnumValueDescriptorProto value) {
        copyOnWrite();
        instance.addValue(value);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.EnumValueDescriptorProto value = 2;</code>
       */
      public Builder addValue(
          int index, com.google.protobuf.DescriptorProtos.EnumValueDescriptorProto value) {
        copyOnWrite();
        instance.addValue(index, value);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.EnumValueDescriptorProto value = 2;</code>
       */
      public Builder addValue(
          com.google.protobuf.DescriptorProtos.EnumValueDescriptorProto.Builder builderForValue) {
        copyOnWrite();
        instance.addValue(builderForValue);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.EnumValueDescriptorProto value = 2;</code>
       */
      public Builder addValue(
          int index, com.google.protobuf.DescriptorProtos.EnumValueDescriptorProto.Builder builderForValue) {
        copyOnWrite();
        instance.addValue(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.EnumValueDescriptorProto value = 2;</code>
       */
      public Builder addAllValue(
          java.lang.Iterable<? extends com.google.protobuf.DescriptorProtos.EnumValueDescriptorProto> values) {
        copyOnWrite();
        instance.addAllValue(values);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.EnumValueDescriptorProto value = 2;</code>
       */
      public Builder clearValue() {
        copyOnWrite();
        instance.clearValue();
        return this;
      }
      /**
       * <code>repeated .google.protobuf.EnumValueDescriptorProto value = 2;</code>
       */
      public Builder removeValue(int index) {
        copyOnWrite();
        instance.removeValue(index);
        return this;
      }

      /**
       * <code>optional .google.protobuf.EnumOptions options = 3;</code>
       */
      public boolean hasOptions() {
        return instance.hasOptions();
      }
      /**
       * <code>optional .google.protobuf.EnumOptions options = 3;</code>
       */
      public com.google.protobuf.DescriptorProtos.EnumOptions getOptions() {
        return instance.getOptions();
      }
      /**
       * <code>optional .google.protobuf.EnumOptions options = 3;</code>
       */
      public Builder setOptions(com.google.protobuf.DescriptorProtos.EnumOptions value) {
        copyOnWrite();
        instance.setOptions(value);
        return this;
        }
      /**
       * <code>optional .google.protobuf.EnumOptions options = 3;</code>
       */
      public Builder setOptions(
          com.google.protobuf.DescriptorProtos.EnumOptions.Builder builderForValue) {
        copyOnWrite();
        instance.setOptions(builderForValue);
        return this;
      }
      /**
       * <code>optional .google.protobuf.EnumOptions options = 3;</code>
       */
      public Builder mergeOptions(com.google.protobuf.DescriptorProtos.EnumOptions value) {
        copyOnWrite();
        instance.mergeOptions(value);
        return this;
      }
      /**
       * <code>optional .google.protobuf.EnumOptions options = 3;</code>
       */
      public Builder clearOptions() {  copyOnWrite();
        instance.clearOptions();
        return this;
      }

      /**
       * <pre>
       * Range of reserved numeric values. Reserved numeric values may not be used
       * by enum values in the same enum declaration. Reserved ranges may not
       * overlap.
       * </pre>
       *
       * <code>repeated .google.protobuf.EnumDescriptorProto.EnumReservedRange reserved_range = 4;</code>
       */
      public java.util.List<com.google.protobuf.DescriptorProtos.EnumDescriptorProto.EnumReservedRange> getReservedRangeList() {
        return java.util.Collections.unmodifiableList(
            instance.getReservedRangeList());
      }
      /**
       * <pre>
       * Range of reserved numeric values. Reserved numeric values may not be used
       * by enum values in the same enum declaration. Reserved ranges may not
       * overlap.
       * </pre>
       *
       * <code>repeated .google.protobuf.EnumDescriptorProto.EnumReservedRange reserved_range = 4;</code>
       */
      public int getReservedRangeCount() {
        return instance.getReservedRangeCount();
      }/**
       * <pre>
       * Range of reserved numeric values. Reserved numeric values may not be used
       * by enum values in the same enum declaration. Reserved ranges may not
       * overlap.
       * </pre>
       *
       * <code>repeated .google.protobuf.EnumDescriptorProto.EnumReservedRange reserved_range = 4;</code>
       */
      public com.google.protobuf.DescriptorProtos.EnumDescriptorProto.EnumReservedRange getReservedRange(int index) {
        return instance.getReservedRange(index);
      }
      /**
       * <pre>
       * Range of reserved numeric values. Reserved numeric values may not be used
       * by enum values in the same enum declaration. Reserved ranges may not
       * overlap.
       * </pre>
       *
       * <code>repeated .google.protobuf.EnumDescriptorProto.EnumReservedRange reserved_range = 4;</code>
       */
      public Builder setReservedRange(
          int index, com.google.protobuf.DescriptorProtos.EnumDescriptorProto.EnumReservedRange value) {
        copyOnWrite();
        instance.setReservedRange(index, value);
        return this;
      }
      /**
       * <pre>
       * Range of reserved numeric values. Reserved numeric values may not be used
       * by enum values in the same enum declaration. Reserved ranges may not
       * overlap.
       * </pre>
       *
       * <code>repeated .google.protobuf.EnumDescriptorProto.EnumReservedRange reserved_range = 4;</code>
       */
      public Builder setReservedRange(
          int index, com.google.protobuf.DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder builderForValue) {
        copyOnWrite();
        instance.setReservedRange(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       * Range of reserved numeric values. Reserved numeric values may not be used
       * by enum values in the same enum declaration. Reserved ranges may not
       * overlap.
       * </pre>
       *
       * <code>repeated .google.protobuf.EnumDescriptorProto.EnumReservedRange reserved_range = 4;</code>
       */
      public Builder addReservedRange(com.google.protobuf.DescriptorProtos.EnumDescriptorProto.EnumReservedRange value) {
        copyOnWrite();
        instance.addReservedRange(value);
        return this;
      }
      /**
       * <pre>
       * Range of reserved numeric values. Reserved numeric values may not be used
       * by enum values in the same enum declaration. Reserved ranges may not
       * overlap.
       * </pre>
       *
       * <code>repeated .google.protobuf.EnumDescriptorProto.EnumReservedRange reserved_range = 4;</code>
       */
      public Builder addReservedRange(
          int index, com.google.protobuf.DescriptorProtos.EnumDescriptorProto.EnumReservedRange value) {
        copyOnWrite();
        instance.addReservedRange(index, value);
        return this;
      }
      /**
       * <pre>
       * Range of reserved numeric values. Reserved numeric values may not be used
       * by enum values in the same enum declaration. Reserved ranges may not
       * overlap.
       * </pre>
       *
       * <code>repeated .google.protobuf.EnumDescriptorProto.EnumReservedRange reserved_range = 4;</code>
       */
      public Builder addReservedRange(
          com.google.protobuf.DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder builderForValue) {
        copyOnWrite();
        instance.addReservedRange(builderForValue);
        return this;
      }
      /**
       * <pre>
       * Range of reserved numeric values. Reserved numeric values may not be used
       * by enum values in the same enum declaration. Reserved ranges may not
       * overlap.
       * </pre>
       *
       * <code>repeated .google.protobuf.EnumDescriptorProto.EnumReservedRange reserved_range = 4;</code>
       */
      public Builder addReservedRange(
          int index, com.google.protobuf.DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder builderForValue) {
        copyOnWrite();
        instance.addReservedRange(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       * Range of reserved numeric values. Reserved numeric values may not be used
       * by enum values in the same enum declaration. Reserved ranges may not
       * overlap.
       * </pre>
       *
       * <code>repeated .google.protobuf.EnumDescriptorProto.EnumReservedRange reserved_range = 4;</code>
       */
      public Builder addAllReservedRange(
          java.lang.Iterable<? extends com.google.protobuf.DescriptorProtos.EnumDescriptorProto.EnumReservedRange> values) {
        copyOnWrite();
        instance.addAllReservedRange(values);
        return this;
      }
      /**
       * <pre>
       * Range of reserved numeric values. Reserved numeric values may not be used
       * by enum values in the same enum declaration. Reserved ranges may not
       * overlap.
       * </pre>
       *
       * <code>repeated .google.protobuf.EnumDescriptorProto.EnumReservedRange reserved_range = 4;</code>
       */
      public Builder clearReservedRange() {
        copyOnWrite();
        instance.clearReservedRange();
        return this;
      }
      /**
       * <pre>
       * Range of reserved numeric values. Reserved numeric values may not be used
       * by enum values in the same enum declaration. Reserved ranges may not
       * overlap.
       * </pre>
       *
       * <code>repeated .google.protobuf.EnumDescriptorProto.EnumReservedRange reserved_range = 4;</code>
       */
      public Builder removeReservedRange(int index) {
        copyOnWrite();
        instance.removeReservedRange(index);
        return this;
      }

      /**
       * <pre>
       * Reserved enum value names, which may not be reused. A given name may only
       * be reserved once.
       * </pre>
       *
       * <code>repeated string reserved_name = 5;</code>
       */
      public java.util.List<String>
          getReservedNameList() {
        return java.util.Collections.unmodifiableList(
            instance.getReservedNameList());
      }
      /**
       * <pre>
       * Reserved enum value names, which may not be reused. A given name may only
       * be reserved once.
       * </pre>
       *
       * <code>repeated string reserved_name = 5;</code>
       */
      public int getReservedNameCount() {
        return instance.getReservedNameCount();
      }
      /**
       * <pre>
       * Reserved enum value names, which may not be reused. A given name may only
       * be reserved once.
       * </pre>
       *
       * <code>repeated string reserved_name = 5;</code>
       */
      public java.lang.String getReservedName(int index) {
        return instance.getReservedName(index);
      }
      /**
       * <pre>
       * Reserved enum value names, which may not be reused. A given name may only
       * be reserved once.
       * </pre>
       *
       * <code>repeated string reserved_name = 5;</code>
       */
      public com.google.protobuf.ByteString
          getReservedNameBytes(int index) {
        return instance.getReservedNameBytes(index);
      }
      /**
       * <pre>
       * Reserved enum value names, which may not be reused. A given name may only
       * be reserved once.
       * </pre>
       *
       * <code>repeated string reserved_name = 5;</code>
       */
      public Builder setReservedName(
          int index, java.lang.String value) {
        copyOnWrite();
        instance.setReservedName(index, value);
        return this;
      }
      /**
       * <pre>
       * Reserved enum value names, which may not be reused. A given name may only
       * be reserved once.
       * </pre>
       *
       * <code>repeated string reserved_name = 5;</code>
       */
      public Builder addReservedName(
          java.lang.String value) {
        copyOnWrite();
        instance.addReservedName(value);
        return this;
      }
      /**
       * <pre>
       * Reserved enum value names, which may not be reused. A given name may only
       * be reserved once.
       * </pre>
       *
       * <code>repeated string reserved_name = 5;</code>
       */
      public Builder addAllReservedName(
          java.lang.Iterable<java.lang.String> values) {
        copyOnWrite();
        instance.addAllReservedName(values);
        return this;
      }
      /**
       * <pre>
       * Reserved enum value names, which may not be reused. A given name may only
       * be reserved once.
       * </pre>
       *
       * <code>repeated string reserved_name = 5;</code>
       */
      public Builder clearReservedName() {
        copyOnWrite();
        instance.clearReservedName();
        return this;
      }
      /**
       * <pre>
       * Reserved enum value names, which may not be reused. A given name may only
       * be reserved once.
       * </pre>
       *
       * <code>repeated string reserved_name = 5;</code>
       */
      public Builder addReservedNameBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.addReservedNameBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:google.protobuf.EnumDescriptorProto)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.google.protobuf.DescriptorProtos.EnumDescriptorProto();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          for (int i = 0; i < getValueCount(); i++) {
            if (!getValue(i).isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasOptions()) {
            if (!getOptions().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          value_.makeImmutable();
          reservedRange_.makeImmutable();
          reservedName_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.google.protobuf.DescriptorProtos.EnumDescriptorProto other = (com.google.protobuf.DescriptorProtos.EnumDescriptorProto) arg1;
          name_ = visitor.visitString(
              hasName(), name_,
              other.hasName(), other.name_);
          value_= visitor.visitList(value_, other.value_);
          options_ = visitor.visitMessage(options_, other.options_);
          reservedRange_= visitor.visitList(reservedRange_, other.reservedRange_);
          reservedName_= visitor.visitList(reservedName_, other.reservedName_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readString();
                  bitField0_ |= 0x00000001;
                  name_ = s;
                  break;
                }
                case 18: {
                  if (!value_.isModifiable()) {
                    value_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(value_);
                  }
                  value_.add(
                      input.readMessage(com.google.protobuf.DescriptorProtos.EnumValueDescriptorProto.parser(), extensionRegistry));
                  break;
                }
                case 26: {
                  com.google.protobuf.DescriptorProtos.EnumOptions.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000002) == 0x00000002)) {
                    subBuilder = options_.toBuilder();
                  }
                  options_ = input.readMessage(com.google.protobuf.DescriptorProtos.EnumOptions.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(options_);
                    options_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000002;
                  break;
                }
                case 34: {
                  if (!reservedRange_.isModifiable()) {
                    reservedRange_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(reservedRange_);
                  }
                  reservedRange_.add(
                      input.readMessage(com.google.protobuf.DescriptorProtos.EnumDescriptorProto.EnumReservedRange.parser(), extensionRegistry));
                  break;
                }
                case 42: {
                  String s = input.readString();
                  if (!reservedName_.isModifiable()) {
                    reservedName_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(reservedName_);
                  }
                  reservedName_.add(s);
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.google.protobuf.DescriptorProtos.EnumDescriptorProto.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:google.protobuf.EnumDescriptorProto)
    private static final com.google.protobuf.DescriptorProtos.EnumDescriptorProto DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EnumDescriptorProto();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.google.protobuf.DescriptorProtos.EnumDescriptorProto getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<EnumDescriptorProto> PARSER;

    public static com.google.protobuf.Parser<EnumDescriptorProto> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface EnumValueDescriptorProtoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.protobuf.EnumValueDescriptorProto)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional string name = 1;</code>
     */
    boolean hasName();
    /**
     * <code>optional string name = 1;</code>
     */
    java.lang.String getName();
    /**
     * <code>optional string name = 1;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>optional int32 number = 2;</code>
     */
    boolean hasNumber();
    /**
     * <code>optional int32 number = 2;</code>
     */
    int getNumber();

    /**
     * <code>optional .google.protobuf.EnumValueOptions options = 3;</code>
     */
    boolean hasOptions();
    /**
     * <code>optional .google.protobuf.EnumValueOptions options = 3;</code>
     */
    com.google.protobuf.DescriptorProtos.EnumValueOptions getOptions();
  }
  /**
   * <pre>
   * Describes a value within an enum.
   * </pre>
   *
   * Protobuf type {@code google.protobuf.EnumValueDescriptorProto}
   */
  public  static final class EnumValueDescriptorProto extends
      com.google.protobuf.GeneratedMessageLite<
          EnumValueDescriptorProto, EnumValueDescriptorProto.Builder> implements
      // @@protoc_insertion_point(message_implements:google.protobuf.EnumValueDescriptorProto)
      EnumValueDescriptorProtoOrBuilder {
    private EnumValueDescriptorProto() {
      name_ = "";
    }
    private int bitField0_;
    public static final int NAME_FIELD_NUMBER = 1;
    private java.lang.String name_;
    /**
     * <code>optional string name = 1;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string name = 1;</code>
     */
    public java.lang.String getName() {
      return name_;
    }
    /**
     * <code>optional string name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(name_);
    }
    /**
     * <code>optional string name = 1;</code>
     */
    private void setName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      name_ = value;
    }
    /**
     * <code>optional string name = 1;</code>
     */
    private void clearName() {
      bitField0_ = (bitField0_ & ~0x00000001);
      name_ = getDefaultInstance().getName();
    }
    /**
     * <code>optional string name = 1;</code>
     */
    private void setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      name_ = value.toStringUtf8();
    }

    public static final int NUMBER_FIELD_NUMBER = 2;
    private int number_;
    /**
     * <code>optional int32 number = 2;</code>
     */
    public boolean hasNumber() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 number = 2;</code>
     */
    public int getNumber() {
      return number_;
    }
    /**
     * <code>optional int32 number = 2;</code>
     */
    private void setNumber(int value) {
      bitField0_ |= 0x00000002;
      number_ = value;
    }
    /**
     * <code>optional int32 number = 2;</code>
     */
    private void clearNumber() {
      bitField0_ = (bitField0_ & ~0x00000002);
      number_ = 0;
    }

    public static final int OPTIONS_FIELD_NUMBER = 3;
    private com.google.protobuf.DescriptorProtos.EnumValueOptions options_;
    /**
     * <code>optional .google.protobuf.EnumValueOptions options = 3;</code>
     */
    public boolean hasOptions() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .google.protobuf.EnumValueOptions options = 3;</code>
     */
    public com.google.protobuf.DescriptorProtos.EnumValueOptions getOptions() {
      return options_ == null ? com.google.protobuf.DescriptorProtos.EnumValueOptions.getDefaultInstance() : options_;
    }
    /**
     * <code>optional .google.protobuf.EnumValueOptions options = 3;</code>
     */
    private void setOptions(com.google.protobuf.DescriptorProtos.EnumValueOptions value) {
      if (value == null) {
        throw new NullPointerException();
      }
      options_ = value;
      bitField0_ |= 0x00000004;
      }
    /**
     * <code>optional .google.protobuf.EnumValueOptions options = 3;</code>
     */
    private void setOptions(
        com.google.protobuf.DescriptorProtos.EnumValueOptions.Builder builderForValue) {
      options_ = builderForValue.build();
      bitField0_ |= 0x00000004;
    }
    /**
     * <code>optional .google.protobuf.EnumValueOptions options = 3;</code>
     */
    private void mergeOptions(com.google.protobuf.DescriptorProtos.EnumValueOptions value) {
      if (options_ != null &&
          options_ != com.google.protobuf.DescriptorProtos.EnumValueOptions.getDefaultInstance()) {
        options_ =
          com.google.protobuf.DescriptorProtos.EnumValueOptions.newBuilder(options_).mergeFrom(value).buildPartial();
      } else {
        options_ = value;
      }
      bitField0_ |= 0x00000004;
    }
    /**
     * <code>optional .google.protobuf.EnumValueOptions options = 3;</code>
     */
    private void clearOptions() {  options_ = null;
      bitField0_ = (bitField0_ & ~0x00000004);
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeString(1, getName());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, number_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, getOptions());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getName());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, number_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getOptions());
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.google.protobuf.DescriptorProtos.EnumValueDescriptorProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.google.protobuf.DescriptorProtos.EnumValueDescriptorProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.google.protobuf.DescriptorProtos.EnumValueDescriptorProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.google.protobuf.DescriptorProtos.EnumValueDescriptorProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.google.protobuf.DescriptorProtos.EnumValueDescriptorProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.google.protobuf.DescriptorProtos.EnumValueDescriptorProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.google.protobuf.DescriptorProtos.EnumValueDescriptorProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.google.protobuf.DescriptorProtos.EnumValueDescriptorProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.google.protobuf.DescriptorProtos.EnumValueDescriptorProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.google.protobuf.DescriptorProtos.EnumValueDescriptorProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.protobuf.DescriptorProtos.EnumValueDescriptorProto prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * Describes a value within an enum.
     * </pre>
     *
     * Protobuf type {@code google.protobuf.EnumValueDescriptorProto}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.google.protobuf.DescriptorProtos.EnumValueDescriptorProto, Builder> implements
        // @@protoc_insertion_point(builder_implements:google.protobuf.EnumValueDescriptorProto)
        com.google.protobuf.DescriptorProtos.EnumValueDescriptorProtoOrBuilder {
      // Construct using com.google.protobuf.DescriptorProtos.EnumValueDescriptorProto.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional string name = 1;</code>
       */
      public boolean hasName() {
        return instance.hasName();
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public java.lang.String getName() {
        return instance.getName();
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        return instance.getNameBytes();
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public Builder setName(
          java.lang.String value) {
        copyOnWrite();
        instance.setName(value);
        return this;
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public Builder clearName() {
        copyOnWrite();
        instance.clearName();
        return this;
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setNameBytes(value);
        return this;
      }

      /**
       * <code>optional int32 number = 2;</code>
       */
      public boolean hasNumber() {
        return instance.hasNumber();
      }
      /**
       * <code>optional int32 number = 2;</code>
       */
      public int getNumber() {
        return instance.getNumber();
      }
      /**
       * <code>optional int32 number = 2;</code>
       */
      public Builder setNumber(int value) {
        copyOnWrite();
        instance.setNumber(value);
        return this;
      }
      /**
       * <code>optional int32 number = 2;</code>
       */
      public Builder clearNumber() {
        copyOnWrite();
        instance.clearNumber();
        return this;
      }

      /**
       * <code>optional .google.protobuf.EnumValueOptions options = 3;</code>
       */
      public boolean hasOptions() {
        return instance.hasOptions();
      }
      /**
       * <code>optional .google.protobuf.EnumValueOptions options = 3;</code>
       */
      public com.google.protobuf.DescriptorProtos.EnumValueOptions getOptions() {
        return instance.getOptions();
      }
      /**
       * <code>optional .google.protobuf.EnumValueOptions options = 3;</code>
       */
      public Builder setOptions(com.google.protobuf.DescriptorProtos.EnumValueOptions value) {
        copyOnWrite();
        instance.setOptions(value);
        return this;
        }
      /**
       * <code>optional .google.protobuf.EnumValueOptions options = 3;</code>
       */
      public Builder setOptions(
          com.google.protobuf.DescriptorProtos.EnumValueOptions.Builder builderForValue) {
        copyOnWrite();
        instance.setOptions(builderForValue);
        return this;
      }
      /**
       * <code>optional .google.protobuf.EnumValueOptions options = 3;</code>
       */
      public Builder mergeOptions(com.google.protobuf.DescriptorProtos.EnumValueOptions value) {
        copyOnWrite();
        instance.mergeOptions(value);
        return this;
      }
      /**
       * <code>optional .google.protobuf.EnumValueOptions options = 3;</code>
       */
      public Builder clearOptions() {  copyOnWrite();
        instance.clearOptions();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:google.protobuf.EnumValueDescriptorProto)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.google.protobuf.DescriptorProtos.EnumValueDescriptorProto();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (hasOptions()) {
            if (!getOptions().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.google.protobuf.DescriptorProtos.EnumValueDescriptorProto other = (com.google.protobuf.DescriptorProtos.EnumValueDescriptorProto) arg1;
          name_ = visitor.visitString(
              hasName(), name_,
              other.hasName(), other.name_);
          number_ = visitor.visitInt(
              hasNumber(), number_,
              other.hasNumber(), other.number_);
          options_ = visitor.visitMessage(options_, other.options_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readString();
                  bitField0_ |= 0x00000001;
                  name_ = s;
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  number_ = input.readInt32();
                  break;
                }
                case 26: {
                  com.google.protobuf.DescriptorProtos.EnumValueOptions.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000004) == 0x00000004)) {
                    subBuilder = options_.toBuilder();
                  }
                  options_ = input.readMessage(com.google.protobuf.DescriptorProtos.EnumValueOptions.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(options_);
                    options_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000004;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.google.protobuf.DescriptorProtos.EnumValueDescriptorProto.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:google.protobuf.EnumValueDescriptorProto)
    private static final com.google.protobuf.DescriptorProtos.EnumValueDescriptorProto DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EnumValueDescriptorProto();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.google.protobuf.DescriptorProtos.EnumValueDescriptorProto getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<EnumValueDescriptorProto> PARSER;

    public static com.google.protobuf.Parser<EnumValueDescriptorProto> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ServiceDescriptorProtoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.protobuf.ServiceDescriptorProto)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional string name = 1;</code>
     */
    boolean hasName();
    /**
     * <code>optional string name = 1;</code>
     */
    java.lang.String getName();
    /**
     * <code>optional string name = 1;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>repeated .google.protobuf.MethodDescriptorProto method = 2;</code>
     */
    java.util.List<com.google.protobuf.DescriptorProtos.MethodDescriptorProto>
        getMethodList();
    /**
     * <code>repeated .google.protobuf.MethodDescriptorProto method = 2;</code>
     */
    com.google.protobuf.DescriptorProtos.MethodDescriptorProto getMethod(int index);
    /**
     * <code>repeated .google.protobuf.MethodDescriptorProto method = 2;</code>
     */
    int getMethodCount();

    /**
     * <code>optional .google.protobuf.ServiceOptions options = 3;</code>
     */
    boolean hasOptions();
    /**
     * <code>optional .google.protobuf.ServiceOptions options = 3;</code>
     */
    com.google.protobuf.DescriptorProtos.ServiceOptions getOptions();
  }
  /**
   * <pre>
   * Describes a service.
   * </pre>
   *
   * Protobuf type {@code google.protobuf.ServiceDescriptorProto}
   */
  public  static final class ServiceDescriptorProto extends
      com.google.protobuf.GeneratedMessageLite<
          ServiceDescriptorProto, ServiceDescriptorProto.Builder> implements
      // @@protoc_insertion_point(message_implements:google.protobuf.ServiceDescriptorProto)
      ServiceDescriptorProtoOrBuilder {
    private ServiceDescriptorProto() {
      name_ = "";
      method_ = emptyProtobufList();
    }
    private int bitField0_;
    public static final int NAME_FIELD_NUMBER = 1;
    private java.lang.String name_;
    /**
     * <code>optional string name = 1;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string name = 1;</code>
     */
    public java.lang.String getName() {
      return name_;
    }
    /**
     * <code>optional string name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(name_);
    }
    /**
     * <code>optional string name = 1;</code>
     */
    private void setName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      name_ = value;
    }
    /**
     * <code>optional string name = 1;</code>
     */
    private void clearName() {
      bitField0_ = (bitField0_ & ~0x00000001);
      name_ = getDefaultInstance().getName();
    }
    /**
     * <code>optional string name = 1;</code>
     */
    private void setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      name_ = value.toStringUtf8();
    }

    public static final int METHOD_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.ProtobufList<com.google.protobuf.DescriptorProtos.MethodDescriptorProto> method_;
    /**
     * <code>repeated .google.protobuf.MethodDescriptorProto method = 2;</code>
     */
    public java.util.List<com.google.protobuf.DescriptorProtos.MethodDescriptorProto> getMethodList() {
      return method_;
    }
    /**
     * <code>repeated .google.protobuf.MethodDescriptorProto method = 2;</code>
     */
    public java.util.List<? extends com.google.protobuf.DescriptorProtos.MethodDescriptorProtoOrBuilder>
        getMethodOrBuilderList() {
      return method_;
    }
    /**
     * <code>repeated .google.protobuf.MethodDescriptorProto method = 2;</code>
     */
    public int getMethodCount() {
      return method_.size();
    }
    /**
     * <code>repeated .google.protobuf.MethodDescriptorProto method = 2;</code>
     */
    public com.google.protobuf.DescriptorProtos.MethodDescriptorProto getMethod(int index) {
      return method_.get(index);
    }
    /**
     * <code>repeated .google.protobuf.MethodDescriptorProto method = 2;</code>
     */
    public com.google.protobuf.DescriptorProtos.MethodDescriptorProtoOrBuilder getMethodOrBuilder(
        int index) {
      return method_.get(index);
    }
    private void ensureMethodIsMutable() {
      if (!method_.isModifiable()) {
        method_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(method_);
       }
    }

    /**
     * <code>repeated .google.protobuf.MethodDescriptorProto method = 2;</code>
     */
    private void setMethod(
        int index, com.google.protobuf.DescriptorProtos.MethodDescriptorProto value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureMethodIsMutable();
      method_.set(index, value);
    }
    /**
     * <code>repeated .google.protobuf.MethodDescriptorProto method = 2;</code>
     */
    private void setMethod(
        int index, com.google.protobuf.DescriptorProtos.MethodDescriptorProto.Builder builderForValue) {
      ensureMethodIsMutable();
      method_.set(index, builderForValue.build());
    }
    /**
     * <code>repeated .google.protobuf.MethodDescriptorProto method = 2;</code>
     */
    private void addMethod(com.google.protobuf.DescriptorProtos.MethodDescriptorProto value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureMethodIsMutable();
      method_.add(value);
    }
    /**
     * <code>repeated .google.protobuf.MethodDescriptorProto method = 2;</code>
     */
    private void addMethod(
        int index, com.google.protobuf.DescriptorProtos.MethodDescriptorProto value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureMethodIsMutable();
      method_.add(index, value);
    }
    /**
     * <code>repeated .google.protobuf.MethodDescriptorProto method = 2;</code>
     */
    private void addMethod(
        com.google.protobuf.DescriptorProtos.MethodDescriptorProto.Builder builderForValue) {
      ensureMethodIsMutable();
      method_.add(builderForValue.build());
    }
    /**
     * <code>repeated .google.protobuf.MethodDescriptorProto method = 2;</code>
     */
    private void addMethod(
        int index, com.google.protobuf.DescriptorProtos.MethodDescriptorProto.Builder builderForValue) {
      ensureMethodIsMutable();
      method_.add(index, builderForValue.build());
    }
    /**
     * <code>repeated .google.protobuf.MethodDescriptorProto method = 2;</code>
     */
    private void addAllMethod(
        java.lang.Iterable<? extends com.google.protobuf.DescriptorProtos.MethodDescriptorProto> values) {
      ensureMethodIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, method_);
    }
    /**
     * <code>repeated .google.protobuf.MethodDescriptorProto method = 2;</code>
     */
    private void clearMethod() {
      method_ = emptyProtobufList();
    }
    /**
     * <code>repeated .google.protobuf.MethodDescriptorProto method = 2;</code>
     */
    private void removeMethod(int index) {
      ensureMethodIsMutable();
      method_.remove(index);
    }

    public static final int OPTIONS_FIELD_NUMBER = 3;
    private com.google.protobuf.DescriptorProtos.ServiceOptions options_;
    /**
     * <code>optional .google.protobuf.ServiceOptions options = 3;</code>
     */
    public boolean hasOptions() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .google.protobuf.ServiceOptions options = 3;</code>
     */
    public com.google.protobuf.DescriptorProtos.ServiceOptions getOptions() {
      return options_ == null ? com.google.protobuf.DescriptorProtos.ServiceOptions.getDefaultInstance() : options_;
    }
    /**
     * <code>optional .google.protobuf.ServiceOptions options = 3;</code>
     */
    private void setOptions(com.google.protobuf.DescriptorProtos.ServiceOptions value) {
      if (value == null) {
        throw new NullPointerException();
      }
      options_ = value;
      bitField0_ |= 0x00000002;
      }
    /**
     * <code>optional .google.protobuf.ServiceOptions options = 3;</code>
     */
    private void setOptions(
        com.google.protobuf.DescriptorProtos.ServiceOptions.Builder builderForValue) {
      options_ = builderForValue.build();
      bitField0_ |= 0x00000002;
    }
    /**
     * <code>optional .google.protobuf.ServiceOptions options = 3;</code>
     */
    private void mergeOptions(com.google.protobuf.DescriptorProtos.ServiceOptions value) {
      if (options_ != null &&
          options_ != com.google.protobuf.DescriptorProtos.ServiceOptions.getDefaultInstance()) {
        options_ =
          com.google.protobuf.DescriptorProtos.ServiceOptions.newBuilder(options_).mergeFrom(value).buildPartial();
      } else {
        options_ = value;
      }
      bitField0_ |= 0x00000002;
    }
    /**
     * <code>optional .google.protobuf.ServiceOptions options = 3;</code>
     */
    private void clearOptions() {  options_ = null;
      bitField0_ = (bitField0_ & ~0x00000002);
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeString(1, getName());
      }
      for (int i = 0; i < method_.size(); i++) {
        output.writeMessage(2, method_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(3, getOptions());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getName());
      }
      for (int i = 0; i < method_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, method_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getOptions());
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.google.protobuf.DescriptorProtos.ServiceDescriptorProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.google.protobuf.DescriptorProtos.ServiceDescriptorProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.google.protobuf.DescriptorProtos.ServiceDescriptorProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.google.protobuf.DescriptorProtos.ServiceDescriptorProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.google.protobuf.DescriptorProtos.ServiceDescriptorProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.google.protobuf.DescriptorProtos.ServiceDescriptorProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.google.protobuf.DescriptorProtos.ServiceDescriptorProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.google.protobuf.DescriptorProtos.ServiceDescriptorProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.google.protobuf.DescriptorProtos.ServiceDescriptorProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.google.protobuf.DescriptorProtos.ServiceDescriptorProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.protobuf.DescriptorProtos.ServiceDescriptorProto prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * Describes a service.
     * </pre>
     *
     * Protobuf type {@code google.protobuf.ServiceDescriptorProto}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.google.protobuf.DescriptorProtos.ServiceDescriptorProto, Builder> implements
        // @@protoc_insertion_point(builder_implements:google.protobuf.ServiceDescriptorProto)
        com.google.protobuf.DescriptorProtos.ServiceDescriptorProtoOrBuilder {
      // Construct using com.google.protobuf.DescriptorProtos.ServiceDescriptorProto.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional string name = 1;</code>
       */
      public boolean hasName() {
        return instance.hasName();
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public java.lang.String getName() {
        return instance.getName();
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        return instance.getNameBytes();
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public Builder setName(
          java.lang.String value) {
        copyOnWrite();
        instance.setName(value);
        return this;
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public Builder clearName() {
        copyOnWrite();
        instance.clearName();
        return this;
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setNameBytes(value);
        return this;
      }

      /**
       * <code>repeated .google.protobuf.MethodDescriptorProto method = 2;</code>
       */
      public java.util.List<com.google.protobuf.DescriptorProtos.MethodDescriptorProto> getMethodList() {
        return java.util.Collections.unmodifiableList(
            instance.getMethodList());
      }
      /**
       * <code>repeated .google.protobuf.MethodDescriptorProto method = 2;</code>
       */
      public int getMethodCount() {
        return instance.getMethodCount();
      }/**
       * <code>repeated .google.protobuf.MethodDescriptorProto method = 2;</code>
       */
      public com.google.protobuf.DescriptorProtos.MethodDescriptorProto getMethod(int index) {
        return instance.getMethod(index);
      }
      /**
       * <code>repeated .google.protobuf.MethodDescriptorProto method = 2;</code>
       */
      public Builder setMethod(
          int index, com.google.protobuf.DescriptorProtos.MethodDescriptorProto value) {
        copyOnWrite();
        instance.setMethod(index, value);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.MethodDescriptorProto method = 2;</code>
       */
      public Builder setMethod(
          int index, com.google.protobuf.DescriptorProtos.MethodDescriptorProto.Builder builderForValue) {
        copyOnWrite();
        instance.setMethod(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.MethodDescriptorProto method = 2;</code>
       */
      public Builder addMethod(com.google.protobuf.DescriptorProtos.MethodDescriptorProto value) {
        copyOnWrite();
        instance.addMethod(value);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.MethodDescriptorProto method = 2;</code>
       */
      public Builder addMethod(
          int index, com.google.protobuf.DescriptorProtos.MethodDescriptorProto value) {
        copyOnWrite();
        instance.addMethod(index, value);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.MethodDescriptorProto method = 2;</code>
       */
      public Builder addMethod(
          com.google.protobuf.DescriptorProtos.MethodDescriptorProto.Builder builderForValue) {
        copyOnWrite();
        instance.addMethod(builderForValue);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.MethodDescriptorProto method = 2;</code>
       */
      public Builder addMethod(
          int index, com.google.protobuf.DescriptorProtos.MethodDescriptorProto.Builder builderForValue) {
        copyOnWrite();
        instance.addMethod(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.MethodDescriptorProto method = 2;</code>
       */
      public Builder addAllMethod(
          java.lang.Iterable<? extends com.google.protobuf.DescriptorProtos.MethodDescriptorProto> values) {
        copyOnWrite();
        instance.addAllMethod(values);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.MethodDescriptorProto method = 2;</code>
       */
      public Builder clearMethod() {
        copyOnWrite();
        instance.clearMethod();
        return this;
      }
      /**
       * <code>repeated .google.protobuf.MethodDescriptorProto method = 2;</code>
       */
      public Builder removeMethod(int index) {
        copyOnWrite();
        instance.removeMethod(index);
        return this;
      }

      /**
       * <code>optional .google.protobuf.ServiceOptions options = 3;</code>
       */
      public boolean hasOptions() {
        return instance.hasOptions();
      }
      /**
       * <code>optional .google.protobuf.ServiceOptions options = 3;</code>
       */
      public com.google.protobuf.DescriptorProtos.ServiceOptions getOptions() {
        return instance.getOptions();
      }
      /**
       * <code>optional .google.protobuf.ServiceOptions options = 3;</code>
       */
      public Builder setOptions(com.google.protobuf.DescriptorProtos.ServiceOptions value) {
        copyOnWrite();
        instance.setOptions(value);
        return this;
        }
      /**
       * <code>optional .google.protobuf.ServiceOptions options = 3;</code>
       */
      public Builder setOptions(
          com.google.protobuf.DescriptorProtos.ServiceOptions.Builder builderForValue) {
        copyOnWrite();
        instance.setOptions(builderForValue);
        return this;
      }
      /**
       * <code>optional .google.protobuf.ServiceOptions options = 3;</code>
       */
      public Builder mergeOptions(com.google.protobuf.DescriptorProtos.ServiceOptions value) {
        copyOnWrite();
        instance.mergeOptions(value);
        return this;
      }
      /**
       * <code>optional .google.protobuf.ServiceOptions options = 3;</code>
       */
      public Builder clearOptions() {  copyOnWrite();
        instance.clearOptions();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:google.protobuf.ServiceDescriptorProto)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.google.protobuf.DescriptorProtos.ServiceDescriptorProto();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          for (int i = 0; i < getMethodCount(); i++) {
            if (!getMethod(i).isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasOptions()) {
            if (!getOptions().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          method_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.google.protobuf.DescriptorProtos.ServiceDescriptorProto other = (com.google.protobuf.DescriptorProtos.ServiceDescriptorProto) arg1;
          name_ = visitor.visitString(
              hasName(), name_,
              other.hasName(), other.name_);
          method_= visitor.visitList(method_, other.method_);
          options_ = visitor.visitMessage(options_, other.options_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readString();
                  bitField0_ |= 0x00000001;
                  name_ = s;
                  break;
                }
                case 18: {
                  if (!method_.isModifiable()) {
                    method_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(method_);
                  }
                  method_.add(
                      input.readMessage(com.google.protobuf.DescriptorProtos.MethodDescriptorProto.parser(), extensionRegistry));
                  break;
                }
                case 26: {
                  com.google.protobuf.DescriptorProtos.ServiceOptions.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000002) == 0x00000002)) {
                    subBuilder = options_.toBuilder();
                  }
                  options_ = input.readMessage(com.google.protobuf.DescriptorProtos.ServiceOptions.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(options_);
                    options_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000002;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.google.protobuf.DescriptorProtos.ServiceDescriptorProto.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:google.protobuf.ServiceDescriptorProto)
    private static final com.google.protobuf.DescriptorProtos.ServiceDescriptorProto DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ServiceDescriptorProto();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.google.protobuf.DescriptorProtos.ServiceDescriptorProto getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ServiceDescriptorProto> PARSER;

    public static com.google.protobuf.Parser<ServiceDescriptorProto> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface MethodDescriptorProtoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.protobuf.MethodDescriptorProto)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional string name = 1;</code>
     */
    boolean hasName();
    /**
     * <code>optional string name = 1;</code>
     */
    java.lang.String getName();
    /**
     * <code>optional string name = 1;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * Input and output type names.  These are resolved in the same way as
     * FieldDescriptorProto.type_name, but must refer to a message type.
     * </pre>
     *
     * <code>optional string input_type = 2;</code>
     */
    boolean hasInputType();
    /**
     * <pre>
     * Input and output type names.  These are resolved in the same way as
     * FieldDescriptorProto.type_name, but must refer to a message type.
     * </pre>
     *
     * <code>optional string input_type = 2;</code>
     */
    java.lang.String getInputType();
    /**
     * <pre>
     * Input and output type names.  These are resolved in the same way as
     * FieldDescriptorProto.type_name, but must refer to a message type.
     * </pre>
     *
     * <code>optional string input_type = 2;</code>
     */
    com.google.protobuf.ByteString
        getInputTypeBytes();

    /**
     * <code>optional string output_type = 3;</code>
     */
    boolean hasOutputType();
    /**
     * <code>optional string output_type = 3;</code>
     */
    java.lang.String getOutputType();
    /**
     * <code>optional string output_type = 3;</code>
     */
    com.google.protobuf.ByteString
        getOutputTypeBytes();

    /**
     * <code>optional .google.protobuf.MethodOptions options = 4;</code>
     */
    boolean hasOptions();
    /**
     * <code>optional .google.protobuf.MethodOptions options = 4;</code>
     */
    com.google.protobuf.DescriptorProtos.MethodOptions getOptions();

    /**
     * <pre>
     * Identifies if client streams multiple client messages
     * </pre>
     *
     * <code>optional bool client_streaming = 5 [default = false];</code>
     */
    boolean hasClientStreaming();
    /**
     * <pre>
     * Identifies if client streams multiple client messages
     * </pre>
     *
     * <code>optional bool client_streaming = 5 [default = false];</code>
     */
    boolean getClientStreaming();

    /**
     * <pre>
     * Identifies if server streams multiple server messages
     * </pre>
     *
     * <code>optional bool server_streaming = 6 [default = false];</code>
     */
    boolean hasServerStreaming();
    /**
     * <pre>
     * Identifies if server streams multiple server messages
     * </pre>
     *
     * <code>optional bool server_streaming = 6 [default = false];</code>
     */
    boolean getServerStreaming();
  }
  /**
   * <pre>
   * Describes a method of a service.
   * </pre>
   *
   * Protobuf type {@code google.protobuf.MethodDescriptorProto}
   */
  public  static final class MethodDescriptorProto extends
      com.google.protobuf.GeneratedMessageLite<
          MethodDescriptorProto, MethodDescriptorProto.Builder> implements
      // @@protoc_insertion_point(message_implements:google.protobuf.MethodDescriptorProto)
      MethodDescriptorProtoOrBuilder {
    private MethodDescriptorProto() {
      name_ = "";
      inputType_ = "";
      outputType_ = "";
    }
    private int bitField0_;
    public static final int NAME_FIELD_NUMBER = 1;
    private java.lang.String name_;
    /**
     * <code>optional string name = 1;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string name = 1;</code>
     */
    public java.lang.String getName() {
      return name_;
    }
    /**
     * <code>optional string name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(name_);
    }
    /**
     * <code>optional string name = 1;</code>
     */
    private void setName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      name_ = value;
    }
    /**
     * <code>optional string name = 1;</code>
     */
    private void clearName() {
      bitField0_ = (bitField0_ & ~0x00000001);
      name_ = getDefaultInstance().getName();
    }
    /**
     * <code>optional string name = 1;</code>
     */
    private void setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      name_ = value.toStringUtf8();
    }

    public static final int INPUT_TYPE_FIELD_NUMBER = 2;
    private java.lang.String inputType_;
    /**
     * <pre>
     * Input and output type names.  These are resolved in the same way as
     * FieldDescriptorProto.type_name, but must refer to a message type.
     * </pre>
     *
     * <code>optional string input_type = 2;</code>
     */
    public boolean hasInputType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * Input and output type names.  These are resolved in the same way as
     * FieldDescriptorProto.type_name, but must refer to a message type.
     * </pre>
     *
     * <code>optional string input_type = 2;</code>
     */
    public java.lang.String getInputType() {
      return inputType_;
    }
    /**
     * <pre>
     * Input and output type names.  These are resolved in the same way as
     * FieldDescriptorProto.type_name, but must refer to a message type.
     * </pre>
     *
     * <code>optional string input_type = 2;</code>
     */
    public com.google.protobuf.ByteString
        getInputTypeBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(inputType_);
    }
    /**
     * <pre>
     * Input and output type names.  These are resolved in the same way as
     * FieldDescriptorProto.type_name, but must refer to a message type.
     * </pre>
     *
     * <code>optional string input_type = 2;</code>
     */
    private void setInputType(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      inputType_ = value;
    }
    /**
     * <pre>
     * Input and output type names.  These are resolved in the same way as
     * FieldDescriptorProto.type_name, but must refer to a message type.
     * </pre>
     *
     * <code>optional string input_type = 2;</code>
     */
    private void clearInputType() {
      bitField0_ = (bitField0_ & ~0x00000002);
      inputType_ = getDefaultInstance().getInputType();
    }
    /**
     * <pre>
     * Input and output type names.  These are resolved in the same way as
     * FieldDescriptorProto.type_name, but must refer to a message type.
     * </pre>
     *
     * <code>optional string input_type = 2;</code>
     */
    private void setInputTypeBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      inputType_ = value.toStringUtf8();
    }

    public static final int OUTPUT_TYPE_FIELD_NUMBER = 3;
    private java.lang.String outputType_;
    /**
     * <code>optional string output_type = 3;</code>
     */
    public boolean hasOutputType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string output_type = 3;</code>
     */
    public java.lang.String getOutputType() {
      return outputType_;
    }
    /**
     * <code>optional string output_type = 3;</code>
     */
    public com.google.protobuf.ByteString
        getOutputTypeBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(outputType_);
    }
    /**
     * <code>optional string output_type = 3;</code>
     */
    private void setOutputType(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
      outputType_ = value;
    }
    /**
     * <code>optional string output_type = 3;</code>
     */
    private void clearOutputType() {
      bitField0_ = (bitField0_ & ~0x00000004);
      outputType_ = getDefaultInstance().getOutputType();
    }
    /**
     * <code>optional string output_type = 3;</code>
     */
    private void setOutputTypeBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
      outputType_ = value.toStringUtf8();
    }

    public static final int OPTIONS_FIELD_NUMBER = 4;
    private com.google.protobuf.DescriptorProtos.MethodOptions options_;
    /**
     * <code>optional .google.protobuf.MethodOptions options = 4;</code>
     */
    public boolean hasOptions() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .google.protobuf.MethodOptions options = 4;</code>
     */
    public com.google.protobuf.DescriptorProtos.MethodOptions getOptions() {
      return options_ == null ? com.google.protobuf.DescriptorProtos.MethodOptions.getDefaultInstance() : options_;
    }
    /**
     * <code>optional .google.protobuf.MethodOptions options = 4;</code>
     */
    private void setOptions(com.google.protobuf.DescriptorProtos.MethodOptions value) {
      if (value == null) {
        throw new NullPointerException();
      }
      options_ = value;
      bitField0_ |= 0x00000008;
      }
    /**
     * <code>optional .google.protobuf.MethodOptions options = 4;</code>
     */
    private void setOptions(
        com.google.protobuf.DescriptorProtos.MethodOptions.Builder builderForValue) {
      options_ = builderForValue.build();
      bitField0_ |= 0x00000008;
    }
    /**
     * <code>optional .google.protobuf.MethodOptions options = 4;</code>
     */
    private void mergeOptions(com.google.protobuf.DescriptorProtos.MethodOptions value) {
      if (options_ != null &&
          options_ != com.google.protobuf.DescriptorProtos.MethodOptions.getDefaultInstance()) {
        options_ =
          com.google.protobuf.DescriptorProtos.MethodOptions.newBuilder(options_).mergeFrom(value).buildPartial();
      } else {
        options_ = value;
      }
      bitField0_ |= 0x00000008;
    }
    /**
     * <code>optional .google.protobuf.MethodOptions options = 4;</code>
     */
    private void clearOptions() {  options_ = null;
      bitField0_ = (bitField0_ & ~0x00000008);
    }

    public static final int CLIENT_STREAMING_FIELD_NUMBER = 5;
    private boolean clientStreaming_;
    /**
     * <pre>
     * Identifies if client streams multiple client messages
     * </pre>
     *
     * <code>optional bool client_streaming = 5 [default = false];</code>
     */
    public boolean hasClientStreaming() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <pre>
     * Identifies if client streams multiple client messages
     * </pre>
     *
     * <code>optional bool client_streaming = 5 [default = false];</code>
     */
    public boolean getClientStreaming() {
      return clientStreaming_;
    }
    /**
     * <pre>
     * Identifies if client streams multiple client messages
     * </pre>
     *
     * <code>optional bool client_streaming = 5 [default = false];</code>
     */
    private void setClientStreaming(boolean value) {
      bitField0_ |= 0x00000010;
      clientStreaming_ = value;
    }
    /**
     * <pre>
     * Identifies if client streams multiple client messages
     * </pre>
     *
     * <code>optional bool client_streaming = 5 [default = false];</code>
     */
    private void clearClientStreaming() {
      bitField0_ = (bitField0_ & ~0x00000010);
      clientStreaming_ = false;
    }

    public static final int SERVER_STREAMING_FIELD_NUMBER = 6;
    private boolean serverStreaming_;
    /**
     * <pre>
     * Identifies if server streams multiple server messages
     * </pre>
     *
     * <code>optional bool server_streaming = 6 [default = false];</code>
     */
    public boolean hasServerStreaming() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <pre>
     * Identifies if server streams multiple server messages
     * </pre>
     *
     * <code>optional bool server_streaming = 6 [default = false];</code>
     */
    public boolean getServerStreaming() {
      return serverStreaming_;
    }
    /**
     * <pre>
     * Identifies if server streams multiple server messages
     * </pre>
     *
     * <code>optional bool server_streaming = 6 [default = false];</code>
     */
    private void setServerStreaming(boolean value) {
      bitField0_ |= 0x00000020;
      serverStreaming_ = value;
    }
    /**
     * <pre>
     * Identifies if server streams multiple server messages
     * </pre>
     *
     * <code>optional bool server_streaming = 6 [default = false];</code>
     */
    private void clearServerStreaming() {
      bitField0_ = (bitField0_ & ~0x00000020);
      serverStreaming_ = false;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeString(1, getName());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeString(2, getInputType());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeString(3, getOutputType());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, getOptions());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBool(5, clientStreaming_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBool(6, serverStreaming_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getName());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getInputType());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getOutputType());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getOptions());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, clientStreaming_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, serverStreaming_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.google.protobuf.DescriptorProtos.MethodDescriptorProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.google.protobuf.DescriptorProtos.MethodDescriptorProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.google.protobuf.DescriptorProtos.MethodDescriptorProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.google.protobuf.DescriptorProtos.MethodDescriptorProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.google.protobuf.DescriptorProtos.MethodDescriptorProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.google.protobuf.DescriptorProtos.MethodDescriptorProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.google.protobuf.DescriptorProtos.MethodDescriptorProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.google.protobuf.DescriptorProtos.MethodDescriptorProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.google.protobuf.DescriptorProtos.MethodDescriptorProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.google.protobuf.DescriptorProtos.MethodDescriptorProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.protobuf.DescriptorProtos.MethodDescriptorProto prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * Describes a method of a service.
     * </pre>
     *
     * Protobuf type {@code google.protobuf.MethodDescriptorProto}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.google.protobuf.DescriptorProtos.MethodDescriptorProto, Builder> implements
        // @@protoc_insertion_point(builder_implements:google.protobuf.MethodDescriptorProto)
        com.google.protobuf.DescriptorProtos.MethodDescriptorProtoOrBuilder {
      // Construct using com.google.protobuf.DescriptorProtos.MethodDescriptorProto.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional string name = 1;</code>
       */
      public boolean hasName() {
        return instance.hasName();
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public java.lang.String getName() {
        return instance.getName();
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        return instance.getNameBytes();
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public Builder setName(
          java.lang.String value) {
        copyOnWrite();
        instance.setName(value);
        return this;
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public Builder clearName() {
        copyOnWrite();
        instance.clearName();
        return this;
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setNameBytes(value);
        return this;
      }

      /**
       * <pre>
       * Input and output type names.  These are resolved in the same way as
       * FieldDescriptorProto.type_name, but must refer to a message type.
       * </pre>
       *
       * <code>optional string input_type = 2;</code>
       */
      public boolean hasInputType() {
        return instance.hasInputType();
      }
      /**
       * <pre>
       * Input and output type names.  These are resolved in the same way as
       * FieldDescriptorProto.type_name, but must refer to a message type.
       * </pre>
       *
       * <code>optional string input_type = 2;</code>
       */
      public java.lang.String getInputType() {
        return instance.getInputType();
      }
      /**
       * <pre>
       * Input and output type names.  These are resolved in the same way as
       * FieldDescriptorProto.type_name, but must refer to a message type.
       * </pre>
       *
       * <code>optional string input_type = 2;</code>
       */
      public com.google.protobuf.ByteString
          getInputTypeBytes() {
        return instance.getInputTypeBytes();
      }
      /**
       * <pre>
       * Input and output type names.  These are resolved in the same way as
       * FieldDescriptorProto.type_name, but must refer to a message type.
       * </pre>
       *
       * <code>optional string input_type = 2;</code>
       */
      public Builder setInputType(
          java.lang.String value) {
        copyOnWrite();
        instance.setInputType(value);
        return this;
      }
      /**
       * <pre>
       * Input and output type names.  These are resolved in the same way as
       * FieldDescriptorProto.type_name, but must refer to a message type.
       * </pre>
       *
       * <code>optional string input_type = 2;</code>
       */
      public Builder clearInputType() {
        copyOnWrite();
        instance.clearInputType();
        return this;
      }
      /**
       * <pre>
       * Input and output type names.  These are resolved in the same way as
       * FieldDescriptorProto.type_name, but must refer to a message type.
       * </pre>
       *
       * <code>optional string input_type = 2;</code>
       */
      public Builder setInputTypeBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setInputTypeBytes(value);
        return this;
      }

      /**
       * <code>optional string output_type = 3;</code>
       */
      public boolean hasOutputType() {
        return instance.hasOutputType();
      }
      /**
       * <code>optional string output_type = 3;</code>
       */
      public java.lang.String getOutputType() {
        return instance.getOutputType();
      }
      /**
       * <code>optional string output_type = 3;</code>
       */
      public com.google.protobuf.ByteString
          getOutputTypeBytes() {
        return instance.getOutputTypeBytes();
      }
      /**
       * <code>optional string output_type = 3;</code>
       */
      public Builder setOutputType(
          java.lang.String value) {
        copyOnWrite();
        instance.setOutputType(value);
        return this;
      }
      /**
       * <code>optional string output_type = 3;</code>
       */
      public Builder clearOutputType() {
        copyOnWrite();
        instance.clearOutputType();
        return this;
      }
      /**
       * <code>optional string output_type = 3;</code>
       */
      public Builder setOutputTypeBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setOutputTypeBytes(value);
        return this;
      }

      /**
       * <code>optional .google.protobuf.MethodOptions options = 4;</code>
       */
      public boolean hasOptions() {
        return instance.hasOptions();
      }
      /**
       * <code>optional .google.protobuf.MethodOptions options = 4;</code>
       */
      public com.google.protobuf.DescriptorProtos.MethodOptions getOptions() {
        return instance.getOptions();
      }
      /**
       * <code>optional .google.protobuf.MethodOptions options = 4;</code>
       */
      public Builder setOptions(com.google.protobuf.DescriptorProtos.MethodOptions value) {
        copyOnWrite();
        instance.setOptions(value);
        return this;
        }
      /**
       * <code>optional .google.protobuf.MethodOptions options = 4;</code>
       */
      public Builder setOptions(
          com.google.protobuf.DescriptorProtos.MethodOptions.Builder builderForValue) {
        copyOnWrite();
        instance.setOptions(builderForValue);
        return this;
      }
      /**
       * <code>optional .google.protobuf.MethodOptions options = 4;</code>
       */
      public Builder mergeOptions(com.google.protobuf.DescriptorProtos.MethodOptions value) {
        copyOnWrite();
        instance.mergeOptions(value);
        return this;
      }
      /**
       * <code>optional .google.protobuf.MethodOptions options = 4;</code>
       */
      public Builder clearOptions() {  copyOnWrite();
        instance.clearOptions();
        return this;
      }

      /**
       * <pre>
       * Identifies if client streams multiple client messages
       * </pre>
       *
       * <code>optional bool client_streaming = 5 [default = false];</code>
       */
      public boolean hasClientStreaming() {
        return instance.hasClientStreaming();
      }
      /**
       * <pre>
       * Identifies if client streams multiple client messages
       * </pre>
       *
       * <code>optional bool client_streaming = 5 [default = false];</code>
       */
      public boolean getClientStreaming() {
        return instance.getClientStreaming();
      }
      /**
       * <pre>
       * Identifies if client streams multiple client messages
       * </pre>
       *
       * <code>optional bool client_streaming = 5 [default = false];</code>
       */
      public Builder setClientStreaming(boolean value) {
        copyOnWrite();
        instance.setClientStreaming(value);
        return this;
      }
      /**
       * <pre>
       * Identifies if client streams multiple client messages
       * </pre>
       *
       * <code>optional bool client_streaming = 5 [default = false];</code>
       */
      public Builder clearClientStreaming() {
        copyOnWrite();
        instance.clearClientStreaming();
        return this;
      }

      /**
       * <pre>
       * Identifies if server streams multiple server messages
       * </pre>
       *
       * <code>optional bool server_streaming = 6 [default = false];</code>
       */
      public boolean hasServerStreaming() {
        return instance.hasServerStreaming();
      }
      /**
       * <pre>
       * Identifies if server streams multiple server messages
       * </pre>
       *
       * <code>optional bool server_streaming = 6 [default = false];</code>
       */
      public boolean getServerStreaming() {
        return instance.getServerStreaming();
      }
      /**
       * <pre>
       * Identifies if server streams multiple server messages
       * </pre>
       *
       * <code>optional bool server_streaming = 6 [default = false];</code>
       */
      public Builder setServerStreaming(boolean value) {
        copyOnWrite();
        instance.setServerStreaming(value);
        return this;
      }
      /**
       * <pre>
       * Identifies if server streams multiple server messages
       * </pre>
       *
       * <code>optional bool server_streaming = 6 [default = false];</code>
       */
      public Builder clearServerStreaming() {
        copyOnWrite();
        instance.clearServerStreaming();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:google.protobuf.MethodDescriptorProto)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.google.protobuf.DescriptorProtos.MethodDescriptorProto();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (hasOptions()) {
            if (!getOptions().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.google.protobuf.DescriptorProtos.MethodDescriptorProto other = (com.google.protobuf.DescriptorProtos.MethodDescriptorProto) arg1;
          name_ = visitor.visitString(
              hasName(), name_,
              other.hasName(), other.name_);
          inputType_ = visitor.visitString(
              hasInputType(), inputType_,
              other.hasInputType(), other.inputType_);
          outputType_ = visitor.visitString(
              hasOutputType(), outputType_,
              other.hasOutputType(), other.outputType_);
          options_ = visitor.visitMessage(options_, other.options_);
          clientStreaming_ = visitor.visitBoolean(
              hasClientStreaming(), clientStreaming_,
              other.hasClientStreaming(), other.clientStreaming_);
          serverStreaming_ = visitor.visitBoolean(
              hasServerStreaming(), serverStreaming_,
              other.hasServerStreaming(), other.serverStreaming_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readString();
                  bitField0_ |= 0x00000001;
                  name_ = s;
                  break;
                }
                case 18: {
                  String s = input.readString();
                  bitField0_ |= 0x00000002;
                  inputType_ = s;
                  break;
                }
                case 26: {
                  String s = input.readString();
                  bitField0_ |= 0x00000004;
                  outputType_ = s;
                  break;
                }
                case 34: {
                  com.google.protobuf.DescriptorProtos.MethodOptions.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000008) == 0x00000008)) {
                    subBuilder = options_.toBuilder();
                  }
                  options_ = input.readMessage(com.google.protobuf.DescriptorProtos.MethodOptions.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(options_);
                    options_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000008;
                  break;
                }
                case 40: {
                  bitField0_ |= 0x00000010;
                  clientStreaming_ = input.readBool();
                  break;
                }
                case 48: {
                  bitField0_ |= 0x00000020;
                  serverStreaming_ = input.readBool();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.google.protobuf.DescriptorProtos.MethodDescriptorProto.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:google.protobuf.MethodDescriptorProto)
    private static final com.google.protobuf.DescriptorProtos.MethodDescriptorProto DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MethodDescriptorProto();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.google.protobuf.DescriptorProtos.MethodDescriptorProto getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<MethodDescriptorProto> PARSER;

    public static com.google.protobuf.Parser<MethodDescriptorProto> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface FileOptionsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.protobuf.FileOptions)
       com.google.protobuf.GeneratedMessageLite.
            ExtendableMessageOrBuilder<
                FileOptions, FileOptions.Builder> {

    /**
     * <pre>
     * Sets the Java package where classes generated from this .proto will be
     * placed.  By default, the proto package is used, but this is often
     * inappropriate because proto packages do not normally start with backwards
     * domain names.
     * </pre>
     *
     * <code>optional string java_package = 1;</code>
     */
    boolean hasJavaPackage();
    /**
     * <pre>
     * Sets the Java package where classes generated from this .proto will be
     * placed.  By default, the proto package is used, but this is often
     * inappropriate because proto packages do not normally start with backwards
     * domain names.
     * </pre>
     *
     * <code>optional string java_package = 1;</code>
     */
    java.lang.String getJavaPackage();
    /**
     * <pre>
     * Sets the Java package where classes generated from this .proto will be
     * placed.  By default, the proto package is used, but this is often
     * inappropriate because proto packages do not normally start with backwards
     * domain names.
     * </pre>
     *
     * <code>optional string java_package = 1;</code>
     */
    com.google.protobuf.ByteString
        getJavaPackageBytes();

    /**
     * <pre>
     * If set, all the classes from the .proto file are wrapped in a single
     * outer class with the given name.  This applies to both Proto1
     * (equivalent to the old "--one_java_file" option) and Proto2 (where
     * a .proto always translates to a single class, but you may want to
     * explicitly choose the class name).
     * </pre>
     *
     * <code>optional string java_outer_classname = 8;</code>
     */
    boolean hasJavaOuterClassname();
    /**
     * <pre>
     * If set, all the classes from the .proto file are wrapped in a single
     * outer class with the given name.  This applies to both Proto1
     * (equivalent to the old "--one_java_file" option) and Proto2 (where
     * a .proto always translates to a single class, but you may want to
     * explicitly choose the class name).
     * </pre>
     *
     * <code>optional string java_outer_classname = 8;</code>
     */
    java.lang.String getJavaOuterClassname();
    /**
     * <pre>
     * If set, all the classes from the .proto file are wrapped in a single
     * outer class with the given name.  This applies to both Proto1
     * (equivalent to the old "--one_java_file" option) and Proto2 (where
     * a .proto always translates to a single class, but you may want to
     * explicitly choose the class name).
     * </pre>
     *
     * <code>optional string java_outer_classname = 8;</code>
     */
    com.google.protobuf.ByteString
        getJavaOuterClassnameBytes();

    /**
     * <pre>
     * If set true, then the Java code generator will generate a separate .java
     * file for each top-level message, enum, and service defined in the .proto
     * file.  Thus, these types will *not* be nested inside the outer class
     * named by java_outer_classname.  However, the outer class will still be
     * generated to contain the file's getDescriptor() method as well as any
     * top-level extensions defined in the file.
     * </pre>
     *
     * <code>optional bool java_multiple_files = 10 [default = false];</code>
     */
    boolean hasJavaMultipleFiles();
    /**
     * <pre>
     * If set true, then the Java code generator will generate a separate .java
     * file for each top-level message, enum, and service defined in the .proto
     * file.  Thus, these types will *not* be nested inside the outer class
     * named by java_outer_classname.  However, the outer class will still be
     * generated to contain the file's getDescriptor() method as well as any
     * top-level extensions defined in the file.
     * </pre>
     *
     * <code>optional bool java_multiple_files = 10 [default = false];</code>
     */
    boolean getJavaMultipleFiles();

    /**
     * <pre>
     * This option does nothing.
     * </pre>
     *
     * <code>optional bool java_generate_equals_and_hash = 20 [deprecated = true];</code>
     */
    @java.lang.Deprecated boolean hasJavaGenerateEqualsAndHash();
    /**
     * <pre>
     * This option does nothing.
     * </pre>
     *
     * <code>optional bool java_generate_equals_and_hash = 20 [deprecated = true];</code>
     */
    @java.lang.Deprecated boolean getJavaGenerateEqualsAndHash();

    /**
     * <pre>
     * If set true, then the Java2 code generator will generate code that
     * throws an exception whenever an attempt is made to assign a non-UTF-8
     * byte sequence to a string field.
     * Message reflection will do the same.
     * However, an extension field still accepts non-UTF-8 byte sequences.
     * This option has no effect on when used with the lite runtime.
     * </pre>
     *
     * <code>optional bool java_string_check_utf8 = 27 [default = false];</code>
     */
    boolean hasJavaStringCheckUtf8();
    /**
     * <pre>
     * If set true, then the Java2 code generator will generate code that
     * throws an exception whenever an attempt is made to assign a non-UTF-8
     * byte sequence to a string field.
     * Message reflection will do the same.
     * However, an extension field still accepts non-UTF-8 byte sequences.
     * This option has no effect on when used with the lite runtime.
     * </pre>
     *
     * <code>optional bool java_string_check_utf8 = 27 [default = false];</code>
     */
    boolean getJavaStringCheckUtf8();

    /**
     * <code>optional .google.protobuf.FileOptions.OptimizeMode optimize_for = 9 [default = SPEED];</code>
     */
    boolean hasOptimizeFor();
    /**
     * <code>optional .google.protobuf.FileOptions.OptimizeMode optimize_for = 9 [default = SPEED];</code>
     */
    com.google.protobuf.DescriptorProtos.FileOptions.OptimizeMode getOptimizeFor();

    /**
     * <pre>
     * Sets the Go package where structs generated from this .proto will be
     * placed. If omitted, the Go package will be derived from the following:
     *   - The basename of the package import path, if provided.
     *   - Otherwise, the package statement in the .proto file, if present.
     *   - Otherwise, the basename of the .proto file, without extension.
     * </pre>
     *
     * <code>optional string go_package = 11;</code>
     */
    boolean hasGoPackage();
    /**
     * <pre>
     * Sets the Go package where structs generated from this .proto will be
     * placed. If omitted, the Go package will be derived from the following:
     *   - The basename of the package import path, if provided.
     *   - Otherwise, the package statement in the .proto file, if present.
     *   - Otherwise, the basename of the .proto file, without extension.
     * </pre>
     *
     * <code>optional string go_package = 11;</code>
     */
    java.lang.String getGoPackage();
    /**
     * <pre>
     * Sets the Go package where structs generated from this .proto will be
     * placed. If omitted, the Go package will be derived from the following:
     *   - The basename of the package import path, if provided.
     *   - Otherwise, the package statement in the .proto file, if present.
     *   - Otherwise, the basename of the .proto file, without extension.
     * </pre>
     *
     * <code>optional string go_package = 11;</code>
     */
    com.google.protobuf.ByteString
        getGoPackageBytes();

    /**
     * <pre>
     * Should generic services be generated in each language?  "Generic" services
     * are not specific to any particular RPC system.  They are generated by the
     * main code generators in each language (without additional plugins).
     * Generic services were the only kind of service generation supported by
     * early versions of google.protobuf.
     * Generic services are now considered deprecated in favor of using plugins
     * that generate code specific to your particular RPC system.  Therefore,
     * these default to false.  Old code which depends on generic services should
     * explicitly set them to true.
     * </pre>
     *
     * <code>optional bool cc_generic_services = 16 [default = false];</code>
     */
    boolean hasCcGenericServices();
    /**
     * <pre>
     * Should generic services be generated in each language?  "Generic" services
     * are not specific to any particular RPC system.  They are generated by the
     * main code generators in each language (without additional plugins).
     * Generic services were the only kind of service generation supported by
     * early versions of google.protobuf.
     * Generic services are now considered deprecated in favor of using plugins
     * that generate code specific to your particular RPC system.  Therefore,
     * these default to false.  Old code which depends on generic services should
     * explicitly set them to true.
     * </pre>
     *
     * <code>optional bool cc_generic_services = 16 [default = false];</code>
     */
    boolean getCcGenericServices();

    /**
     * <code>optional bool java_generic_services = 17 [default = false];</code>
     */
    boolean hasJavaGenericServices();
    /**
     * <code>optional bool java_generic_services = 17 [default = false];</code>
     */
    boolean getJavaGenericServices();

    /**
     * <code>optional bool py_generic_services = 18 [default = false];</code>
     */
    boolean hasPyGenericServices();
    /**
     * <code>optional bool py_generic_services = 18 [default = false];</code>
     */
    boolean getPyGenericServices();

    /**
     * <code>optional bool php_generic_services = 42 [default = false];</code>
     */
    boolean hasPhpGenericServices();
    /**
     * <code>optional bool php_generic_services = 42 [default = false];</code>
     */
    boolean getPhpGenericServices();

    /**
     * <pre>
     * Is this file deprecated?
     * Depending on the target platform, this can emit Deprecated annotations
     * for everything in the file, or it will be completely ignored; in the very
     * least, this is a formalization for deprecating files.
     * </pre>
     *
     * <code>optional bool deprecated = 23 [default = false];</code>
     */
    boolean hasDeprecated();
    /**
     * <pre>
     * Is this file deprecated?
     * Depending on the target platform, this can emit Deprecated annotations
     * for everything in the file, or it will be completely ignored; in the very
     * least, this is a formalization for deprecating files.
     * </pre>
     *
     * <code>optional bool deprecated = 23 [default = false];</code>
     */
    boolean getDeprecated();

    /**
     * <pre>
     * Enables the use of arenas for the proto messages in this file. This applies
     * only to generated classes for C++.
     * </pre>
     *
     * <code>optional bool cc_enable_arenas = 31 [default = false];</code>
     */
    boolean hasCcEnableArenas();
    /**
     * <pre>
     * Enables the use of arenas for the proto messages in this file. This applies
     * only to generated classes for C++.
     * </pre>
     *
     * <code>optional bool cc_enable_arenas = 31 [default = false];</code>
     */
    boolean getCcEnableArenas();

    /**
     * <pre>
     * Sets the objective c class prefix which is prepended to all objective c
     * generated classes from this .proto. There is no default.
     * </pre>
     *
     * <code>optional string objc_class_prefix = 36;</code>
     */
    boolean hasObjcClassPrefix();
    /**
     * <pre>
     * Sets the objective c class prefix which is prepended to all objective c
     * generated classes from this .proto. There is no default.
     * </pre>
     *
     * <code>optional string objc_class_prefix = 36;</code>
     */
    java.lang.String getObjcClassPrefix();
    /**
     * <pre>
     * Sets the objective c class prefix which is prepended to all objective c
     * generated classes from this .proto. There is no default.
     * </pre>
     *
     * <code>optional string objc_class_prefix = 36;</code>
     */
    com.google.protobuf.ByteString
        getObjcClassPrefixBytes();

    /**
     * <pre>
     * Namespace for generated classes; defaults to the package.
     * </pre>
     *
     * <code>optional string csharp_namespace = 37;</code>
     */
    boolean hasCsharpNamespace();
    /**
     * <pre>
     * Namespace for generated classes; defaults to the package.
     * </pre>
     *
     * <code>optional string csharp_namespace = 37;</code>
     */
    java.lang.String getCsharpNamespace();
    /**
     * <pre>
     * Namespace for generated classes; defaults to the package.
     * </pre>
     *
     * <code>optional string csharp_namespace = 37;</code>
     */
    com.google.protobuf.ByteString
        getCsharpNamespaceBytes();

    /**
     * <pre>
     * By default Swift generators will take the proto package and CamelCase it
     * replacing '.' with underscore and use that to prefix the types/symbols
     * defined. When this options is provided, they will use this value instead
     * to prefix the types/symbols defined.
     * </pre>
     *
     * <code>optional string swift_prefix = 39;</code>
     */
    boolean hasSwiftPrefix();
    /**
     * <pre>
     * By default Swift generators will take the proto package and CamelCase it
     * replacing '.' with underscore and use that to prefix the types/symbols
     * defined. When this options is provided, they will use this value instead
     * to prefix the types/symbols defined.
     * </pre>
     *
     * <code>optional string swift_prefix = 39;</code>
     */
    java.lang.String getSwiftPrefix();
    /**
     * <pre>
     * By default Swift generators will take the proto package and CamelCase it
     * replacing '.' with underscore and use that to prefix the types/symbols
     * defined. When this options is provided, they will use this value instead
     * to prefix the types/symbols defined.
     * </pre>
     *
     * <code>optional string swift_prefix = 39;</code>
     */
    com.google.protobuf.ByteString
        getSwiftPrefixBytes();

    /**
     * <pre>
     * Sets the php class prefix which is prepended to all php generated classes
     * from this .proto. Default is empty.
     * </pre>
     *
     * <code>optional string php_class_prefix = 40;</code>
     */
    boolean hasPhpClassPrefix();
    /**
     * <pre>
     * Sets the php class prefix which is prepended to all php generated classes
     * from this .proto. Default is empty.
     * </pre>
     *
     * <code>optional string php_class_prefix = 40;</code>
     */
    java.lang.String getPhpClassPrefix();
    /**
     * <pre>
     * Sets the php class prefix which is prepended to all php generated classes
     * from this .proto. Default is empty.
     * </pre>
     *
     * <code>optional string php_class_prefix = 40;</code>
     */
    com.google.protobuf.ByteString
        getPhpClassPrefixBytes();

    /**
     * <pre>
     * Use this option to change the namespace of php generated classes. Default
     * is empty. When this option is empty, the package name will be used for
     * determining the namespace.
     * </pre>
     *
     * <code>optional string php_namespace = 41;</code>
     */
    boolean hasPhpNamespace();
    /**
     * <pre>
     * Use this option to change the namespace of php generated classes. Default
     * is empty. When this option is empty, the package name will be used for
     * determining the namespace.
     * </pre>
     *
     * <code>optional string php_namespace = 41;</code>
     */
    java.lang.String getPhpNamespace();
    /**
     * <pre>
     * Use this option to change the namespace of php generated classes. Default
     * is empty. When this option is empty, the package name will be used for
     * determining the namespace.
     * </pre>
     *
     * <code>optional string php_namespace = 41;</code>
     */
    com.google.protobuf.ByteString
        getPhpNamespaceBytes();

    /**
     * <pre>
     * Use this option to change the namespace of php generated metadata classes.
     * Default is empty. When this option is empty, the proto file name will be used
     * for determining the namespace.
     * </pre>
     *
     * <code>optional string php_metadata_namespace = 44;</code>
     */
    boolean hasPhpMetadataNamespace();
    /**
     * <pre>
     * Use this option to change the namespace of php generated metadata classes.
     * Default is empty. When this option is empty, the proto file name will be used
     * for determining the namespace.
     * </pre>
     *
     * <code>optional string php_metadata_namespace = 44;</code>
     */
    java.lang.String getPhpMetadataNamespace();
    /**
     * <pre>
     * Use this option to change the namespace of php generated metadata classes.
     * Default is empty. When this option is empty, the proto file name will be used
     * for determining the namespace.
     * </pre>
     *
     * <code>optional string php_metadata_namespace = 44;</code>
     */
    com.google.protobuf.ByteString
        getPhpMetadataNamespaceBytes();

    /**
     * <pre>
     * Use this option to change the package of ruby generated classes. Default
     * is empty. When this option is not set, the package name will be used for
     * determining the ruby package.
     * </pre>
     *
     * <code>optional string ruby_package = 45;</code>
     */
    boolean hasRubyPackage();
    /**
     * <pre>
     * Use this option to change the package of ruby generated classes. Default
     * is empty. When this option is not set, the package name will be used for
     * determining the ruby package.
     * </pre>
     *
     * <code>optional string ruby_package = 45;</code>
     */
    java.lang.String getRubyPackage();
    /**
     * <pre>
     * Use this option to change the package of ruby generated classes. Default
     * is empty. When this option is not set, the package name will be used for
     * determining the ruby package.
     * </pre>
     *
     * <code>optional string ruby_package = 45;</code>
     */
    com.google.protobuf.ByteString
        getRubyPackageBytes();

    /**
     * <pre>
     * The parser stores options it doesn't recognize here.
     * See the documentation for the "Options" section above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    java.util.List<com.google.protobuf.DescriptorProtos.UninterpretedOption>
        getUninterpretedOptionList();
    /**
     * <pre>
     * The parser stores options it doesn't recognize here.
     * See the documentation for the "Options" section above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    com.google.protobuf.DescriptorProtos.UninterpretedOption getUninterpretedOption(int index);
    /**
     * <pre>
     * The parser stores options it doesn't recognize here.
     * See the documentation for the "Options" section above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    int getUninterpretedOptionCount();
  }
  /**
   * Protobuf type {@code google.protobuf.FileOptions}
   */
  public  static final class FileOptions extends
      com.google.protobuf.GeneratedMessageLite.ExtendableMessage<
        FileOptions, FileOptions.Builder> implements
      // @@protoc_insertion_point(message_implements:google.protobuf.FileOptions)
      FileOptionsOrBuilder {
    private FileOptions() {
      javaPackage_ = "";
      javaOuterClassname_ = "";
      optimizeFor_ = 1;
      goPackage_ = "";
      objcClassPrefix_ = "";
      csharpNamespace_ = "";
      swiftPrefix_ = "";
      phpClassPrefix_ = "";
      phpNamespace_ = "";
      phpMetadataNamespace_ = "";
      rubyPackage_ = "";
      uninterpretedOption_ = emptyProtobufList();
    }
    /**
     * <pre>
     * Generated classes can be optimized for speed or code size.
     * </pre>
     *
     * Protobuf enum {@code google.protobuf.FileOptions.OptimizeMode}
     */
    public enum OptimizeMode
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <pre>
       * Generate complete code for parsing, serialization,
       * </pre>
       *
       * <code>SPEED = 1;</code>
       */
      SPEED(1),
      /**
       * <pre>
       * etc.
       * </pre>
       *
       * <code>CODE_SIZE = 2;</code>
       */
      CODE_SIZE(2),
      /**
       * <pre>
       * Generate code using MessageLite and the lite runtime.
       * </pre>
       *
       * <code>LITE_RUNTIME = 3;</code>
       */
      LITE_RUNTIME(3),
      ;

      /**
       * <pre>
       * Generate complete code for parsing, serialization,
       * </pre>
       *
       * <code>SPEED = 1;</code>
       */
      public static final int SPEED_VALUE = 1;
      /**
       * <pre>
       * etc.
       * </pre>
       *
       * <code>CODE_SIZE = 2;</code>
       */
      public static final int CODE_SIZE_VALUE = 2;
      /**
       * <pre>
       * Generate code using MessageLite and the lite runtime.
       * </pre>
       *
       * <code>LITE_RUNTIME = 3;</code>
       */
      public static final int LITE_RUNTIME_VALUE = 3;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static OptimizeMode valueOf(int value) {
        return forNumber(value);
      }

      public static OptimizeMode forNumber(int value) {
        switch (value) {
          case 1: return SPEED;
          case 2: return CODE_SIZE;
          case 3: return LITE_RUNTIME;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<OptimizeMode>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          OptimizeMode> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<OptimizeMode>() {
              public OptimizeMode findValueByNumber(int number) {
                return OptimizeMode.forNumber(number);
              }
            };

      private final int value;

      private OptimizeMode(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:google.protobuf.FileOptions.OptimizeMode)
    }

    private int bitField0_;
    public static final int JAVA_PACKAGE_FIELD_NUMBER = 1;
    private java.lang.String javaPackage_;
    /**
     * <pre>
     * Sets the Java package where classes generated from this .proto will be
     * placed.  By default, the proto package is used, but this is often
     * inappropriate because proto packages do not normally start with backwards
     * domain names.
     * </pre>
     *
     * <code>optional string java_package = 1;</code>
     */
    public boolean hasJavaPackage() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * Sets the Java package where classes generated from this .proto will be
     * placed.  By default, the proto package is used, but this is often
     * inappropriate because proto packages do not normally start with backwards
     * domain names.
     * </pre>
     *
     * <code>optional string java_package = 1;</code>
     */
    public java.lang.String getJavaPackage() {
      return javaPackage_;
    }
    /**
     * <pre>
     * Sets the Java package where classes generated from this .proto will be
     * placed.  By default, the proto package is used, but this is often
     * inappropriate because proto packages do not normally start with backwards
     * domain names.
     * </pre>
     *
     * <code>optional string java_package = 1;</code>
     */
    public com.google.protobuf.ByteString
        getJavaPackageBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(javaPackage_);
    }
    /**
     * <pre>
     * Sets the Java package where classes generated from this .proto will be
     * placed.  By default, the proto package is used, but this is often
     * inappropriate because proto packages do not normally start with backwards
     * domain names.
     * </pre>
     *
     * <code>optional string java_package = 1;</code>
     */
    private void setJavaPackage(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      javaPackage_ = value;
    }
    /**
     * <pre>
     * Sets the Java package where classes generated from this .proto will be
     * placed.  By default, the proto package is used, but this is often
     * inappropriate because proto packages do not normally start with backwards
     * domain names.
     * </pre>
     *
     * <code>optional string java_package = 1;</code>
     */
    private void clearJavaPackage() {
      bitField0_ = (bitField0_ & ~0x00000001);
      javaPackage_ = getDefaultInstance().getJavaPackage();
    }
    /**
     * <pre>
     * Sets the Java package where classes generated from this .proto will be
     * placed.  By default, the proto package is used, but this is often
     * inappropriate because proto packages do not normally start with backwards
     * domain names.
     * </pre>
     *
     * <code>optional string java_package = 1;</code>
     */
    private void setJavaPackageBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      javaPackage_ = value.toStringUtf8();
    }

    public static final int JAVA_OUTER_CLASSNAME_FIELD_NUMBER = 8;
    private java.lang.String javaOuterClassname_;
    /**
     * <pre>
     * If set, all the classes from the .proto file are wrapped in a single
     * outer class with the given name.  This applies to both Proto1
     * (equivalent to the old "--one_java_file" option) and Proto2 (where
     * a .proto always translates to a single class, but you may want to
     * explicitly choose the class name).
     * </pre>
     *
     * <code>optional string java_outer_classname = 8;</code>
     */
    public boolean hasJavaOuterClassname() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * If set, all the classes from the .proto file are wrapped in a single
     * outer class with the given name.  This applies to both Proto1
     * (equivalent to the old "--one_java_file" option) and Proto2 (where
     * a .proto always translates to a single class, but you may want to
     * explicitly choose the class name).
     * </pre>
     *
     * <code>optional string java_outer_classname = 8;</code>
     */
    public java.lang.String getJavaOuterClassname() {
      return javaOuterClassname_;
    }
    /**
     * <pre>
     * If set, all the classes from the .proto file are wrapped in a single
     * outer class with the given name.  This applies to both Proto1
     * (equivalent to the old "--one_java_file" option) and Proto2 (where
     * a .proto always translates to a single class, but you may want to
     * explicitly choose the class name).
     * </pre>
     *
     * <code>optional string java_outer_classname = 8;</code>
     */
    public com.google.protobuf.ByteString
        getJavaOuterClassnameBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(javaOuterClassname_);
    }
    /**
     * <pre>
     * If set, all the classes from the .proto file are wrapped in a single
     * outer class with the given name.  This applies to both Proto1
     * (equivalent to the old "--one_java_file" option) and Proto2 (where
     * a .proto always translates to a single class, but you may want to
     * explicitly choose the class name).
     * </pre>
     *
     * <code>optional string java_outer_classname = 8;</code>
     */
    private void setJavaOuterClassname(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      javaOuterClassname_ = value;
    }
    /**
     * <pre>
     * If set, all the classes from the .proto file are wrapped in a single
     * outer class with the given name.  This applies to both Proto1
     * (equivalent to the old "--one_java_file" option) and Proto2 (where
     * a .proto always translates to a single class, but you may want to
     * explicitly choose the class name).
     * </pre>
     *
     * <code>optional string java_outer_classname = 8;</code>
     */
    private void clearJavaOuterClassname() {
      bitField0_ = (bitField0_ & ~0x00000002);
      javaOuterClassname_ = getDefaultInstance().getJavaOuterClassname();
    }
    /**
     * <pre>
     * If set, all the classes from the .proto file are wrapped in a single
     * outer class with the given name.  This applies to both Proto1
     * (equivalent to the old "--one_java_file" option) and Proto2 (where
     * a .proto always translates to a single class, but you may want to
     * explicitly choose the class name).
     * </pre>
     *
     * <code>optional string java_outer_classname = 8;</code>
     */
    private void setJavaOuterClassnameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      javaOuterClassname_ = value.toStringUtf8();
    }

    public static final int JAVA_MULTIPLE_FILES_FIELD_NUMBER = 10;
    private boolean javaMultipleFiles_;
    /**
     * <pre>
     * If set true, then the Java code generator will generate a separate .java
     * file for each top-level message, enum, and service defined in the .proto
     * file.  Thus, these types will *not* be nested inside the outer class
     * named by java_outer_classname.  However, the outer class will still be
     * generated to contain the file's getDescriptor() method as well as any
     * top-level extensions defined in the file.
     * </pre>
     *
     * <code>optional bool java_multiple_files = 10 [default = false];</code>
     */
    public boolean hasJavaMultipleFiles() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     * If set true, then the Java code generator will generate a separate .java
     * file for each top-level message, enum, and service defined in the .proto
     * file.  Thus, these types will *not* be nested inside the outer class
     * named by java_outer_classname.  However, the outer class will still be
     * generated to contain the file's getDescriptor() method as well as any
     * top-level extensions defined in the file.
     * </pre>
     *
     * <code>optional bool java_multiple_files = 10 [default = false];</code>
     */
    public boolean getJavaMultipleFiles() {
      return javaMultipleFiles_;
    }
    /**
     * <pre>
     * If set true, then the Java code generator will generate a separate .java
     * file for each top-level message, enum, and service defined in the .proto
     * file.  Thus, these types will *not* be nested inside the outer class
     * named by java_outer_classname.  However, the outer class will still be
     * generated to contain the file's getDescriptor() method as well as any
     * top-level extensions defined in the file.
     * </pre>
     *
     * <code>optional bool java_multiple_files = 10 [default = false];</code>
     */
    private void setJavaMultipleFiles(boolean value) {
      bitField0_ |= 0x00000004;
      javaMultipleFiles_ = value;
    }
    /**
     * <pre>
     * If set true, then the Java code generator will generate a separate .java
     * file for each top-level message, enum, and service defined in the .proto
     * file.  Thus, these types will *not* be nested inside the outer class
     * named by java_outer_classname.  However, the outer class will still be
     * generated to contain the file's getDescriptor() method as well as any
     * top-level extensions defined in the file.
     * </pre>
     *
     * <code>optional bool java_multiple_files = 10 [default = false];</code>
     */
    private void clearJavaMultipleFiles() {
      bitField0_ = (bitField0_ & ~0x00000004);
      javaMultipleFiles_ = false;
    }

    public static final int JAVA_GENERATE_EQUALS_AND_HASH_FIELD_NUMBER = 20;
    private boolean javaGenerateEqualsAndHash_;
    /**
     * <pre>
     * This option does nothing.
     * </pre>
     *
     * <code>optional bool java_generate_equals_and_hash = 20 [deprecated = true];</code>
     */
    @java.lang.Deprecated public boolean hasJavaGenerateEqualsAndHash() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     * This option does nothing.
     * </pre>
     *
     * <code>optional bool java_generate_equals_and_hash = 20 [deprecated = true];</code>
     */
    @java.lang.Deprecated public boolean getJavaGenerateEqualsAndHash() {
      return javaGenerateEqualsAndHash_;
    }
    /**
     * <pre>
     * This option does nothing.
     * </pre>
     *
     * <code>optional bool java_generate_equals_and_hash = 20 [deprecated = true];</code>
     */
    private void setJavaGenerateEqualsAndHash(boolean value) {
      bitField0_ |= 0x00000008;
      javaGenerateEqualsAndHash_ = value;
    }
    /**
     * <pre>
     * This option does nothing.
     * </pre>
     *
     * <code>optional bool java_generate_equals_and_hash = 20 [deprecated = true];</code>
     */
    private void clearJavaGenerateEqualsAndHash() {
      bitField0_ = (bitField0_ & ~0x00000008);
      javaGenerateEqualsAndHash_ = false;
    }

    public static final int JAVA_STRING_CHECK_UTF8_FIELD_NUMBER = 27;
    private boolean javaStringCheckUtf8_;
    /**
     * <pre>
     * If set true, then the Java2 code generator will generate code that
     * throws an exception whenever an attempt is made to assign a non-UTF-8
     * byte sequence to a string field.
     * Message reflection will do the same.
     * However, an extension field still accepts non-UTF-8 byte sequences.
     * This option has no effect on when used with the lite runtime.
     * </pre>
     *
     * <code>optional bool java_string_check_utf8 = 27 [default = false];</code>
     */
    public boolean hasJavaStringCheckUtf8() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <pre>
     * If set true, then the Java2 code generator will generate code that
     * throws an exception whenever an attempt is made to assign a non-UTF-8
     * byte sequence to a string field.
     * Message reflection will do the same.
     * However, an extension field still accepts non-UTF-8 byte sequences.
     * This option has no effect on when used with the lite runtime.
     * </pre>
     *
     * <code>optional bool java_string_check_utf8 = 27 [default = false];</code>
     */
    public boolean getJavaStringCheckUtf8() {
      return javaStringCheckUtf8_;
    }
    /**
     * <pre>
     * If set true, then the Java2 code generator will generate code that
     * throws an exception whenever an attempt is made to assign a non-UTF-8
     * byte sequence to a string field.
     * Message reflection will do the same.
     * However, an extension field still accepts non-UTF-8 byte sequences.
     * This option has no effect on when used with the lite runtime.
     * </pre>
     *
     * <code>optional bool java_string_check_utf8 = 27 [default = false];</code>
     */
    private void setJavaStringCheckUtf8(boolean value) {
      bitField0_ |= 0x00000010;
      javaStringCheckUtf8_ = value;
    }
    /**
     * <pre>
     * If set true, then the Java2 code generator will generate code that
     * throws an exception whenever an attempt is made to assign a non-UTF-8
     * byte sequence to a string field.
     * Message reflection will do the same.
     * However, an extension field still accepts non-UTF-8 byte sequences.
     * This option has no effect on when used with the lite runtime.
     * </pre>
     *
     * <code>optional bool java_string_check_utf8 = 27 [default = false];</code>
     */
    private void clearJavaStringCheckUtf8() {
      bitField0_ = (bitField0_ & ~0x00000010);
      javaStringCheckUtf8_ = false;
    }

    public static final int OPTIMIZE_FOR_FIELD_NUMBER = 9;
    private int optimizeFor_;
    /**
     * <code>optional .google.protobuf.FileOptions.OptimizeMode optimize_for = 9 [default = SPEED];</code>
     */
    public boolean hasOptimizeFor() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .google.protobuf.FileOptions.OptimizeMode optimize_for = 9 [default = SPEED];</code>
     */
    public com.google.protobuf.DescriptorProtos.FileOptions.OptimizeMode getOptimizeFor() {
      com.google.protobuf.DescriptorProtos.FileOptions.OptimizeMode result = com.google.protobuf.DescriptorProtos.FileOptions.OptimizeMode.forNumber(optimizeFor_);
      return result == null ? com.google.protobuf.DescriptorProtos.FileOptions.OptimizeMode.SPEED : result;
    }
    /**
     * <code>optional .google.protobuf.FileOptions.OptimizeMode optimize_for = 9 [default = SPEED];</code>
     */
    private void setOptimizeFor(com.google.protobuf.DescriptorProtos.FileOptions.OptimizeMode value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000020;
      optimizeFor_ = value.getNumber();
    }
    /**
     * <code>optional .google.protobuf.FileOptions.OptimizeMode optimize_for = 9 [default = SPEED];</code>
     */
    private void clearOptimizeFor() {
      bitField0_ = (bitField0_ & ~0x00000020);
      optimizeFor_ = 1;
    }

    public static final int GO_PACKAGE_FIELD_NUMBER = 11;
    private java.lang.String goPackage_;
    /**
     * <pre>
     * Sets the Go package where structs generated from this .proto will be
     * placed. If omitted, the Go package will be derived from the following:
     *   - The basename of the package import path, if provided.
     *   - Otherwise, the package statement in the .proto file, if present.
     *   - Otherwise, the basename of the .proto file, without extension.
     * </pre>
     *
     * <code>optional string go_package = 11;</code>
     */
    public boolean hasGoPackage() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <pre>
     * Sets the Go package where structs generated from this .proto will be
     * placed. If omitted, the Go package will be derived from the following:
     *   - The basename of the package import path, if provided.
     *   - Otherwise, the package statement in the .proto file, if present.
     *   - Otherwise, the basename of the .proto file, without extension.
     * </pre>
     *
     * <code>optional string go_package = 11;</code>
     */
    public java.lang.String getGoPackage() {
      return goPackage_;
    }
    /**
     * <pre>
     * Sets the Go package where structs generated from this .proto will be
     * placed. If omitted, the Go package will be derived from the following:
     *   - The basename of the package import path, if provided.
     *   - Otherwise, the package statement in the .proto file, if present.
     *   - Otherwise, the basename of the .proto file, without extension.
     * </pre>
     *
     * <code>optional string go_package = 11;</code>
     */
    public com.google.protobuf.ByteString
        getGoPackageBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(goPackage_);
    }
    /**
     * <pre>
     * Sets the Go package where structs generated from this .proto will be
     * placed. If omitted, the Go package will be derived from the following:
     *   - The basename of the package import path, if provided.
     *   - Otherwise, the package statement in the .proto file, if present.
     *   - Otherwise, the basename of the .proto file, without extension.
     * </pre>
     *
     * <code>optional string go_package = 11;</code>
     */
    private void setGoPackage(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
      goPackage_ = value;
    }
    /**
     * <pre>
     * Sets the Go package where structs generated from this .proto will be
     * placed. If omitted, the Go package will be derived from the following:
     *   - The basename of the package import path, if provided.
     *   - Otherwise, the package statement in the .proto file, if present.
     *   - Otherwise, the basename of the .proto file, without extension.
     * </pre>
     *
     * <code>optional string go_package = 11;</code>
     */
    private void clearGoPackage() {
      bitField0_ = (bitField0_ & ~0x00000040);
      goPackage_ = getDefaultInstance().getGoPackage();
    }
    /**
     * <pre>
     * Sets the Go package where structs generated from this .proto will be
     * placed. If omitted, the Go package will be derived from the following:
     *   - The basename of the package import path, if provided.
     *   - Otherwise, the package statement in the .proto file, if present.
     *   - Otherwise, the basename of the .proto file, without extension.
     * </pre>
     *
     * <code>optional string go_package = 11;</code>
     */
    private void setGoPackageBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
      goPackage_ = value.toStringUtf8();
    }

    public static final int CC_GENERIC_SERVICES_FIELD_NUMBER = 16;
    private boolean ccGenericServices_;
    /**
     * <pre>
     * Should generic services be generated in each language?  "Generic" services
     * are not specific to any particular RPC system.  They are generated by the
     * main code generators in each language (without additional plugins).
     * Generic services were the only kind of service generation supported by
     * early versions of google.protobuf.
     * Generic services are now considered deprecated in favor of using plugins
     * that generate code specific to your particular RPC system.  Therefore,
     * these default to false.  Old code which depends on generic services should
     * explicitly set them to true.
     * </pre>
     *
     * <code>optional bool cc_generic_services = 16 [default = false];</code>
     */
    public boolean hasCcGenericServices() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <pre>
     * Should generic services be generated in each language?  "Generic" services
     * are not specific to any particular RPC system.  They are generated by the
     * main code generators in each language (without additional plugins).
     * Generic services were the only kind of service generation supported by
     * early versions of google.protobuf.
     * Generic services are now considered deprecated in favor of using plugins
     * that generate code specific to your particular RPC system.  Therefore,
     * these default to false.  Old code which depends on generic services should
     * explicitly set them to true.
     * </pre>
     *
     * <code>optional bool cc_generic_services = 16 [default = false];</code>
     */
    public boolean getCcGenericServices() {
      return ccGenericServices_;
    }
    /**
     * <pre>
     * Should generic services be generated in each language?  "Generic" services
     * are not specific to any particular RPC system.  They are generated by the
     * main code generators in each language (without additional plugins).
     * Generic services were the only kind of service generation supported by
     * early versions of google.protobuf.
     * Generic services are now considered deprecated in favor of using plugins
     * that generate code specific to your particular RPC system.  Therefore,
     * these default to false.  Old code which depends on generic services should
     * explicitly set them to true.
     * </pre>
     *
     * <code>optional bool cc_generic_services = 16 [default = false];</code>
     */
    private void setCcGenericServices(boolean value) {
      bitField0_ |= 0x00000080;
      ccGenericServices_ = value;
    }
    /**
     * <pre>
     * Should generic services be generated in each language?  "Generic" services
     * are not specific to any particular RPC system.  They are generated by the
     * main code generators in each language (without additional plugins).
     * Generic services were the only kind of service generation supported by
     * early versions of google.protobuf.
     * Generic services are now considered deprecated in favor of using plugins
     * that generate code specific to your particular RPC system.  Therefore,
     * these default to false.  Old code which depends on generic services should
     * explicitly set them to true.
     * </pre>
     *
     * <code>optional bool cc_generic_services = 16 [default = false];</code>
     */
    private void clearCcGenericServices() {
      bitField0_ = (bitField0_ & ~0x00000080);
      ccGenericServices_ = false;
    }

    public static final int JAVA_GENERIC_SERVICES_FIELD_NUMBER = 17;
    private boolean javaGenericServices_;
    /**
     * <code>optional bool java_generic_services = 17 [default = false];</code>
     */
    public boolean hasJavaGenericServices() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional bool java_generic_services = 17 [default = false];</code>
     */
    public boolean getJavaGenericServices() {
      return javaGenericServices_;
    }
    /**
     * <code>optional bool java_generic_services = 17 [default = false];</code>
     */
    private void setJavaGenericServices(boolean value) {
      bitField0_ |= 0x00000100;
      javaGenericServices_ = value;
    }
    /**
     * <code>optional bool java_generic_services = 17 [default = false];</code>
     */
    private void clearJavaGenericServices() {
      bitField0_ = (bitField0_ & ~0x00000100);
      javaGenericServices_ = false;
    }

    public static final int PY_GENERIC_SERVICES_FIELD_NUMBER = 18;
    private boolean pyGenericServices_;
    /**
     * <code>optional bool py_generic_services = 18 [default = false];</code>
     */
    public boolean hasPyGenericServices() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional bool py_generic_services = 18 [default = false];</code>
     */
    public boolean getPyGenericServices() {
      return pyGenericServices_;
    }
    /**
     * <code>optional bool py_generic_services = 18 [default = false];</code>
     */
    private void setPyGenericServices(boolean value) {
      bitField0_ |= 0x00000200;
      pyGenericServices_ = value;
    }
    /**
     * <code>optional bool py_generic_services = 18 [default = false];</code>
     */
    private void clearPyGenericServices() {
      bitField0_ = (bitField0_ & ~0x00000200);
      pyGenericServices_ = false;
    }

    public static final int PHP_GENERIC_SERVICES_FIELD_NUMBER = 42;
    private boolean phpGenericServices_;
    /**
     * <code>optional bool php_generic_services = 42 [default = false];</code>
     */
    public boolean hasPhpGenericServices() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional bool php_generic_services = 42 [default = false];</code>
     */
    public boolean getPhpGenericServices() {
      return phpGenericServices_;
    }
    /**
     * <code>optional bool php_generic_services = 42 [default = false];</code>
     */
    private void setPhpGenericServices(boolean value) {
      bitField0_ |= 0x00000400;
      phpGenericServices_ = value;
    }
    /**
     * <code>optional bool php_generic_services = 42 [default = false];</code>
     */
    private void clearPhpGenericServices() {
      bitField0_ = (bitField0_ & ~0x00000400);
      phpGenericServices_ = false;
    }

    public static final int DEPRECATED_FIELD_NUMBER = 23;
    private boolean deprecated_;
    /**
     * <pre>
     * Is this file deprecated?
     * Depending on the target platform, this can emit Deprecated annotations
     * for everything in the file, or it will be completely ignored; in the very
     * least, this is a formalization for deprecating files.
     * </pre>
     *
     * <code>optional bool deprecated = 23 [default = false];</code>
     */
    public boolean hasDeprecated() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <pre>
     * Is this file deprecated?
     * Depending on the target platform, this can emit Deprecated annotations
     * for everything in the file, or it will be completely ignored; in the very
     * least, this is a formalization for deprecating files.
     * </pre>
     *
     * <code>optional bool deprecated = 23 [default = false];</code>
     */
    public boolean getDeprecated() {
      return deprecated_;
    }
    /**
     * <pre>
     * Is this file deprecated?
     * Depending on the target platform, this can emit Deprecated annotations
     * for everything in the file, or it will be completely ignored; in the very
     * least, this is a formalization for deprecating files.
     * </pre>
     *
     * <code>optional bool deprecated = 23 [default = false];</code>
     */
    private void setDeprecated(boolean value) {
      bitField0_ |= 0x00000800;
      deprecated_ = value;
    }
    /**
     * <pre>
     * Is this file deprecated?
     * Depending on the target platform, this can emit Deprecated annotations
     * for everything in the file, or it will be completely ignored; in the very
     * least, this is a formalization for deprecating files.
     * </pre>
     *
     * <code>optional bool deprecated = 23 [default = false];</code>
     */
    private void clearDeprecated() {
      bitField0_ = (bitField0_ & ~0x00000800);
      deprecated_ = false;
    }

    public static final int CC_ENABLE_ARENAS_FIELD_NUMBER = 31;
    private boolean ccEnableArenas_;
    /**
     * <pre>
     * Enables the use of arenas for the proto messages in this file. This applies
     * only to generated classes for C++.
     * </pre>
     *
     * <code>optional bool cc_enable_arenas = 31 [default = false];</code>
     */
    public boolean hasCcEnableArenas() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <pre>
     * Enables the use of arenas for the proto messages in this file. This applies
     * only to generated classes for C++.
     * </pre>
     *
     * <code>optional bool cc_enable_arenas = 31 [default = false];</code>
     */
    public boolean getCcEnableArenas() {
      return ccEnableArenas_;
    }
    /**
     * <pre>
     * Enables the use of arenas for the proto messages in this file. This applies
     * only to generated classes for C++.
     * </pre>
     *
     * <code>optional bool cc_enable_arenas = 31 [default = false];</code>
     */
    private void setCcEnableArenas(boolean value) {
      bitField0_ |= 0x00001000;
      ccEnableArenas_ = value;
    }
    /**
     * <pre>
     * Enables the use of arenas for the proto messages in this file. This applies
     * only to generated classes for C++.
     * </pre>
     *
     * <code>optional bool cc_enable_arenas = 31 [default = false];</code>
     */
    private void clearCcEnableArenas() {
      bitField0_ = (bitField0_ & ~0x00001000);
      ccEnableArenas_ = false;
    }

    public static final int OBJC_CLASS_PREFIX_FIELD_NUMBER = 36;
    private java.lang.String objcClassPrefix_;
    /**
     * <pre>
     * Sets the objective c class prefix which is prepended to all objective c
     * generated classes from this .proto. There is no default.
     * </pre>
     *
     * <code>optional string objc_class_prefix = 36;</code>
     */
    public boolean hasObjcClassPrefix() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <pre>
     * Sets the objective c class prefix which is prepended to all objective c
     * generated classes from this .proto. There is no default.
     * </pre>
     *
     * <code>optional string objc_class_prefix = 36;</code>
     */
    public java.lang.String getObjcClassPrefix() {
      return objcClassPrefix_;
    }
    /**
     * <pre>
     * Sets the objective c class prefix which is prepended to all objective c
     * generated classes from this .proto. There is no default.
     * </pre>
     *
     * <code>optional string objc_class_prefix = 36;</code>
     */
    public com.google.protobuf.ByteString
        getObjcClassPrefixBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(objcClassPrefix_);
    }
    /**
     * <pre>
     * Sets the objective c class prefix which is prepended to all objective c
     * generated classes from this .proto. There is no default.
     * </pre>
     *
     * <code>optional string objc_class_prefix = 36;</code>
     */
    private void setObjcClassPrefix(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00002000;
      objcClassPrefix_ = value;
    }
    /**
     * <pre>
     * Sets the objective c class prefix which is prepended to all objective c
     * generated classes from this .proto. There is no default.
     * </pre>
     *
     * <code>optional string objc_class_prefix = 36;</code>
     */
    private void clearObjcClassPrefix() {
      bitField0_ = (bitField0_ & ~0x00002000);
      objcClassPrefix_ = getDefaultInstance().getObjcClassPrefix();
    }
    /**
     * <pre>
     * Sets the objective c class prefix which is prepended to all objective c
     * generated classes from this .proto. There is no default.
     * </pre>
     *
     * <code>optional string objc_class_prefix = 36;</code>
     */
    private void setObjcClassPrefixBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00002000;
      objcClassPrefix_ = value.toStringUtf8();
    }

    public static final int CSHARP_NAMESPACE_FIELD_NUMBER = 37;
    private java.lang.String csharpNamespace_;
    /**
     * <pre>
     * Namespace for generated classes; defaults to the package.
     * </pre>
     *
     * <code>optional string csharp_namespace = 37;</code>
     */
    public boolean hasCsharpNamespace() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <pre>
     * Namespace for generated classes; defaults to the package.
     * </pre>
     *
     * <code>optional string csharp_namespace = 37;</code>
     */
    public java.lang.String getCsharpNamespace() {
      return csharpNamespace_;
    }
    /**
     * <pre>
     * Namespace for generated classes; defaults to the package.
     * </pre>
     *
     * <code>optional string csharp_namespace = 37;</code>
     */
    public com.google.protobuf.ByteString
        getCsharpNamespaceBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(csharpNamespace_);
    }
    /**
     * <pre>
     * Namespace for generated classes; defaults to the package.
     * </pre>
     *
     * <code>optional string csharp_namespace = 37;</code>
     */
    private void setCsharpNamespace(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00004000;
      csharpNamespace_ = value;
    }
    /**
     * <pre>
     * Namespace for generated classes; defaults to the package.
     * </pre>
     *
     * <code>optional string csharp_namespace = 37;</code>
     */
    private void clearCsharpNamespace() {
      bitField0_ = (bitField0_ & ~0x00004000);
      csharpNamespace_ = getDefaultInstance().getCsharpNamespace();
    }
    /**
     * <pre>
     * Namespace for generated classes; defaults to the package.
     * </pre>
     *
     * <code>optional string csharp_namespace = 37;</code>
     */
    private void setCsharpNamespaceBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00004000;
      csharpNamespace_ = value.toStringUtf8();
    }

    public static final int SWIFT_PREFIX_FIELD_NUMBER = 39;
    private java.lang.String swiftPrefix_;
    /**
     * <pre>
     * By default Swift generators will take the proto package and CamelCase it
     * replacing '.' with underscore and use that to prefix the types/symbols
     * defined. When this options is provided, they will use this value instead
     * to prefix the types/symbols defined.
     * </pre>
     *
     * <code>optional string swift_prefix = 39;</code>
     */
    public boolean hasSwiftPrefix() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <pre>
     * By default Swift generators will take the proto package and CamelCase it
     * replacing '.' with underscore and use that to prefix the types/symbols
     * defined. When this options is provided, they will use this value instead
     * to prefix the types/symbols defined.
     * </pre>
     *
     * <code>optional string swift_prefix = 39;</code>
     */
    public java.lang.String getSwiftPrefix() {
      return swiftPrefix_;
    }
    /**
     * <pre>
     * By default Swift generators will take the proto package and CamelCase it
     * replacing '.' with underscore and use that to prefix the types/symbols
     * defined. When this options is provided, they will use this value instead
     * to prefix the types/symbols defined.
     * </pre>
     *
     * <code>optional string swift_prefix = 39;</code>
     */
    public com.google.protobuf.ByteString
        getSwiftPrefixBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(swiftPrefix_);
    }
    /**
     * <pre>
     * By default Swift generators will take the proto package and CamelCase it
     * replacing '.' with underscore and use that to prefix the types/symbols
     * defined. When this options is provided, they will use this value instead
     * to prefix the types/symbols defined.
     * </pre>
     *
     * <code>optional string swift_prefix = 39;</code>
     */
    private void setSwiftPrefix(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00008000;
      swiftPrefix_ = value;
    }
    /**
     * <pre>
     * By default Swift generators will take the proto package and CamelCase it
     * replacing '.' with underscore and use that to prefix the types/symbols
     * defined. When this options is provided, they will use this value instead
     * to prefix the types/symbols defined.
     * </pre>
     *
     * <code>optional string swift_prefix = 39;</code>
     */
    private void clearSwiftPrefix() {
      bitField0_ = (bitField0_ & ~0x00008000);
      swiftPrefix_ = getDefaultInstance().getSwiftPrefix();
    }
    /**
     * <pre>
     * By default Swift generators will take the proto package and CamelCase it
     * replacing '.' with underscore and use that to prefix the types/symbols
     * defined. When this options is provided, they will use this value instead
     * to prefix the types/symbols defined.
     * </pre>
     *
     * <code>optional string swift_prefix = 39;</code>
     */
    private void setSwiftPrefixBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00008000;
      swiftPrefix_ = value.toStringUtf8();
    }

    public static final int PHP_CLASS_PREFIX_FIELD_NUMBER = 40;
    private java.lang.String phpClassPrefix_;
    /**
     * <pre>
     * Sets the php class prefix which is prepended to all php generated classes
     * from this .proto. Default is empty.
     * </pre>
     *
     * <code>optional string php_class_prefix = 40;</code>
     */
    public boolean hasPhpClassPrefix() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <pre>
     * Sets the php class prefix which is prepended to all php generated classes
     * from this .proto. Default is empty.
     * </pre>
     *
     * <code>optional string php_class_prefix = 40;</code>
     */
    public java.lang.String getPhpClassPrefix() {
      return phpClassPrefix_;
    }
    /**
     * <pre>
     * Sets the php class prefix which is prepended to all php generated classes
     * from this .proto. Default is empty.
     * </pre>
     *
     * <code>optional string php_class_prefix = 40;</code>
     */
    public com.google.protobuf.ByteString
        getPhpClassPrefixBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(phpClassPrefix_);
    }
    /**
     * <pre>
     * Sets the php class prefix which is prepended to all php generated classes
     * from this .proto. Default is empty.
     * </pre>
     *
     * <code>optional string php_class_prefix = 40;</code>
     */
    private void setPhpClassPrefix(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00010000;
      phpClassPrefix_ = value;
    }
    /**
     * <pre>
     * Sets the php class prefix which is prepended to all php generated classes
     * from this .proto. Default is empty.
     * </pre>
     *
     * <code>optional string php_class_prefix = 40;</code>
     */
    private void clearPhpClassPrefix() {
      bitField0_ = (bitField0_ & ~0x00010000);
      phpClassPrefix_ = getDefaultInstance().getPhpClassPrefix();
    }
    /**
     * <pre>
     * Sets the php class prefix which is prepended to all php generated classes
     * from this .proto. Default is empty.
     * </pre>
     *
     * <code>optional string php_class_prefix = 40;</code>
     */
    private void setPhpClassPrefixBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00010000;
      phpClassPrefix_ = value.toStringUtf8();
    }

    public static final int PHP_NAMESPACE_FIELD_NUMBER = 41;
    private java.lang.String phpNamespace_;
    /**
     * <pre>
     * Use this option to change the namespace of php generated classes. Default
     * is empty. When this option is empty, the package name will be used for
     * determining the namespace.
     * </pre>
     *
     * <code>optional string php_namespace = 41;</code>
     */
    public boolean hasPhpNamespace() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <pre>
     * Use this option to change the namespace of php generated classes. Default
     * is empty. When this option is empty, the package name will be used for
     * determining the namespace.
     * </pre>
     *
     * <code>optional string php_namespace = 41;</code>
     */
    public java.lang.String getPhpNamespace() {
      return phpNamespace_;
    }
    /**
     * <pre>
     * Use this option to change the namespace of php generated classes. Default
     * is empty. When this option is empty, the package name will be used for
     * determining the namespace.
     * </pre>
     *
     * <code>optional string php_namespace = 41;</code>
     */
    public com.google.protobuf.ByteString
        getPhpNamespaceBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(phpNamespace_);
    }
    /**
     * <pre>
     * Use this option to change the namespace of php generated classes. Default
     * is empty. When this option is empty, the package name will be used for
     * determining the namespace.
     * </pre>
     *
     * <code>optional string php_namespace = 41;</code>
     */
    private void setPhpNamespace(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00020000;
      phpNamespace_ = value;
    }
    /**
     * <pre>
     * Use this option to change the namespace of php generated classes. Default
     * is empty. When this option is empty, the package name will be used for
     * determining the namespace.
     * </pre>
     *
     * <code>optional string php_namespace = 41;</code>
     */
    private void clearPhpNamespace() {
      bitField0_ = (bitField0_ & ~0x00020000);
      phpNamespace_ = getDefaultInstance().getPhpNamespace();
    }
    /**
     * <pre>
     * Use this option to change the namespace of php generated classes. Default
     * is empty. When this option is empty, the package name will be used for
     * determining the namespace.
     * </pre>
     *
     * <code>optional string php_namespace = 41;</code>
     */
    private void setPhpNamespaceBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00020000;
      phpNamespace_ = value.toStringUtf8();
    }

    public static final int PHP_METADATA_NAMESPACE_FIELD_NUMBER = 44;
    private java.lang.String phpMetadataNamespace_;
    /**
     * <pre>
     * Use this option to change the namespace of php generated metadata classes.
     * Default is empty. When this option is empty, the proto file name will be used
     * for determining the namespace.
     * </pre>
     *
     * <code>optional string php_metadata_namespace = 44;</code>
     */
    public boolean hasPhpMetadataNamespace() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <pre>
     * Use this option to change the namespace of php generated metadata classes.
     * Default is empty. When this option is empty, the proto file name will be used
     * for determining the namespace.
     * </pre>
     *
     * <code>optional string php_metadata_namespace = 44;</code>
     */
    public java.lang.String getPhpMetadataNamespace() {
      return phpMetadataNamespace_;
    }
    /**
     * <pre>
     * Use this option to change the namespace of php generated metadata classes.
     * Default is empty. When this option is empty, the proto file name will be used
     * for determining the namespace.
     * </pre>
     *
     * <code>optional string php_metadata_namespace = 44;</code>
     */
    public com.google.protobuf.ByteString
        getPhpMetadataNamespaceBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(phpMetadataNamespace_);
    }
    /**
     * <pre>
     * Use this option to change the namespace of php generated metadata classes.
     * Default is empty. When this option is empty, the proto file name will be used
     * for determining the namespace.
     * </pre>
     *
     * <code>optional string php_metadata_namespace = 44;</code>
     */
    private void setPhpMetadataNamespace(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00040000;
      phpMetadataNamespace_ = value;
    }
    /**
     * <pre>
     * Use this option to change the namespace of php generated metadata classes.
     * Default is empty. When this option is empty, the proto file name will be used
     * for determining the namespace.
     * </pre>
     *
     * <code>optional string php_metadata_namespace = 44;</code>
     */
    private void clearPhpMetadataNamespace() {
      bitField0_ = (bitField0_ & ~0x00040000);
      phpMetadataNamespace_ = getDefaultInstance().getPhpMetadataNamespace();
    }
    /**
     * <pre>
     * Use this option to change the namespace of php generated metadata classes.
     * Default is empty. When this option is empty, the proto file name will be used
     * for determining the namespace.
     * </pre>
     *
     * <code>optional string php_metadata_namespace = 44;</code>
     */
    private void setPhpMetadataNamespaceBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00040000;
      phpMetadataNamespace_ = value.toStringUtf8();
    }

    public static final int RUBY_PACKAGE_FIELD_NUMBER = 45;
    private java.lang.String rubyPackage_;
    /**
     * <pre>
     * Use this option to change the package of ruby generated classes. Default
     * is empty. When this option is not set, the package name will be used for
     * determining the ruby package.
     * </pre>
     *
     * <code>optional string ruby_package = 45;</code>
     */
    public boolean hasRubyPackage() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    /**
     * <pre>
     * Use this option to change the package of ruby generated classes. Default
     * is empty. When this option is not set, the package name will be used for
     * determining the ruby package.
     * </pre>
     *
     * <code>optional string ruby_package = 45;</code>
     */
    public java.lang.String getRubyPackage() {
      return rubyPackage_;
    }
    /**
     * <pre>
     * Use this option to change the package of ruby generated classes. Default
     * is empty. When this option is not set, the package name will be used for
     * determining the ruby package.
     * </pre>
     *
     * <code>optional string ruby_package = 45;</code>
     */
    public com.google.protobuf.ByteString
        getRubyPackageBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(rubyPackage_);
    }
    /**
     * <pre>
     * Use this option to change the package of ruby generated classes. Default
     * is empty. When this option is not set, the package name will be used for
     * determining the ruby package.
     * </pre>
     *
     * <code>optional string ruby_package = 45;</code>
     */
    private void setRubyPackage(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00080000;
      rubyPackage_ = value;
    }
    /**
     * <pre>
     * Use this option to change the package of ruby generated classes. Default
     * is empty. When this option is not set, the package name will be used for
     * determining the ruby package.
     * </pre>
     *
     * <code>optional string ruby_package = 45;</code>
     */
    private void clearRubyPackage() {
      bitField0_ = (bitField0_ & ~0x00080000);
      rubyPackage_ = getDefaultInstance().getRubyPackage();
    }
    /**
     * <pre>
     * Use this option to change the package of ruby generated classes. Default
     * is empty. When this option is not set, the package name will be used for
     * determining the ruby package.
     * </pre>
     *
     * <code>optional string ruby_package = 45;</code>
     */
    private void setRubyPackageBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00080000;
      rubyPackage_ = value.toStringUtf8();
    }

    public static final int UNINTERPRETED_OPTION_FIELD_NUMBER = 999;
    private com.google.protobuf.Internal.ProtobufList<com.google.protobuf.DescriptorProtos.UninterpretedOption> uninterpretedOption_;
    /**
     * <pre>
     * The parser stores options it doesn't recognize here.
     * See the documentation for the "Options" section above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    public java.util.List<com.google.protobuf.DescriptorProtos.UninterpretedOption> getUninterpretedOptionList() {
      return uninterpretedOption_;
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here.
     * See the documentation for the "Options" section above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    public java.util.List<? extends com.google.protobuf.DescriptorProtos.UninterpretedOptionOrBuilder>
        getUninterpretedOptionOrBuilderList() {
      return uninterpretedOption_;
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here.
     * See the documentation for the "Options" section above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    public int getUninterpretedOptionCount() {
      return uninterpretedOption_.size();
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here.
     * See the documentation for the "Options" section above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    public com.google.protobuf.DescriptorProtos.UninterpretedOption getUninterpretedOption(int index) {
      return uninterpretedOption_.get(index);
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here.
     * See the documentation for the "Options" section above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    public com.google.protobuf.DescriptorProtos.UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(
        int index) {
      return uninterpretedOption_.get(index);
    }
    private void ensureUninterpretedOptionIsMutable() {
      if (!uninterpretedOption_.isModifiable()) {
        uninterpretedOption_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(uninterpretedOption_);
       }
    }

    /**
     * <pre>
     * The parser stores options it doesn't recognize here.
     * See the documentation for the "Options" section above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    private void setUninterpretedOption(
        int index, com.google.protobuf.DescriptorProtos.UninterpretedOption value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureUninterpretedOptionIsMutable();
      uninterpretedOption_.set(index, value);
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here.
     * See the documentation for the "Options" section above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    private void setUninterpretedOption(
        int index, com.google.protobuf.DescriptorProtos.UninterpretedOption.Builder builderForValue) {
      ensureUninterpretedOptionIsMutable();
      uninterpretedOption_.set(index, builderForValue.build());
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here.
     * See the documentation for the "Options" section above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    private void addUninterpretedOption(com.google.protobuf.DescriptorProtos.UninterpretedOption value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureUninterpretedOptionIsMutable();
      uninterpretedOption_.add(value);
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here.
     * See the documentation for the "Options" section above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    private void addUninterpretedOption(
        int index, com.google.protobuf.DescriptorProtos.UninterpretedOption value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureUninterpretedOptionIsMutable();
      uninterpretedOption_.add(index, value);
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here.
     * See the documentation for the "Options" section above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    private void addUninterpretedOption(
        com.google.protobuf.DescriptorProtos.UninterpretedOption.Builder builderForValue) {
      ensureUninterpretedOptionIsMutable();
      uninterpretedOption_.add(builderForValue.build());
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here.
     * See the documentation for the "Options" section above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    private void addUninterpretedOption(
        int index, com.google.protobuf.DescriptorProtos.UninterpretedOption.Builder builderForValue) {
      ensureUninterpretedOptionIsMutable();
      uninterpretedOption_.add(index, builderForValue.build());
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here.
     * See the documentation for the "Options" section above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    private void addAllUninterpretedOption(
        java.lang.Iterable<? extends com.google.protobuf.DescriptorProtos.UninterpretedOption> values) {
      ensureUninterpretedOptionIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, uninterpretedOption_);
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here.
     * See the documentation for the "Options" section above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    private void clearUninterpretedOption() {
      uninterpretedOption_ = emptyProtobufList();
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here.
     * See the documentation for the "Options" section above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    private void removeUninterpretedOption(int index) {
      ensureUninterpretedOptionIsMutable();
      uninterpretedOption_.remove(index);
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      com.google.protobuf.GeneratedMessageLite
        .ExtendableMessage<com.google.protobuf.DescriptorProtos.FileOptions, com.google.protobuf.DescriptorProtos.FileOptions.Builder>
          .ExtensionWriter extensionWriter =
            newExtensionWriter();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeString(1, getJavaPackage());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeString(8, getJavaOuterClassname());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeEnum(9, optimizeFor_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(10, javaMultipleFiles_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeString(11, getGoPackage());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBool(16, ccGenericServices_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeBool(17, javaGenericServices_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeBool(18, pyGenericServices_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(20, javaGenerateEqualsAndHash_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeBool(23, deprecated_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBool(27, javaStringCheckUtf8_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeBool(31, ccEnableArenas_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeString(36, getObjcClassPrefix());
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeString(37, getCsharpNamespace());
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeString(39, getSwiftPrefix());
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeString(40, getPhpClassPrefix());
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeString(41, getPhpNamespace());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeBool(42, phpGenericServices_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeString(44, getPhpMetadataNamespace());
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeString(45, getRubyPackage());
      }
      for (int i = 0; i < uninterpretedOption_.size(); i++) {
        output.writeMessage(999, uninterpretedOption_.get(i));
      }
      extensionWriter.writeUntil(536870912, output);
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getJavaPackage());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(8, getJavaOuterClassname());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(9, optimizeFor_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(10, javaMultipleFiles_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(11, getGoPackage());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(16, ccGenericServices_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(17, javaGenericServices_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(18, pyGenericServices_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(20, javaGenerateEqualsAndHash_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(23, deprecated_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(27, javaStringCheckUtf8_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(31, ccEnableArenas_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(36, getObjcClassPrefix());
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(37, getCsharpNamespace());
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(39, getSwiftPrefix());
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(40, getPhpClassPrefix());
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(41, getPhpNamespace());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(42, phpGenericServices_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(44, getPhpMetadataNamespace());
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(45, getRubyPackage());
      }
      for (int i = 0; i < uninterpretedOption_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(999, uninterpretedOption_.get(i));
      }
      size += extensionsSerializedSize();
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.google.protobuf.DescriptorProtos.FileOptions parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.google.protobuf.DescriptorProtos.FileOptions parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.google.protobuf.DescriptorProtos.FileOptions parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.google.protobuf.DescriptorProtos.FileOptions parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.google.protobuf.DescriptorProtos.FileOptions parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.google.protobuf.DescriptorProtos.FileOptions parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.google.protobuf.DescriptorProtos.FileOptions parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.google.protobuf.DescriptorProtos.FileOptions parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.google.protobuf.DescriptorProtos.FileOptions parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.google.protobuf.DescriptorProtos.FileOptions parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.protobuf.DescriptorProtos.FileOptions prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code google.protobuf.FileOptions}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.ExtendableBuilder<
          com.google.protobuf.DescriptorProtos.FileOptions, Builder> implements
        // @@protoc_insertion_point(builder_implements:google.protobuf.FileOptions)
        com.google.protobuf.DescriptorProtos.FileOptionsOrBuilder {
      // Construct using com.google.protobuf.DescriptorProtos.FileOptions.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Sets the Java package where classes generated from this .proto will be
       * placed.  By default, the proto package is used, but this is often
       * inappropriate because proto packages do not normally start with backwards
       * domain names.
       * </pre>
       *
       * <code>optional string java_package = 1;</code>
       */
      public boolean hasJavaPackage() {
        return instance.hasJavaPackage();
      }
      /**
       * <pre>
       * Sets the Java package where classes generated from this .proto will be
       * placed.  By default, the proto package is used, but this is often
       * inappropriate because proto packages do not normally start with backwards
       * domain names.
       * </pre>
       *
       * <code>optional string java_package = 1;</code>
       */
      public java.lang.String getJavaPackage() {
        return instance.getJavaPackage();
      }
      /**
       * <pre>
       * Sets the Java package where classes generated from this .proto will be
       * placed.  By default, the proto package is used, but this is often
       * inappropriate because proto packages do not normally start with backwards
       * domain names.
       * </pre>
       *
       * <code>optional string java_package = 1;</code>
       */
      public com.google.protobuf.ByteString
          getJavaPackageBytes() {
        return instance.getJavaPackageBytes();
      }
      /**
       * <pre>
       * Sets the Java package where classes generated from this .proto will be
       * placed.  By default, the proto package is used, but this is often
       * inappropriate because proto packages do not normally start with backwards
       * domain names.
       * </pre>
       *
       * <code>optional string java_package = 1;</code>
       */
      public Builder setJavaPackage(
          java.lang.String value) {
        copyOnWrite();
        instance.setJavaPackage(value);
        return this;
      }
      /**
       * <pre>
       * Sets the Java package where classes generated from this .proto will be
       * placed.  By default, the proto package is used, but this is often
       * inappropriate because proto packages do not normally start with backwards
       * domain names.
       * </pre>
       *
       * <code>optional string java_package = 1;</code>
       */
      public Builder clearJavaPackage() {
        copyOnWrite();
        instance.clearJavaPackage();
        return this;
      }
      /**
       * <pre>
       * Sets the Java package where classes generated from this .proto will be
       * placed.  By default, the proto package is used, but this is often
       * inappropriate because proto packages do not normally start with backwards
       * domain names.
       * </pre>
       *
       * <code>optional string java_package = 1;</code>
       */
      public Builder setJavaPackageBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setJavaPackageBytes(value);
        return this;
      }

      /**
       * <pre>
       * If set, all the classes from the .proto file are wrapped in a single
       * outer class with the given name.  This applies to both Proto1
       * (equivalent to the old "--one_java_file" option) and Proto2 (where
       * a .proto always translates to a single class, but you may want to
       * explicitly choose the class name).
       * </pre>
       *
       * <code>optional string java_outer_classname = 8;</code>
       */
      public boolean hasJavaOuterClassname() {
        return instance.hasJavaOuterClassname();
      }
      /**
       * <pre>
       * If set, all the classes from the .proto file are wrapped in a single
       * outer class with the given name.  This applies to both Proto1
       * (equivalent to the old "--one_java_file" option) and Proto2 (where
       * a .proto always translates to a single class, but you may want to
       * explicitly choose the class name).
       * </pre>
       *
       * <code>optional string java_outer_classname = 8;</code>
       */
      public java.lang.String getJavaOuterClassname() {
        return instance.getJavaOuterClassname();
      }
      /**
       * <pre>
       * If set, all the classes from the .proto file are wrapped in a single
       * outer class with the given name.  This applies to both Proto1
       * (equivalent to the old "--one_java_file" option) and Proto2 (where
       * a .proto always translates to a single class, but you may want to
       * explicitly choose the class name).
       * </pre>
       *
       * <code>optional string java_outer_classname = 8;</code>
       */
      public com.google.protobuf.ByteString
          getJavaOuterClassnameBytes() {
        return instance.getJavaOuterClassnameBytes();
      }
      /**
       * <pre>
       * If set, all the classes from the .proto file are wrapped in a single
       * outer class with the given name.  This applies to both Proto1
       * (equivalent to the old "--one_java_file" option) and Proto2 (where
       * a .proto always translates to a single class, but you may want to
       * explicitly choose the class name).
       * </pre>
       *
       * <code>optional string java_outer_classname = 8;</code>
       */
      public Builder setJavaOuterClassname(
          java.lang.String value) {
        copyOnWrite();
        instance.setJavaOuterClassname(value);
        return this;
      }
      /**
       * <pre>
       * If set, all the classes from the .proto file are wrapped in a single
       * outer class with the given name.  This applies to both Proto1
       * (equivalent to the old "--one_java_file" option) and Proto2 (where
       * a .proto always translates to a single class, but you may want to
       * explicitly choose the class name).
       * </pre>
       *
       * <code>optional string java_outer_classname = 8;</code>
       */
      public Builder clearJavaOuterClassname() {
        copyOnWrite();
        instance.clearJavaOuterClassname();
        return this;
      }
      /**
       * <pre>
       * If set, all the classes from the .proto file are wrapped in a single
       * outer class with the given name.  This applies to both Proto1
       * (equivalent to the old "--one_java_file" option) and Proto2 (where
       * a .proto always translates to a single class, but you may want to
       * explicitly choose the class name).
       * </pre>
       *
       * <code>optional string java_outer_classname = 8;</code>
       */
      public Builder setJavaOuterClassnameBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setJavaOuterClassnameBytes(value);
        return this;
      }

      /**
       * <pre>
       * If set true, then the Java code generator will generate a separate .java
       * file for each top-level message, enum, and service defined in the .proto
       * file.  Thus, these types will *not* be nested inside the outer class
       * named by java_outer_classname.  However, the outer class will still be
       * generated to contain the file's getDescriptor() method as well as any
       * top-level extensions defined in the file.
       * </pre>
       *
       * <code>optional bool java_multiple_files = 10 [default = false];</code>
       */
      public boolean hasJavaMultipleFiles() {
        return instance.hasJavaMultipleFiles();
      }
      /**
       * <pre>
       * If set true, then the Java code generator will generate a separate .java
       * file for each top-level message, enum, and service defined in the .proto
       * file.  Thus, these types will *not* be nested inside the outer class
       * named by java_outer_classname.  However, the outer class will still be
       * generated to contain the file's getDescriptor() method as well as any
       * top-level extensions defined in the file.
       * </pre>
       *
       * <code>optional bool java_multiple_files = 10 [default = false];</code>
       */
      public boolean getJavaMultipleFiles() {
        return instance.getJavaMultipleFiles();
      }
      /**
       * <pre>
       * If set true, then the Java code generator will generate a separate .java
       * file for each top-level message, enum, and service defined in the .proto
       * file.  Thus, these types will *not* be nested inside the outer class
       * named by java_outer_classname.  However, the outer class will still be
       * generated to contain the file's getDescriptor() method as well as any
       * top-level extensions defined in the file.
       * </pre>
       *
       * <code>optional bool java_multiple_files = 10 [default = false];</code>
       */
      public Builder setJavaMultipleFiles(boolean value) {
        copyOnWrite();
        instance.setJavaMultipleFiles(value);
        return this;
      }
      /**
       * <pre>
       * If set true, then the Java code generator will generate a separate .java
       * file for each top-level message, enum, and service defined in the .proto
       * file.  Thus, these types will *not* be nested inside the outer class
       * named by java_outer_classname.  However, the outer class will still be
       * generated to contain the file's getDescriptor() method as well as any
       * top-level extensions defined in the file.
       * </pre>
       *
       * <code>optional bool java_multiple_files = 10 [default = false];</code>
       */
      public Builder clearJavaMultipleFiles() {
        copyOnWrite();
        instance.clearJavaMultipleFiles();
        return this;
      }

      /**
       * <pre>
       * This option does nothing.
       * </pre>
       *
       * <code>optional bool java_generate_equals_and_hash = 20 [deprecated = true];</code>
       */
      @java.lang.Deprecated public boolean hasJavaGenerateEqualsAndHash() {
        return instance.hasJavaGenerateEqualsAndHash();
      }
      /**
       * <pre>
       * This option does nothing.
       * </pre>
       *
       * <code>optional bool java_generate_equals_and_hash = 20 [deprecated = true];</code>
       */
      @java.lang.Deprecated public boolean getJavaGenerateEqualsAndHash() {
        return instance.getJavaGenerateEqualsAndHash();
      }
      /**
       * <pre>
       * This option does nothing.
       * </pre>
       *
       * <code>optional bool java_generate_equals_and_hash = 20 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder setJavaGenerateEqualsAndHash(boolean value) {
        copyOnWrite();
        instance.setJavaGenerateEqualsAndHash(value);
        return this;
      }
      /**
       * <pre>
       * This option does nothing.
       * </pre>
       *
       * <code>optional bool java_generate_equals_and_hash = 20 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder clearJavaGenerateEqualsAndHash() {
        copyOnWrite();
        instance.clearJavaGenerateEqualsAndHash();
        return this;
      }

      /**
       * <pre>
       * If set true, then the Java2 code generator will generate code that
       * throws an exception whenever an attempt is made to assign a non-UTF-8
       * byte sequence to a string field.
       * Message reflection will do the same.
       * However, an extension field still accepts non-UTF-8 byte sequences.
       * This option has no effect on when used with the lite runtime.
       * </pre>
       *
       * <code>optional bool java_string_check_utf8 = 27 [default = false];</code>
       */
      public boolean hasJavaStringCheckUtf8() {
        return instance.hasJavaStringCheckUtf8();
      }
      /**
       * <pre>
       * If set true, then the Java2 code generator will generate code that
       * throws an exception whenever an attempt is made to assign a non-UTF-8
       * byte sequence to a string field.
       * Message reflection will do the same.
       * However, an extension field still accepts non-UTF-8 byte sequences.
       * This option has no effect on when used with the lite runtime.
       * </pre>
       *
       * <code>optional bool java_string_check_utf8 = 27 [default = false];</code>
       */
      public boolean getJavaStringCheckUtf8() {
        return instance.getJavaStringCheckUtf8();
      }
      /**
       * <pre>
       * If set true, then the Java2 code generator will generate code that
       * throws an exception whenever an attempt is made to assign a non-UTF-8
       * byte sequence to a string field.
       * Message reflection will do the same.
       * However, an extension field still accepts non-UTF-8 byte sequences.
       * This option has no effect on when used with the lite runtime.
       * </pre>
       *
       * <code>optional bool java_string_check_utf8 = 27 [default = false];</code>
       */
      public Builder setJavaStringCheckUtf8(boolean value) {
        copyOnWrite();
        instance.setJavaStringCheckUtf8(value);
        return this;
      }
      /**
       * <pre>
       * If set true, then the Java2 code generator will generate code that
       * throws an exception whenever an attempt is made to assign a non-UTF-8
       * byte sequence to a string field.
       * Message reflection will do the same.
       * However, an extension field still accepts non-UTF-8 byte sequences.
       * This option has no effect on when used with the lite runtime.
       * </pre>
       *
       * <code>optional bool java_string_check_utf8 = 27 [default = false];</code>
       */
      public Builder clearJavaStringCheckUtf8() {
        copyOnWrite();
        instance.clearJavaStringCheckUtf8();
        return this;
      }

      /**
       * <code>optional .google.protobuf.FileOptions.OptimizeMode optimize_for = 9 [default = SPEED];</code>
       */
      public boolean hasOptimizeFor() {
        return instance.hasOptimizeFor();
      }
      /**
       * <code>optional .google.protobuf.FileOptions.OptimizeMode optimize_for = 9 [default = SPEED];</code>
       */
      public com.google.protobuf.DescriptorProtos.FileOptions.OptimizeMode getOptimizeFor() {
        return instance.getOptimizeFor();
      }
      /**
       * <code>optional .google.protobuf.FileOptions.OptimizeMode optimize_for = 9 [default = SPEED];</code>
       */
      public Builder setOptimizeFor(com.google.protobuf.DescriptorProtos.FileOptions.OptimizeMode value) {
        copyOnWrite();
        instance.setOptimizeFor(value);
        return this;
      }
      /**
       * <code>optional .google.protobuf.FileOptions.OptimizeMode optimize_for = 9 [default = SPEED];</code>
       */
      public Builder clearOptimizeFor() {
        copyOnWrite();
        instance.clearOptimizeFor();
        return this;
      }

      /**
       * <pre>
       * Sets the Go package where structs generated from this .proto will be
       * placed. If omitted, the Go package will be derived from the following:
       *   - The basename of the package import path, if provided.
       *   - Otherwise, the package statement in the .proto file, if present.
       *   - Otherwise, the basename of the .proto file, without extension.
       * </pre>
       *
       * <code>optional string go_package = 11;</code>
       */
      public boolean hasGoPackage() {
        return instance.hasGoPackage();
      }
      /**
       * <pre>
       * Sets the Go package where structs generated from this .proto will be
       * placed. If omitted, the Go package will be derived from the following:
       *   - The basename of the package import path, if provided.
       *   - Otherwise, the package statement in the .proto file, if present.
       *   - Otherwise, the basename of the .proto file, without extension.
       * </pre>
       *
       * <code>optional string go_package = 11;</code>
       */
      public java.lang.String getGoPackage() {
        return instance.getGoPackage();
      }
      /**
       * <pre>
       * Sets the Go package where structs generated from this .proto will be
       * placed. If omitted, the Go package will be derived from the following:
       *   - The basename of the package import path, if provided.
       *   - Otherwise, the package statement in the .proto file, if present.
       *   - Otherwise, the basename of the .proto file, without extension.
       * </pre>
       *
       * <code>optional string go_package = 11;</code>
       */
      public com.google.protobuf.ByteString
          getGoPackageBytes() {
        return instance.getGoPackageBytes();
      }
      /**
       * <pre>
       * Sets the Go package where structs generated from this .proto will be
       * placed. If omitted, the Go package will be derived from the following:
       *   - The basename of the package import path, if provided.
       *   - Otherwise, the package statement in the .proto file, if present.
       *   - Otherwise, the basename of the .proto file, without extension.
       * </pre>
       *
       * <code>optional string go_package = 11;</code>
       */
      public Builder setGoPackage(
          java.lang.String value) {
        copyOnWrite();
        instance.setGoPackage(value);
        return this;
      }
      /**
       * <pre>
       * Sets the Go package where structs generated from this .proto will be
       * placed. If omitted, the Go package will be derived from the following:
       *   - The basename of the package import path, if provided.
       *   - Otherwise, the package statement in the .proto file, if present.
       *   - Otherwise, the basename of the .proto file, without extension.
       * </pre>
       *
       * <code>optional string go_package = 11;</code>
       */
      public Builder clearGoPackage() {
        copyOnWrite();
        instance.clearGoPackage();
        return this;
      }
      /**
       * <pre>
       * Sets the Go package where structs generated from this .proto will be
       * placed. If omitted, the Go package will be derived from the following:
       *   - The basename of the package import path, if provided.
       *   - Otherwise, the package statement in the .proto file, if present.
       *   - Otherwise, the basename of the .proto file, without extension.
       * </pre>
       *
       * <code>optional string go_package = 11;</code>
       */
      public Builder setGoPackageBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setGoPackageBytes(value);
        return this;
      }

      /**
       * <pre>
       * Should generic services be generated in each language?  "Generic" services
       * are not specific to any particular RPC system.  They are generated by the
       * main code generators in each language (without additional plugins).
       * Generic services were the only kind of service generation supported by
       * early versions of google.protobuf.
       * Generic services are now considered deprecated in favor of using plugins
       * that generate code specific to your particular RPC system.  Therefore,
       * these default to false.  Old code which depends on generic services should
       * explicitly set them to true.
       * </pre>
       *
       * <code>optional bool cc_generic_services = 16 [default = false];</code>
       */
      public boolean hasCcGenericServices() {
        return instance.hasCcGenericServices();
      }
      /**
       * <pre>
       * Should generic services be generated in each language?  "Generic" services
       * are not specific to any particular RPC system.  They are generated by the
       * main code generators in each language (without additional plugins).
       * Generic services were the only kind of service generation supported by
       * early versions of google.protobuf.
       * Generic services are now considered deprecated in favor of using plugins
       * that generate code specific to your particular RPC system.  Therefore,
       * these default to false.  Old code which depends on generic services should
       * explicitly set them to true.
       * </pre>
       *
       * <code>optional bool cc_generic_services = 16 [default = false];</code>
       */
      public boolean getCcGenericServices() {
        return instance.getCcGenericServices();
      }
      /**
       * <pre>
       * Should generic services be generated in each language?  "Generic" services
       * are not specific to any particular RPC system.  They are generated by the
       * main code generators in each language (without additional plugins).
       * Generic services were the only kind of service generation supported by
       * early versions of google.protobuf.
       * Generic services are now considered deprecated in favor of using plugins
       * that generate code specific to your particular RPC system.  Therefore,
       * these default to false.  Old code which depends on generic services should
       * explicitly set them to true.
       * </pre>
       *
       * <code>optional bool cc_generic_services = 16 [default = false];</code>
       */
      public Builder setCcGenericServices(boolean value) {
        copyOnWrite();
        instance.setCcGenericServices(value);
        return this;
      }
      /**
       * <pre>
       * Should generic services be generated in each language?  "Generic" services
       * are not specific to any particular RPC system.  They are generated by the
       * main code generators in each language (without additional plugins).
       * Generic services were the only kind of service generation supported by
       * early versions of google.protobuf.
       * Generic services are now considered deprecated in favor of using plugins
       * that generate code specific to your particular RPC system.  Therefore,
       * these default to false.  Old code which depends on generic services should
       * explicitly set them to true.
       * </pre>
       *
       * <code>optional bool cc_generic_services = 16 [default = false];</code>
       */
      public Builder clearCcGenericServices() {
        copyOnWrite();
        instance.clearCcGenericServices();
        return this;
      }

      /**
       * <code>optional bool java_generic_services = 17 [default = false];</code>
       */
      public boolean hasJavaGenericServices() {
        return instance.hasJavaGenericServices();
      }
      /**
       * <code>optional bool java_generic_services = 17 [default = false];</code>
       */
      public boolean getJavaGenericServices() {
        return instance.getJavaGenericServices();
      }
      /**
       * <code>optional bool java_generic_services = 17 [default = false];</code>
       */
      public Builder setJavaGenericServices(boolean value) {
        copyOnWrite();
        instance.setJavaGenericServices(value);
        return this;
      }
      /**
       * <code>optional bool java_generic_services = 17 [default = false];</code>
       */
      public Builder clearJavaGenericServices() {
        copyOnWrite();
        instance.clearJavaGenericServices();
        return this;
      }

      /**
       * <code>optional bool py_generic_services = 18 [default = false];</code>
       */
      public boolean hasPyGenericServices() {
        return instance.hasPyGenericServices();
      }
      /**
       * <code>optional bool py_generic_services = 18 [default = false];</code>
       */
      public boolean getPyGenericServices() {
        return instance.getPyGenericServices();
      }
      /**
       * <code>optional bool py_generic_services = 18 [default = false];</code>
       */
      public Builder setPyGenericServices(boolean value) {
        copyOnWrite();
        instance.setPyGenericServices(value);
        return this;
      }
      /**
       * <code>optional bool py_generic_services = 18 [default = false];</code>
       */
      public Builder clearPyGenericServices() {
        copyOnWrite();
        instance.clearPyGenericServices();
        return this;
      }

      /**
       * <code>optional bool php_generic_services = 42 [default = false];</code>
       */
      public boolean hasPhpGenericServices() {
        return instance.hasPhpGenericServices();
      }
      /**
       * <code>optional bool php_generic_services = 42 [default = false];</code>
       */
      public boolean getPhpGenericServices() {
        return instance.getPhpGenericServices();
      }
      /**
       * <code>optional bool php_generic_services = 42 [default = false];</code>
       */
      public Builder setPhpGenericServices(boolean value) {
        copyOnWrite();
        instance.setPhpGenericServices(value);
        return this;
      }
      /**
       * <code>optional bool php_generic_services = 42 [default = false];</code>
       */
      public Builder clearPhpGenericServices() {
        copyOnWrite();
        instance.clearPhpGenericServices();
        return this;
      }

      /**
       * <pre>
       * Is this file deprecated?
       * Depending on the target platform, this can emit Deprecated annotations
       * for everything in the file, or it will be completely ignored; in the very
       * least, this is a formalization for deprecating files.
       * </pre>
       *
       * <code>optional bool deprecated = 23 [default = false];</code>
       */
      public boolean hasDeprecated() {
        return instance.hasDeprecated();
      }
      /**
       * <pre>
       * Is this file deprecated?
       * Depending on the target platform, this can emit Deprecated annotations
       * for everything in the file, or it will be completely ignored; in the very
       * least, this is a formalization for deprecating files.
       * </pre>
       *
       * <code>optional bool deprecated = 23 [default = false];</code>
       */
      public boolean getDeprecated() {
        return instance.getDeprecated();
      }
      /**
       * <pre>
       * Is this file deprecated?
       * Depending on the target platform, this can emit Deprecated annotations
       * for everything in the file, or it will be completely ignored; in the very
       * least, this is a formalization for deprecating files.
       * </pre>
       *
       * <code>optional bool deprecated = 23 [default = false];</code>
       */
      public Builder setDeprecated(boolean value) {
        copyOnWrite();
        instance.setDeprecated(value);
        return this;
      }
      /**
       * <pre>
       * Is this file deprecated?
       * Depending on the target platform, this can emit Deprecated annotations
       * for everything in the file, or it will be completely ignored; in the very
       * least, this is a formalization for deprecating files.
       * </pre>
       *
       * <code>optional bool deprecated = 23 [default = false];</code>
       */
      public Builder clearDeprecated() {
        copyOnWrite();
        instance.clearDeprecated();
        return this;
      }

      /**
       * <pre>
       * Enables the use of arenas for the proto messages in this file. This applies
       * only to generated classes for C++.
       * </pre>
       *
       * <code>optional bool cc_enable_arenas = 31 [default = false];</code>
       */
      public boolean hasCcEnableArenas() {
        return instance.hasCcEnableArenas();
      }
      /**
       * <pre>
       * Enables the use of arenas for the proto messages in this file. This applies
       * only to generated classes for C++.
       * </pre>
       *
       * <code>optional bool cc_enable_arenas = 31 [default = false];</code>
       */
      public boolean getCcEnableArenas() {
        return instance.getCcEnableArenas();
      }
      /**
       * <pre>
       * Enables the use of arenas for the proto messages in this file. This applies
       * only to generated classes for C++.
       * </pre>
       *
       * <code>optional bool cc_enable_arenas = 31 [default = false];</code>
       */
      public Builder setCcEnableArenas(boolean value) {
        copyOnWrite();
        instance.setCcEnableArenas(value);
        return this;
      }
      /**
       * <pre>
       * Enables the use of arenas for the proto messages in this file. This applies
       * only to generated classes for C++.
       * </pre>
       *
       * <code>optional bool cc_enable_arenas = 31 [default = false];</code>
       */
      public Builder clearCcEnableArenas() {
        copyOnWrite();
        instance.clearCcEnableArenas();
        return this;
      }

      /**
       * <pre>
       * Sets the objective c class prefix which is prepended to all objective c
       * generated classes from this .proto. There is no default.
       * </pre>
       *
       * <code>optional string objc_class_prefix = 36;</code>
       */
      public boolean hasObjcClassPrefix() {
        return instance.hasObjcClassPrefix();
      }
      /**
       * <pre>
       * Sets the objective c class prefix which is prepended to all objective c
       * generated classes from this .proto. There is no default.
       * </pre>
       *
       * <code>optional string objc_class_prefix = 36;</code>
       */
      public java.lang.String getObjcClassPrefix() {
        return instance.getObjcClassPrefix();
      }
      /**
       * <pre>
       * Sets the objective c class prefix which is prepended to all objective c
       * generated classes from this .proto. There is no default.
       * </pre>
       *
       * <code>optional string objc_class_prefix = 36;</code>
       */
      public com.google.protobuf.ByteString
          getObjcClassPrefixBytes() {
        return instance.getObjcClassPrefixBytes();
      }
      /**
       * <pre>
       * Sets the objective c class prefix which is prepended to all objective c
       * generated classes from this .proto. There is no default.
       * </pre>
       *
       * <code>optional string objc_class_prefix = 36;</code>
       */
      public Builder setObjcClassPrefix(
          java.lang.String value) {
        copyOnWrite();
        instance.setObjcClassPrefix(value);
        return this;
      }
      /**
       * <pre>
       * Sets the objective c class prefix which is prepended to all objective c
       * generated classes from this .proto. There is no default.
       * </pre>
       *
       * <code>optional string objc_class_prefix = 36;</code>
       */
      public Builder clearObjcClassPrefix() {
        copyOnWrite();
        instance.clearObjcClassPrefix();
        return this;
      }
      /**
       * <pre>
       * Sets the objective c class prefix which is prepended to all objective c
       * generated classes from this .proto. There is no default.
       * </pre>
       *
       * <code>optional string objc_class_prefix = 36;</code>
       */
      public Builder setObjcClassPrefixBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setObjcClassPrefixBytes(value);
        return this;
      }

      /**
       * <pre>
       * Namespace for generated classes; defaults to the package.
       * </pre>
       *
       * <code>optional string csharp_namespace = 37;</code>
       */
      public boolean hasCsharpNamespace() {
        return instance.hasCsharpNamespace();
      }
      /**
       * <pre>
       * Namespace for generated classes; defaults to the package.
       * </pre>
       *
       * <code>optional string csharp_namespace = 37;</code>
       */
      public java.lang.String getCsharpNamespace() {
        return instance.getCsharpNamespace();
      }
      /**
       * <pre>
       * Namespace for generated classes; defaults to the package.
       * </pre>
       *
       * <code>optional string csharp_namespace = 37;</code>
       */
      public com.google.protobuf.ByteString
          getCsharpNamespaceBytes() {
        return instance.getCsharpNamespaceBytes();
      }
      /**
       * <pre>
       * Namespace for generated classes; defaults to the package.
       * </pre>
       *
       * <code>optional string csharp_namespace = 37;</code>
       */
      public Builder setCsharpNamespace(
          java.lang.String value) {
        copyOnWrite();
        instance.setCsharpNamespace(value);
        return this;
      }
      /**
       * <pre>
       * Namespace for generated classes; defaults to the package.
       * </pre>
       *
       * <code>optional string csharp_namespace = 37;</code>
       */
      public Builder clearCsharpNamespace() {
        copyOnWrite();
        instance.clearCsharpNamespace();
        return this;
      }
      /**
       * <pre>
       * Namespace for generated classes; defaults to the package.
       * </pre>
       *
       * <code>optional string csharp_namespace = 37;</code>
       */
      public Builder setCsharpNamespaceBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setCsharpNamespaceBytes(value);
        return this;
      }

      /**
       * <pre>
       * By default Swift generators will take the proto package and CamelCase it
       * replacing '.' with underscore and use that to prefix the types/symbols
       * defined. When this options is provided, they will use this value instead
       * to prefix the types/symbols defined.
       * </pre>
       *
       * <code>optional string swift_prefix = 39;</code>
       */
      public boolean hasSwiftPrefix() {
        return instance.hasSwiftPrefix();
      }
      /**
       * <pre>
       * By default Swift generators will take the proto package and CamelCase it
       * replacing '.' with underscore and use that to prefix the types/symbols
       * defined. When this options is provided, they will use this value instead
       * to prefix the types/symbols defined.
       * </pre>
       *
       * <code>optional string swift_prefix = 39;</code>
       */
      public java.lang.String getSwiftPrefix() {
        return instance.getSwiftPrefix();
      }
      /**
       * <pre>
       * By default Swift generators will take the proto package and CamelCase it
       * replacing '.' with underscore and use that to prefix the types/symbols
       * defined. When this options is provided, they will use this value instead
       * to prefix the types/symbols defined.
       * </pre>
       *
       * <code>optional string swift_prefix = 39;</code>
       */
      public com.google.protobuf.ByteString
          getSwiftPrefixBytes() {
        return instance.getSwiftPrefixBytes();
      }
      /**
       * <pre>
       * By default Swift generators will take the proto package and CamelCase it
       * replacing '.' with underscore and use that to prefix the types/symbols
       * defined. When this options is provided, they will use this value instead
       * to prefix the types/symbols defined.
       * </pre>
       *
       * <code>optional string swift_prefix = 39;</code>
       */
      public Builder setSwiftPrefix(
          java.lang.String value) {
        copyOnWrite();
        instance.setSwiftPrefix(value);
        return this;
      }
      /**
       * <pre>
       * By default Swift generators will take the proto package and CamelCase it
       * replacing '.' with underscore and use that to prefix the types/symbols
       * defined. When this options is provided, they will use this value instead
       * to prefix the types/symbols defined.
       * </pre>
       *
       * <code>optional string swift_prefix = 39;</code>
       */
      public Builder clearSwiftPrefix() {
        copyOnWrite();
        instance.clearSwiftPrefix();
        return this;
      }
      /**
       * <pre>
       * By default Swift generators will take the proto package and CamelCase it
       * replacing '.' with underscore and use that to prefix the types/symbols
       * defined. When this options is provided, they will use this value instead
       * to prefix the types/symbols defined.
       * </pre>
       *
       * <code>optional string swift_prefix = 39;</code>
       */
      public Builder setSwiftPrefixBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setSwiftPrefixBytes(value);
        return this;
      }

      /**
       * <pre>
       * Sets the php class prefix which is prepended to all php generated classes
       * from this .proto. Default is empty.
       * </pre>
       *
       * <code>optional string php_class_prefix = 40;</code>
       */
      public boolean hasPhpClassPrefix() {
        return instance.hasPhpClassPrefix();
      }
      /**
       * <pre>
       * Sets the php class prefix which is prepended to all php generated classes
       * from this .proto. Default is empty.
       * </pre>
       *
       * <code>optional string php_class_prefix = 40;</code>
       */
      public java.lang.String getPhpClassPrefix() {
        return instance.getPhpClassPrefix();
      }
      /**
       * <pre>
       * Sets the php class prefix which is prepended to all php generated classes
       * from this .proto. Default is empty.
       * </pre>
       *
       * <code>optional string php_class_prefix = 40;</code>
       */
      public com.google.protobuf.ByteString
          getPhpClassPrefixBytes() {
        return instance.getPhpClassPrefixBytes();
      }
      /**
       * <pre>
       * Sets the php class prefix which is prepended to all php generated classes
       * from this .proto. Default is empty.
       * </pre>
       *
       * <code>optional string php_class_prefix = 40;</code>
       */
      public Builder setPhpClassPrefix(
          java.lang.String value) {
        copyOnWrite();
        instance.setPhpClassPrefix(value);
        return this;
      }
      /**
       * <pre>
       * Sets the php class prefix which is prepended to all php generated classes
       * from this .proto. Default is empty.
       * </pre>
       *
       * <code>optional string php_class_prefix = 40;</code>
       */
      public Builder clearPhpClassPrefix() {
        copyOnWrite();
        instance.clearPhpClassPrefix();
        return this;
      }
      /**
       * <pre>
       * Sets the php class prefix which is prepended to all php generated classes
       * from this .proto. Default is empty.
       * </pre>
       *
       * <code>optional string php_class_prefix = 40;</code>
       */
      public Builder setPhpClassPrefixBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setPhpClassPrefixBytes(value);
        return this;
      }

      /**
       * <pre>
       * Use this option to change the namespace of php generated classes. Default
       * is empty. When this option is empty, the package name will be used for
       * determining the namespace.
       * </pre>
       *
       * <code>optional string php_namespace = 41;</code>
       */
      public boolean hasPhpNamespace() {
        return instance.hasPhpNamespace();
      }
      /**
       * <pre>
       * Use this option to change the namespace of php generated classes. Default
       * is empty. When this option is empty, the package name will be used for
       * determining the namespace.
       * </pre>
       *
       * <code>optional string php_namespace = 41;</code>
       */
      public java.lang.String getPhpNamespace() {
        return instance.getPhpNamespace();
      }
      /**
       * <pre>
       * Use this option to change the namespace of php generated classes. Default
       * is empty. When this option is empty, the package name will be used for
       * determining the namespace.
       * </pre>
       *
       * <code>optional string php_namespace = 41;</code>
       */
      public com.google.protobuf.ByteString
          getPhpNamespaceBytes() {
        return instance.getPhpNamespaceBytes();
      }
      /**
       * <pre>
       * Use this option to change the namespace of php generated classes. Default
       * is empty. When this option is empty, the package name will be used for
       * determining the namespace.
       * </pre>
       *
       * <code>optional string php_namespace = 41;</code>
       */
      public Builder setPhpNamespace(
          java.lang.String value) {
        copyOnWrite();
        instance.setPhpNamespace(value);
        return this;
      }
      /**
       * <pre>
       * Use this option to change the namespace of php generated classes. Default
       * is empty. When this option is empty, the package name will be used for
       * determining the namespace.
       * </pre>
       *
       * <code>optional string php_namespace = 41;</code>
       */
      public Builder clearPhpNamespace() {
        copyOnWrite();
        instance.clearPhpNamespace();
        return this;
      }
      /**
       * <pre>
       * Use this option to change the namespace of php generated classes. Default
       * is empty. When this option is empty, the package name will be used for
       * determining the namespace.
       * </pre>
       *
       * <code>optional string php_namespace = 41;</code>
       */
      public Builder setPhpNamespaceBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setPhpNamespaceBytes(value);
        return this;
      }

      /**
       * <pre>
       * Use this option to change the namespace of php generated metadata classes.
       * Default is empty. When this option is empty, the proto file name will be used
       * for determining the namespace.
       * </pre>
       *
       * <code>optional string php_metadata_namespace = 44;</code>
       */
      public boolean hasPhpMetadataNamespace() {
        return instance.hasPhpMetadataNamespace();
      }
      /**
       * <pre>
       * Use this option to change the namespace of php generated metadata classes.
       * Default is empty. When this option is empty, the proto file name will be used
       * for determining the namespace.
       * </pre>
       *
       * <code>optional string php_metadata_namespace = 44;</code>
       */
      public java.lang.String getPhpMetadataNamespace() {
        return instance.getPhpMetadataNamespace();
      }
      /**
       * <pre>
       * Use this option to change the namespace of php generated metadata classes.
       * Default is empty. When this option is empty, the proto file name will be used
       * for determining the namespace.
       * </pre>
       *
       * <code>optional string php_metadata_namespace = 44;</code>
       */
      public com.google.protobuf.ByteString
          getPhpMetadataNamespaceBytes() {
        return instance.getPhpMetadataNamespaceBytes();
      }
      /**
       * <pre>
       * Use this option to change the namespace of php generated metadata classes.
       * Default is empty. When this option is empty, the proto file name will be used
       * for determining the namespace.
       * </pre>
       *
       * <code>optional string php_metadata_namespace = 44;</code>
       */
      public Builder setPhpMetadataNamespace(
          java.lang.String value) {
        copyOnWrite();
        instance.setPhpMetadataNamespace(value);
        return this;
      }
      /**
       * <pre>
       * Use this option to change the namespace of php generated metadata classes.
       * Default is empty. When this option is empty, the proto file name will be used
       * for determining the namespace.
       * </pre>
       *
       * <code>optional string php_metadata_namespace = 44;</code>
       */
      public Builder clearPhpMetadataNamespace() {
        copyOnWrite();
        instance.clearPhpMetadataNamespace();
        return this;
      }
      /**
       * <pre>
       * Use this option to change the namespace of php generated metadata classes.
       * Default is empty. When this option is empty, the proto file name will be used
       * for determining the namespace.
       * </pre>
       *
       * <code>optional string php_metadata_namespace = 44;</code>
       */
      public Builder setPhpMetadataNamespaceBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setPhpMetadataNamespaceBytes(value);
        return this;
      }

      /**
       * <pre>
       * Use this option to change the package of ruby generated classes. Default
       * is empty. When this option is not set, the package name will be used for
       * determining the ruby package.
       * </pre>
       *
       * <code>optional string ruby_package = 45;</code>
       */
      public boolean hasRubyPackage() {
        return instance.hasRubyPackage();
      }
      /**
       * <pre>
       * Use this option to change the package of ruby generated classes. Default
       * is empty. When this option is not set, the package name will be used for
       * determining the ruby package.
       * </pre>
       *
       * <code>optional string ruby_package = 45;</code>
       */
      public java.lang.String getRubyPackage() {
        return instance.getRubyPackage();
      }
      /**
       * <pre>
       * Use this option to change the package of ruby generated classes. Default
       * is empty. When this option is not set, the package name will be used for
       * determining the ruby package.
       * </pre>
       *
       * <code>optional string ruby_package = 45;</code>
       */
      public com.google.protobuf.ByteString
          getRubyPackageBytes() {
        return instance.getRubyPackageBytes();
      }
      /**
       * <pre>
       * Use this option to change the package of ruby generated classes. Default
       * is empty. When this option is not set, the package name will be used for
       * determining the ruby package.
       * </pre>
       *
       * <code>optional string ruby_package = 45;</code>
       */
      public Builder setRubyPackage(
          java.lang.String value) {
        copyOnWrite();
        instance.setRubyPackage(value);
        return this;
      }
      /**
       * <pre>
       * Use this option to change the package of ruby generated classes. Default
       * is empty. When this option is not set, the package name will be used for
       * determining the ruby package.
       * </pre>
       *
       * <code>optional string ruby_package = 45;</code>
       */
      public Builder clearRubyPackage() {
        copyOnWrite();
        instance.clearRubyPackage();
        return this;
      }
      /**
       * <pre>
       * Use this option to change the package of ruby generated classes. Default
       * is empty. When this option is not set, the package name will be used for
       * determining the ruby package.
       * </pre>
       *
       * <code>optional string ruby_package = 45;</code>
       */
      public Builder setRubyPackageBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setRubyPackageBytes(value);
        return this;
      }

      /**
       * <pre>
       * The parser stores options it doesn't recognize here.
       * See the documentation for the "Options" section above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public java.util.List<com.google.protobuf.DescriptorProtos.UninterpretedOption> getUninterpretedOptionList() {
        return java.util.Collections.unmodifiableList(
            instance.getUninterpretedOptionList());
      }
      /**
       * <pre>
       * The parser stores options it doesn't recognize here.
       * See the documentation for the "Options" section above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public int getUninterpretedOptionCount() {
        return instance.getUninterpretedOptionCount();
      }/**
       * <pre>
       * The parser stores options it doesn't recognize here.
       * See the documentation for the "Options" section above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public com.google.protobuf.DescriptorProtos.UninterpretedOption getUninterpretedOption(int index) {
        return instance.getUninterpretedOption(index);
      }
      /**
       * <pre>
       * The parser stores options it doesn't recognize here.
       * See the documentation for the "Options" section above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public Builder setUninterpretedOption(
          int index, com.google.protobuf.DescriptorProtos.UninterpretedOption value) {
        copyOnWrite();
        instance.setUninterpretedOption(index, value);
        return this;
      }
      /**
       * <pre>
       * The parser stores options it doesn't recognize here.
       * See the documentation for the "Options" section above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public Builder setUninterpretedOption(
          int index, com.google.protobuf.DescriptorProtos.UninterpretedOption.Builder builderForValue) {
        copyOnWrite();
        instance.setUninterpretedOption(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       * The parser stores options it doesn't recognize here.
       * See the documentation for the "Options" section above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public Builder addUninterpretedOption(com.google.protobuf.DescriptorProtos.UninterpretedOption value) {
        copyOnWrite();
        instance.addUninterpretedOption(value);
        return this;
      }
      /**
       * <pre>
       * The parser stores options it doesn't recognize here.
       * See the documentation for the "Options" section above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public Builder addUninterpretedOption(
          int index, com.google.protobuf.DescriptorProtos.UninterpretedOption value) {
        copyOnWrite();
        instance.addUninterpretedOption(index, value);
        return this;
      }
      /**
       * <pre>
       * The parser stores options it doesn't recognize here.
       * See the documentation for the "Options" section above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public Builder addUninterpretedOption(
          com.google.protobuf.DescriptorProtos.UninterpretedOption.Builder builderForValue) {
        copyOnWrite();
        instance.addUninterpretedOption(builderForValue);
        return this;
      }
      /**
       * <pre>
       * The parser stores options it doesn't recognize here.
       * See the documentation for the "Options" section above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public Builder addUninterpretedOption(
          int index, com.google.protobuf.DescriptorProtos.UninterpretedOption.Builder builderForValue) {
        copyOnWrite();
        instance.addUninterpretedOption(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       * The parser stores options it doesn't recognize here.
       * See the documentation for the "Options" section above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public Builder addAllUninterpretedOption(
          java.lang.Iterable<? extends com.google.protobuf.DescriptorProtos.UninterpretedOption> values) {
        copyOnWrite();
        instance.addAllUninterpretedOption(values);
        return this;
      }
      /**
       * <pre>
       * The parser stores options it doesn't recognize here.
       * See the documentation for the "Options" section above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public Builder clearUninterpretedOption() {
        copyOnWrite();
        instance.clearUninterpretedOption();
        return this;
      }
      /**
       * <pre>
       * The parser stores options it doesn't recognize here.
       * See the documentation for the "Options" section above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public Builder removeUninterpretedOption(int index) {
        copyOnWrite();
        instance.removeUninterpretedOption(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:google.protobuf.FileOptions)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.google.protobuf.DescriptorProtos.FileOptions();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          for (int i = 0; i < getUninterpretedOptionCount(); i++) {
            if (!getUninterpretedOption(i).isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (!extensionsAreInitialized()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          uninterpretedOption_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.google.protobuf.DescriptorProtos.FileOptions other = (com.google.protobuf.DescriptorProtos.FileOptions) arg1;
          javaPackage_ = visitor.visitString(
              hasJavaPackage(), javaPackage_,
              other.hasJavaPackage(), other.javaPackage_);
          javaOuterClassname_ = visitor.visitString(
              hasJavaOuterClassname(), javaOuterClassname_,
              other.hasJavaOuterClassname(), other.javaOuterClassname_);
          javaMultipleFiles_ = visitor.visitBoolean(
              hasJavaMultipleFiles(), javaMultipleFiles_,
              other.hasJavaMultipleFiles(), other.javaMultipleFiles_);
          javaGenerateEqualsAndHash_ = visitor.visitBoolean(
              hasJavaGenerateEqualsAndHash(), javaGenerateEqualsAndHash_,
              other.hasJavaGenerateEqualsAndHash(), other.javaGenerateEqualsAndHash_);
          javaStringCheckUtf8_ = visitor.visitBoolean(
              hasJavaStringCheckUtf8(), javaStringCheckUtf8_,
              other.hasJavaStringCheckUtf8(), other.javaStringCheckUtf8_);
          optimizeFor_ = visitor.visitInt(hasOptimizeFor(), optimizeFor_,
              other.hasOptimizeFor(), other.optimizeFor_);
          goPackage_ = visitor.visitString(
              hasGoPackage(), goPackage_,
              other.hasGoPackage(), other.goPackage_);
          ccGenericServices_ = visitor.visitBoolean(
              hasCcGenericServices(), ccGenericServices_,
              other.hasCcGenericServices(), other.ccGenericServices_);
          javaGenericServices_ = visitor.visitBoolean(
              hasJavaGenericServices(), javaGenericServices_,
              other.hasJavaGenericServices(), other.javaGenericServices_);
          pyGenericServices_ = visitor.visitBoolean(
              hasPyGenericServices(), pyGenericServices_,
              other.hasPyGenericServices(), other.pyGenericServices_);
          phpGenericServices_ = visitor.visitBoolean(
              hasPhpGenericServices(), phpGenericServices_,
              other.hasPhpGenericServices(), other.phpGenericServices_);
          deprecated_ = visitor.visitBoolean(
              hasDeprecated(), deprecated_,
              other.hasDeprecated(), other.deprecated_);
          ccEnableArenas_ = visitor.visitBoolean(
              hasCcEnableArenas(), ccEnableArenas_,
              other.hasCcEnableArenas(), other.ccEnableArenas_);
          objcClassPrefix_ = visitor.visitString(
              hasObjcClassPrefix(), objcClassPrefix_,
              other.hasObjcClassPrefix(), other.objcClassPrefix_);
          csharpNamespace_ = visitor.visitString(
              hasCsharpNamespace(), csharpNamespace_,
              other.hasCsharpNamespace(), other.csharpNamespace_);
          swiftPrefix_ = visitor.visitString(
              hasSwiftPrefix(), swiftPrefix_,
              other.hasSwiftPrefix(), other.swiftPrefix_);
          phpClassPrefix_ = visitor.visitString(
              hasPhpClassPrefix(), phpClassPrefix_,
              other.hasPhpClassPrefix(), other.phpClassPrefix_);
          phpNamespace_ = visitor.visitString(
              hasPhpNamespace(), phpNamespace_,
              other.hasPhpNamespace(), other.phpNamespace_);
          phpMetadataNamespace_ = visitor.visitString(
              hasPhpMetadataNamespace(), phpMetadataNamespace_,
              other.hasPhpMetadataNamespace(), other.phpMetadataNamespace_);
          rubyPackage_ = visitor.visitString(
              hasRubyPackage(), rubyPackage_,
              other.hasRubyPackage(), other.rubyPackage_);
          uninterpretedOption_= visitor.visitList(uninterpretedOption_, other.uninterpretedOption_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(getDefaultInstanceForType(),
                                         input, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readString();
                  bitField0_ |= 0x00000001;
                  javaPackage_ = s;
                  break;
                }
                case 66: {
                  String s = input.readString();
                  bitField0_ |= 0x00000002;
                  javaOuterClassname_ = s;
                  break;
                }
                case 72: {
                  int rawValue = input.readEnum();
                  com.google.protobuf.DescriptorProtos.FileOptions.OptimizeMode value = com.google.protobuf.DescriptorProtos.FileOptions.OptimizeMode.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(9, rawValue);
                  } else {
                    bitField0_ |= 0x00000020;
                    optimizeFor_ = rawValue;
                  }
                  break;
                }
                case 80: {
                  bitField0_ |= 0x00000004;
                  javaMultipleFiles_ = input.readBool();
                  break;
                }
                case 90: {
                  String s = input.readString();
                  bitField0_ |= 0x00000040;
                  goPackage_ = s;
                  break;
                }
                case 128: {
                  bitField0_ |= 0x00000080;
                  ccGenericServices_ = input.readBool();
                  break;
                }
                case 136: {
                  bitField0_ |= 0x00000100;
                  javaGenericServices_ = input.readBool();
                  break;
                }
                case 144: {
                  bitField0_ |= 0x00000200;
                  pyGenericServices_ = input.readBool();
                  break;
                }
                case 160: {
                  bitField0_ |= 0x00000008;
                  javaGenerateEqualsAndHash_ = input.readBool();
                  break;
                }
                case 184: {
                  bitField0_ |= 0x00000800;
                  deprecated_ = input.readBool();
                  break;
                }
                case 216: {
                  bitField0_ |= 0x00000010;
                  javaStringCheckUtf8_ = input.readBool();
                  break;
                }
                case 248: {
                  bitField0_ |= 0x00001000;
                  ccEnableArenas_ = input.readBool();
                  break;
                }
                case 290: {
                  String s = input.readString();
                  bitField0_ |= 0x00002000;
                  objcClassPrefix_ = s;
                  break;
                }
                case 298: {
                  String s = input.readString();
                  bitField0_ |= 0x00004000;
                  csharpNamespace_ = s;
                  break;
                }
                case 314: {
                  String s = input.readString();
                  bitField0_ |= 0x00008000;
                  swiftPrefix_ = s;
                  break;
                }
                case 322: {
                  String s = input.readString();
                  bitField0_ |= 0x00010000;
                  phpClassPrefix_ = s;
                  break;
                }
                case 330: {
                  String s = input.readString();
                  bitField0_ |= 0x00020000;
                  phpNamespace_ = s;
                  break;
                }
                case 336: {
                  bitField0_ |= 0x00000400;
                  phpGenericServices_ = input.readBool();
                  break;
                }
                case 354: {
                  String s = input.readString();
                  bitField0_ |= 0x00040000;
                  phpMetadataNamespace_ = s;
                  break;
                }
                case 362: {
                  String s = input.readString();
                  bitField0_ |= 0x00080000;
                  rubyPackage_ = s;
                  break;
                }
                case 7994: {
                  if (!uninterpretedOption_.isModifiable()) {
                    uninterpretedOption_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(uninterpretedOption_);
                  }
                  uninterpretedOption_.add(
                      input.readMessage(com.google.protobuf.DescriptorProtos.UninterpretedOption.parser(), extensionRegistry));
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.google.protobuf.DescriptorProtos.FileOptions.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:google.protobuf.FileOptions)
    private static final com.google.protobuf.DescriptorProtos.FileOptions DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new FileOptions();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.google.protobuf.DescriptorProtos.FileOptions getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<FileOptions> PARSER;

    public static com.google.protobuf.Parser<FileOptions> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface MessageOptionsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.protobuf.MessageOptions)
       com.google.protobuf.GeneratedMessageLite.
            ExtendableMessageOrBuilder<
                MessageOptions, MessageOptions.Builder> {

    /**
     * <pre>
     * Set true to use the old proto1 MessageSet wire format for extensions.
     * This is provided for backwards-compatibility with the MessageSet wire
     * format.  You should not use this for any other reason:  It's less
     * efficient, has fewer features, and is more complicated.
     * The message must be defined exactly as follows:
     *   message Foo {
     *     option message_set_wire_format = true;
     *     extensions 4 to max;
     *   }
     * Note that the message cannot have any defined fields; MessageSets only
     * have extensions.
     * All extensions of your type must be singular messages; e.g. they cannot
     * be int32s, enums, or repeated messages.
     * Because this is an option, the above two restrictions are not enforced by
     * the protocol compiler.
     * </pre>
     *
     * <code>optional bool message_set_wire_format = 1 [default = false];</code>
     */
    boolean hasMessageSetWireFormat();
    /**
     * <pre>
     * Set true to use the old proto1 MessageSet wire format for extensions.
     * This is provided for backwards-compatibility with the MessageSet wire
     * format.  You should not use this for any other reason:  It's less
     * efficient, has fewer features, and is more complicated.
     * The message must be defined exactly as follows:
     *   message Foo {
     *     option message_set_wire_format = true;
     *     extensions 4 to max;
     *   }
     * Note that the message cannot have any defined fields; MessageSets only
     * have extensions.
     * All extensions of your type must be singular messages; e.g. they cannot
     * be int32s, enums, or repeated messages.
     * Because this is an option, the above two restrictions are not enforced by
     * the protocol compiler.
     * </pre>
     *
     * <code>optional bool message_set_wire_format = 1 [default = false];</code>
     */
    boolean getMessageSetWireFormat();

    /**
     * <pre>
     * Disables the generation of the standard "descriptor()" accessor, which can
     * conflict with a field of the same name.  This is meant to make migration
     * from proto1 easier; new code should avoid fields named "descriptor".
     * </pre>
     *
     * <code>optional bool no_standard_descriptor_accessor = 2 [default = false];</code>
     */
    boolean hasNoStandardDescriptorAccessor();
    /**
     * <pre>
     * Disables the generation of the standard "descriptor()" accessor, which can
     * conflict with a field of the same name.  This is meant to make migration
     * from proto1 easier; new code should avoid fields named "descriptor".
     * </pre>
     *
     * <code>optional bool no_standard_descriptor_accessor = 2 [default = false];</code>
     */
    boolean getNoStandardDescriptorAccessor();

    /**
     * <pre>
     * Is this message deprecated?
     * Depending on the target platform, this can emit Deprecated annotations
     * for the message, or it will be completely ignored; in the very least,
     * this is a formalization for deprecating messages.
     * </pre>
     *
     * <code>optional bool deprecated = 3 [default = false];</code>
     */
    boolean hasDeprecated();
    /**
     * <pre>
     * Is this message deprecated?
     * Depending on the target platform, this can emit Deprecated annotations
     * for the message, or it will be completely ignored; in the very least,
     * this is a formalization for deprecating messages.
     * </pre>
     *
     * <code>optional bool deprecated = 3 [default = false];</code>
     */
    boolean getDeprecated();

    /**
     * <pre>
     * Whether the message is an automatically generated map entry type for the
     * maps field.
     * For maps fields:
     *     map&lt;KeyType, ValueType&gt; map_field = 1;
     * The parsed descriptor looks like:
     *     message MapFieldEntry {
     *         option map_entry = true;
     *         optional KeyType key = 1;
     *         optional ValueType value = 2;
     *     }
     *     repeated MapFieldEntry map_field = 1;
     * Implementations may choose not to generate the map_entry=true message, but
     * use a native map in the target language to hold the keys and values.
     * The reflection APIs in such implementions still need to work as
     * if the field is a repeated message field.
     * NOTE: Do not set the option in .proto files. Always use the maps syntax
     * instead. The option should only be implicitly set by the proto compiler
     * parser.
     * </pre>
     *
     * <code>optional bool map_entry = 7;</code>
     */
    boolean hasMapEntry();
    /**
     * <pre>
     * Whether the message is an automatically generated map entry type for the
     * maps field.
     * For maps fields:
     *     map&lt;KeyType, ValueType&gt; map_field = 1;
     * The parsed descriptor looks like:
     *     message MapFieldEntry {
     *         option map_entry = true;
     *         optional KeyType key = 1;
     *         optional ValueType value = 2;
     *     }
     *     repeated MapFieldEntry map_field = 1;
     * Implementations may choose not to generate the map_entry=true message, but
     * use a native map in the target language to hold the keys and values.
     * The reflection APIs in such implementions still need to work as
     * if the field is a repeated message field.
     * NOTE: Do not set the option in .proto files. Always use the maps syntax
     * instead. The option should only be implicitly set by the proto compiler
     * parser.
     * </pre>
     *
     * <code>optional bool map_entry = 7;</code>
     */
    boolean getMapEntry();

    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    java.util.List<com.google.protobuf.DescriptorProtos.UninterpretedOption>
        getUninterpretedOptionList();
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    com.google.protobuf.DescriptorProtos.UninterpretedOption getUninterpretedOption(int index);
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    int getUninterpretedOptionCount();
  }
  /**
   * Protobuf type {@code google.protobuf.MessageOptions}
   */
  public  static final class MessageOptions extends
      com.google.protobuf.GeneratedMessageLite.ExtendableMessage<
        MessageOptions, MessageOptions.Builder> implements
      // @@protoc_insertion_point(message_implements:google.protobuf.MessageOptions)
      MessageOptionsOrBuilder {
    private MessageOptions() {
      uninterpretedOption_ = emptyProtobufList();
    }
    private int bitField0_;
    public static final int MESSAGE_SET_WIRE_FORMAT_FIELD_NUMBER = 1;
    private boolean messageSetWireFormat_;
    /**
     * <pre>
     * Set true to use the old proto1 MessageSet wire format for extensions.
     * This is provided for backwards-compatibility with the MessageSet wire
     * format.  You should not use this for any other reason:  It's less
     * efficient, has fewer features, and is more complicated.
     * The message must be defined exactly as follows:
     *   message Foo {
     *     option message_set_wire_format = true;
     *     extensions 4 to max;
     *   }
     * Note that the message cannot have any defined fields; MessageSets only
     * have extensions.
     * All extensions of your type must be singular messages; e.g. they cannot
     * be int32s, enums, or repeated messages.
     * Because this is an option, the above two restrictions are not enforced by
     * the protocol compiler.
     * </pre>
     *
     * <code>optional bool message_set_wire_format = 1 [default = false];</code>
     */
    public boolean hasMessageSetWireFormat() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * Set true to use the old proto1 MessageSet wire format for extensions.
     * This is provided for backwards-compatibility with the MessageSet wire
     * format.  You should not use this for any other reason:  It's less
     * efficient, has fewer features, and is more complicated.
     * The message must be defined exactly as follows:
     *   message Foo {
     *     option message_set_wire_format = true;
     *     extensions 4 to max;
     *   }
     * Note that the message cannot have any defined fields; MessageSets only
     * have extensions.
     * All extensions of your type must be singular messages; e.g. they cannot
     * be int32s, enums, or repeated messages.
     * Because this is an option, the above two restrictions are not enforced by
     * the protocol compiler.
     * </pre>
     *
     * <code>optional bool message_set_wire_format = 1 [default = false];</code>
     */
    public boolean getMessageSetWireFormat() {
      return messageSetWireFormat_;
    }
    /**
     * <pre>
     * Set true to use the old proto1 MessageSet wire format for extensions.
     * This is provided for backwards-compatibility with the MessageSet wire
     * format.  You should not use this for any other reason:  It's less
     * efficient, has fewer features, and is more complicated.
     * The message must be defined exactly as follows:
     *   message Foo {
     *     option message_set_wire_format = true;
     *     extensions 4 to max;
     *   }
     * Note that the message cannot have any defined fields; MessageSets only
     * have extensions.
     * All extensions of your type must be singular messages; e.g. they cannot
     * be int32s, enums, or repeated messages.
     * Because this is an option, the above two restrictions are not enforced by
     * the protocol compiler.
     * </pre>
     *
     * <code>optional bool message_set_wire_format = 1 [default = false];</code>
     */
    private void setMessageSetWireFormat(boolean value) {
      bitField0_ |= 0x00000001;
      messageSetWireFormat_ = value;
    }
    /**
     * <pre>
     * Set true to use the old proto1 MessageSet wire format for extensions.
     * This is provided for backwards-compatibility with the MessageSet wire
     * format.  You should not use this for any other reason:  It's less
     * efficient, has fewer features, and is more complicated.
     * The message must be defined exactly as follows:
     *   message Foo {
     *     option message_set_wire_format = true;
     *     extensions 4 to max;
     *   }
     * Note that the message cannot have any defined fields; MessageSets only
     * have extensions.
     * All extensions of your type must be singular messages; e.g. they cannot
     * be int32s, enums, or repeated messages.
     * Because this is an option, the above two restrictions are not enforced by
     * the protocol compiler.
     * </pre>
     *
     * <code>optional bool message_set_wire_format = 1 [default = false];</code>
     */
    private void clearMessageSetWireFormat() {
      bitField0_ = (bitField0_ & ~0x00000001);
      messageSetWireFormat_ = false;
    }

    public static final int NO_STANDARD_DESCRIPTOR_ACCESSOR_FIELD_NUMBER = 2;
    private boolean noStandardDescriptorAccessor_;
    /**
     * <pre>
     * Disables the generation of the standard "descriptor()" accessor, which can
     * conflict with a field of the same name.  This is meant to make migration
     * from proto1 easier; new code should avoid fields named "descriptor".
     * </pre>
     *
     * <code>optional bool no_standard_descriptor_accessor = 2 [default = false];</code>
     */
    public boolean hasNoStandardDescriptorAccessor() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * Disables the generation of the standard "descriptor()" accessor, which can
     * conflict with a field of the same name.  This is meant to make migration
     * from proto1 easier; new code should avoid fields named "descriptor".
     * </pre>
     *
     * <code>optional bool no_standard_descriptor_accessor = 2 [default = false];</code>
     */
    public boolean getNoStandardDescriptorAccessor() {
      return noStandardDescriptorAccessor_;
    }
    /**
     * <pre>
     * Disables the generation of the standard "descriptor()" accessor, which can
     * conflict with a field of the same name.  This is meant to make migration
     * from proto1 easier; new code should avoid fields named "descriptor".
     * </pre>
     *
     * <code>optional bool no_standard_descriptor_accessor = 2 [default = false];</code>
     */
    private void setNoStandardDescriptorAccessor(boolean value) {
      bitField0_ |= 0x00000002;
      noStandardDescriptorAccessor_ = value;
    }
    /**
     * <pre>
     * Disables the generation of the standard "descriptor()" accessor, which can
     * conflict with a field of the same name.  This is meant to make migration
     * from proto1 easier; new code should avoid fields named "descriptor".
     * </pre>
     *
     * <code>optional bool no_standard_descriptor_accessor = 2 [default = false];</code>
     */
    private void clearNoStandardDescriptorAccessor() {
      bitField0_ = (bitField0_ & ~0x00000002);
      noStandardDescriptorAccessor_ = false;
    }

    public static final int DEPRECATED_FIELD_NUMBER = 3;
    private boolean deprecated_;
    /**
     * <pre>
     * Is this message deprecated?
     * Depending on the target platform, this can emit Deprecated annotations
     * for the message, or it will be completely ignored; in the very least,
     * this is a formalization for deprecating messages.
     * </pre>
     *
     * <code>optional bool deprecated = 3 [default = false];</code>
     */
    public boolean hasDeprecated() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     * Is this message deprecated?
     * Depending on the target platform, this can emit Deprecated annotations
     * for the message, or it will be completely ignored; in the very least,
     * this is a formalization for deprecating messages.
     * </pre>
     *
     * <code>optional bool deprecated = 3 [default = false];</code>
     */
    public boolean getDeprecated() {
      return deprecated_;
    }
    /**
     * <pre>
     * Is this message deprecated?
     * Depending on the target platform, this can emit Deprecated annotations
     * for the message, or it will be completely ignored; in the very least,
     * this is a formalization for deprecating messages.
     * </pre>
     *
     * <code>optional bool deprecated = 3 [default = false];</code>
     */
    private void setDeprecated(boolean value) {
      bitField0_ |= 0x00000004;
      deprecated_ = value;
    }
    /**
     * <pre>
     * Is this message deprecated?
     * Depending on the target platform, this can emit Deprecated annotations
     * for the message, or it will be completely ignored; in the very least,
     * this is a formalization for deprecating messages.
     * </pre>
     *
     * <code>optional bool deprecated = 3 [default = false];</code>
     */
    private void clearDeprecated() {
      bitField0_ = (bitField0_ & ~0x00000004);
      deprecated_ = false;
    }

    public static final int MAP_ENTRY_FIELD_NUMBER = 7;
    private boolean mapEntry_;
    /**
     * <pre>
     * Whether the message is an automatically generated map entry type for the
     * maps field.
     * For maps fields:
     *     map&lt;KeyType, ValueType&gt; map_field = 1;
     * The parsed descriptor looks like:
     *     message MapFieldEntry {
     *         option map_entry = true;
     *         optional KeyType key = 1;
     *         optional ValueType value = 2;
     *     }
     *     repeated MapFieldEntry map_field = 1;
     * Implementations may choose not to generate the map_entry=true message, but
     * use a native map in the target language to hold the keys and values.
     * The reflection APIs in such implementions still need to work as
     * if the field is a repeated message field.
     * NOTE: Do not set the option in .proto files. Always use the maps syntax
     * instead. The option should only be implicitly set by the proto compiler
     * parser.
     * </pre>
     *
     * <code>optional bool map_entry = 7;</code>
     */
    public boolean hasMapEntry() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     * Whether the message is an automatically generated map entry type for the
     * maps field.
     * For maps fields:
     *     map&lt;KeyType, ValueType&gt; map_field = 1;
     * The parsed descriptor looks like:
     *     message MapFieldEntry {
     *         option map_entry = true;
     *         optional KeyType key = 1;
     *         optional ValueType value = 2;
     *     }
     *     repeated MapFieldEntry map_field = 1;
     * Implementations may choose not to generate the map_entry=true message, but
     * use a native map in the target language to hold the keys and values.
     * The reflection APIs in such implementions still need to work as
     * if the field is a repeated message field.
     * NOTE: Do not set the option in .proto files. Always use the maps syntax
     * instead. The option should only be implicitly set by the proto compiler
     * parser.
     * </pre>
     *
     * <code>optional bool map_entry = 7;</code>
     */
    public boolean getMapEntry() {
      return mapEntry_;
    }
    /**
     * <pre>
     * Whether the message is an automatically generated map entry type for the
     * maps field.
     * For maps fields:
     *     map&lt;KeyType, ValueType&gt; map_field = 1;
     * The parsed descriptor looks like:
     *     message MapFieldEntry {
     *         option map_entry = true;
     *         optional KeyType key = 1;
     *         optional ValueType value = 2;
     *     }
     *     repeated MapFieldEntry map_field = 1;
     * Implementations may choose not to generate the map_entry=true message, but
     * use a native map in the target language to hold the keys and values.
     * The reflection APIs in such implementions still need to work as
     * if the field is a repeated message field.
     * NOTE: Do not set the option in .proto files. Always use the maps syntax
     * instead. The option should only be implicitly set by the proto compiler
     * parser.
     * </pre>
     *
     * <code>optional bool map_entry = 7;</code>
     */
    private void setMapEntry(boolean value) {
      bitField0_ |= 0x00000008;
      mapEntry_ = value;
    }
    /**
     * <pre>
     * Whether the message is an automatically generated map entry type for the
     * maps field.
     * For maps fields:
     *     map&lt;KeyType, ValueType&gt; map_field = 1;
     * The parsed descriptor looks like:
     *     message MapFieldEntry {
     *         option map_entry = true;
     *         optional KeyType key = 1;
     *         optional ValueType value = 2;
     *     }
     *     repeated MapFieldEntry map_field = 1;
     * Implementations may choose not to generate the map_entry=true message, but
     * use a native map in the target language to hold the keys and values.
     * The reflection APIs in such implementions still need to work as
     * if the field is a repeated message field.
     * NOTE: Do not set the option in .proto files. Always use the maps syntax
     * instead. The option should only be implicitly set by the proto compiler
     * parser.
     * </pre>
     *
     * <code>optional bool map_entry = 7;</code>
     */
    private void clearMapEntry() {
      bitField0_ = (bitField0_ & ~0x00000008);
      mapEntry_ = false;
    }

    public static final int UNINTERPRETED_OPTION_FIELD_NUMBER = 999;
    private com.google.protobuf.Internal.ProtobufList<com.google.protobuf.DescriptorProtos.UninterpretedOption> uninterpretedOption_;
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    public java.util.List<com.google.protobuf.DescriptorProtos.UninterpretedOption> getUninterpretedOptionList() {
      return uninterpretedOption_;
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    public java.util.List<? extends com.google.protobuf.DescriptorProtos.UninterpretedOptionOrBuilder>
        getUninterpretedOptionOrBuilderList() {
      return uninterpretedOption_;
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    public int getUninterpretedOptionCount() {
      return uninterpretedOption_.size();
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    public com.google.protobuf.DescriptorProtos.UninterpretedOption getUninterpretedOption(int index) {
      return uninterpretedOption_.get(index);
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    public com.google.protobuf.DescriptorProtos.UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(
        int index) {
      return uninterpretedOption_.get(index);
    }
    private void ensureUninterpretedOptionIsMutable() {
      if (!uninterpretedOption_.isModifiable()) {
        uninterpretedOption_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(uninterpretedOption_);
       }
    }

    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    private void setUninterpretedOption(
        int index, com.google.protobuf.DescriptorProtos.UninterpretedOption value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureUninterpretedOptionIsMutable();
      uninterpretedOption_.set(index, value);
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    private void setUninterpretedOption(
        int index, com.google.protobuf.DescriptorProtos.UninterpretedOption.Builder builderForValue) {
      ensureUninterpretedOptionIsMutable();
      uninterpretedOption_.set(index, builderForValue.build());
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    private void addUninterpretedOption(com.google.protobuf.DescriptorProtos.UninterpretedOption value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureUninterpretedOptionIsMutable();
      uninterpretedOption_.add(value);
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    private void addUninterpretedOption(
        int index, com.google.protobuf.DescriptorProtos.UninterpretedOption value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureUninterpretedOptionIsMutable();
      uninterpretedOption_.add(index, value);
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    private void addUninterpretedOption(
        com.google.protobuf.DescriptorProtos.UninterpretedOption.Builder builderForValue) {
      ensureUninterpretedOptionIsMutable();
      uninterpretedOption_.add(builderForValue.build());
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    private void addUninterpretedOption(
        int index, com.google.protobuf.DescriptorProtos.UninterpretedOption.Builder builderForValue) {
      ensureUninterpretedOptionIsMutable();
      uninterpretedOption_.add(index, builderForValue.build());
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    private void addAllUninterpretedOption(
        java.lang.Iterable<? extends com.google.protobuf.DescriptorProtos.UninterpretedOption> values) {
      ensureUninterpretedOptionIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, uninterpretedOption_);
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    private void clearUninterpretedOption() {
      uninterpretedOption_ = emptyProtobufList();
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    private void removeUninterpretedOption(int index) {
      ensureUninterpretedOptionIsMutable();
      uninterpretedOption_.remove(index);
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      com.google.protobuf.GeneratedMessageLite
        .ExtendableMessage<com.google.protobuf.DescriptorProtos.MessageOptions, com.google.protobuf.DescriptorProtos.MessageOptions.Builder>
          .ExtensionWriter extensionWriter =
            newExtensionWriter();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, messageSetWireFormat_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(2, noStandardDescriptorAccessor_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(3, deprecated_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(7, mapEntry_);
      }
      for (int i = 0; i < uninterpretedOption_.size(); i++) {
        output.writeMessage(999, uninterpretedOption_.get(i));
      }
      extensionWriter.writeUntil(536870912, output);
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, messageSetWireFormat_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, noStandardDescriptorAccessor_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, deprecated_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, mapEntry_);
      }
      for (int i = 0; i < uninterpretedOption_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(999, uninterpretedOption_.get(i));
      }
      size += extensionsSerializedSize();
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.google.protobuf.DescriptorProtos.MessageOptions parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.google.protobuf.DescriptorProtos.MessageOptions parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.google.protobuf.DescriptorProtos.MessageOptions parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.google.protobuf.DescriptorProtos.MessageOptions parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.google.protobuf.DescriptorProtos.MessageOptions parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.google.protobuf.DescriptorProtos.MessageOptions parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.google.protobuf.DescriptorProtos.MessageOptions parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.google.protobuf.DescriptorProtos.MessageOptions parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.google.protobuf.DescriptorProtos.MessageOptions parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.google.protobuf.DescriptorProtos.MessageOptions parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.protobuf.DescriptorProtos.MessageOptions prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code google.protobuf.MessageOptions}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.ExtendableBuilder<
          com.google.protobuf.DescriptorProtos.MessageOptions, Builder> implements
        // @@protoc_insertion_point(builder_implements:google.protobuf.MessageOptions)
        com.google.protobuf.DescriptorProtos.MessageOptionsOrBuilder {
      // Construct using com.google.protobuf.DescriptorProtos.MessageOptions.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Set true to use the old proto1 MessageSet wire format for extensions.
       * This is provided for backwards-compatibility with the MessageSet wire
       * format.  You should not use this for any other reason:  It's less
       * efficient, has fewer features, and is more complicated.
       * The message must be defined exactly as follows:
       *   message Foo {
       *     option message_set_wire_format = true;
       *     extensions 4 to max;
       *   }
       * Note that the message cannot have any defined fields; MessageSets only
       * have extensions.
       * All extensions of your type must be singular messages; e.g. they cannot
       * be int32s, enums, or repeated messages.
       * Because this is an option, the above two restrictions are not enforced by
       * the protocol compiler.
       * </pre>
       *
       * <code>optional bool message_set_wire_format = 1 [default = false];</code>
       */
      public boolean hasMessageSetWireFormat() {
        return instance.hasMessageSetWireFormat();
      }
      /**
       * <pre>
       * Set true to use the old proto1 MessageSet wire format for extensions.
       * This is provided for backwards-compatibility with the MessageSet wire
       * format.  You should not use this for any other reason:  It's less
       * efficient, has fewer features, and is more complicated.
       * The message must be defined exactly as follows:
       *   message Foo {
       *     option message_set_wire_format = true;
       *     extensions 4 to max;
       *   }
       * Note that the message cannot have any defined fields; MessageSets only
       * have extensions.
       * All extensions of your type must be singular messages; e.g. they cannot
       * be int32s, enums, or repeated messages.
       * Because this is an option, the above two restrictions are not enforced by
       * the protocol compiler.
       * </pre>
       *
       * <code>optional bool message_set_wire_format = 1 [default = false];</code>
       */
      public boolean getMessageSetWireFormat() {
        return instance.getMessageSetWireFormat();
      }
      /**
       * <pre>
       * Set true to use the old proto1 MessageSet wire format for extensions.
       * This is provided for backwards-compatibility with the MessageSet wire
       * format.  You should not use this for any other reason:  It's less
       * efficient, has fewer features, and is more complicated.
       * The message must be defined exactly as follows:
       *   message Foo {
       *     option message_set_wire_format = true;
       *     extensions 4 to max;
       *   }
       * Note that the message cannot have any defined fields; MessageSets only
       * have extensions.
       * All extensions of your type must be singular messages; e.g. they cannot
       * be int32s, enums, or repeated messages.
       * Because this is an option, the above two restrictions are not enforced by
       * the protocol compiler.
       * </pre>
       *
       * <code>optional bool message_set_wire_format = 1 [default = false];</code>
       */
      public Builder setMessageSetWireFormat(boolean value) {
        copyOnWrite();
        instance.setMessageSetWireFormat(value);
        return this;
      }
      /**
       * <pre>
       * Set true to use the old proto1 MessageSet wire format for extensions.
       * This is provided for backwards-compatibility with the MessageSet wire
       * format.  You should not use this for any other reason:  It's less
       * efficient, has fewer features, and is more complicated.
       * The message must be defined exactly as follows:
       *   message Foo {
       *     option message_set_wire_format = true;
       *     extensions 4 to max;
       *   }
       * Note that the message cannot have any defined fields; MessageSets only
       * have extensions.
       * All extensions of your type must be singular messages; e.g. they cannot
       * be int32s, enums, or repeated messages.
       * Because this is an option, the above two restrictions are not enforced by
       * the protocol compiler.
       * </pre>
       *
       * <code>optional bool message_set_wire_format = 1 [default = false];</code>
       */
      public Builder clearMessageSetWireFormat() {
        copyOnWrite();
        instance.clearMessageSetWireFormat();
        return this;
      }

      /**
       * <pre>
       * Disables the generation of the standard "descriptor()" accessor, which can
       * conflict with a field of the same name.  This is meant to make migration
       * from proto1 easier; new code should avoid fields named "descriptor".
       * </pre>
       *
       * <code>optional bool no_standard_descriptor_accessor = 2 [default = false];</code>
       */
      public boolean hasNoStandardDescriptorAccessor() {
        return instance.hasNoStandardDescriptorAccessor();
      }
      /**
       * <pre>
       * Disables the generation of the standard "descriptor()" accessor, which can
       * conflict with a field of the same name.  This is meant to make migration
       * from proto1 easier; new code should avoid fields named "descriptor".
       * </pre>
       *
       * <code>optional bool no_standard_descriptor_accessor = 2 [default = false];</code>
       */
      public boolean getNoStandardDescriptorAccessor() {
        return instance.getNoStandardDescriptorAccessor();
      }
      /**
       * <pre>
       * Disables the generation of the standard "descriptor()" accessor, which can
       * conflict with a field of the same name.  This is meant to make migration
       * from proto1 easier; new code should avoid fields named "descriptor".
       * </pre>
       *
       * <code>optional bool no_standard_descriptor_accessor = 2 [default = false];</code>
       */
      public Builder setNoStandardDescriptorAccessor(boolean value) {
        copyOnWrite();
        instance.setNoStandardDescriptorAccessor(value);
        return this;
      }
      /**
       * <pre>
       * Disables the generation of the standard "descriptor()" accessor, which can
       * conflict with a field of the same name.  This is meant to make migration
       * from proto1 easier; new code should avoid fields named "descriptor".
       * </pre>
       *
       * <code>optional bool no_standard_descriptor_accessor = 2 [default = false];</code>
       */
      public Builder clearNoStandardDescriptorAccessor() {
        copyOnWrite();
        instance.clearNoStandardDescriptorAccessor();
        return this;
      }

      /**
       * <pre>
       * Is this message deprecated?
       * Depending on the target platform, this can emit Deprecated annotations
       * for the message, or it will be completely ignored; in the very least,
       * this is a formalization for deprecating messages.
       * </pre>
       *
       * <code>optional bool deprecated = 3 [default = false];</code>
       */
      public boolean hasDeprecated() {
        return instance.hasDeprecated();
      }
      /**
       * <pre>
       * Is this message deprecated?
       * Depending on the target platform, this can emit Deprecated annotations
       * for the message, or it will be completely ignored; in the very least,
       * this is a formalization for deprecating messages.
       * </pre>
       *
       * <code>optional bool deprecated = 3 [default = false];</code>
       */
      public boolean getDeprecated() {
        return instance.getDeprecated();
      }
      /**
       * <pre>
       * Is this message deprecated?
       * Depending on the target platform, this can emit Deprecated annotations
       * for the message, or it will be completely ignored; in the very least,
       * this is a formalization for deprecating messages.
       * </pre>
       *
       * <code>optional bool deprecated = 3 [default = false];</code>
       */
      public Builder setDeprecated(boolean value) {
        copyOnWrite();
        instance.setDeprecated(value);
        return this;
      }
      /**
       * <pre>
       * Is this message deprecated?
       * Depending on the target platform, this can emit Deprecated annotations
       * for the message, or it will be completely ignored; in the very least,
       * this is a formalization for deprecating messages.
       * </pre>
       *
       * <code>optional bool deprecated = 3 [default = false];</code>
       */
      public Builder clearDeprecated() {
        copyOnWrite();
        instance.clearDeprecated();
        return this;
      }

      /**
       * <pre>
       * Whether the message is an automatically generated map entry type for the
       * maps field.
       * For maps fields:
       *     map&lt;KeyType, ValueType&gt; map_field = 1;
       * The parsed descriptor looks like:
       *     message MapFieldEntry {
       *         option map_entry = true;
       *         optional KeyType key = 1;
       *         optional ValueType value = 2;
       *     }
       *     repeated MapFieldEntry map_field = 1;
       * Implementations may choose not to generate the map_entry=true message, but
       * use a native map in the target language to hold the keys and values.
       * The reflection APIs in such implementions still need to work as
       * if the field is a repeated message field.
       * NOTE: Do not set the option in .proto files. Always use the maps syntax
       * instead. The option should only be implicitly set by the proto compiler
       * parser.
       * </pre>
       *
       * <code>optional bool map_entry = 7;</code>
       */
      public boolean hasMapEntry() {
        return instance.hasMapEntry();
      }
      /**
       * <pre>
       * Whether the message is an automatically generated map entry type for the
       * maps field.
       * For maps fields:
       *     map&lt;KeyType, ValueType&gt; map_field = 1;
       * The parsed descriptor looks like:
       *     message MapFieldEntry {
       *         option map_entry = true;
       *         optional KeyType key = 1;
       *         optional ValueType value = 2;
       *     }
       *     repeated MapFieldEntry map_field = 1;
       * Implementations may choose not to generate the map_entry=true message, but
       * use a native map in the target language to hold the keys and values.
       * The reflection APIs in such implementions still need to work as
       * if the field is a repeated message field.
       * NOTE: Do not set the option in .proto files. Always use the maps syntax
       * instead. The option should only be implicitly set by the proto compiler
       * parser.
       * </pre>
       *
       * <code>optional bool map_entry = 7;</code>
       */
      public boolean getMapEntry() {
        return instance.getMapEntry();
      }
      /**
       * <pre>
       * Whether the message is an automatically generated map entry type for the
       * maps field.
       * For maps fields:
       *     map&lt;KeyType, ValueType&gt; map_field = 1;
       * The parsed descriptor looks like:
       *     message MapFieldEntry {
       *         option map_entry = true;
       *         optional KeyType key = 1;
       *         optional ValueType value = 2;
       *     }
       *     repeated MapFieldEntry map_field = 1;
       * Implementations may choose not to generate the map_entry=true message, but
       * use a native map in the target language to hold the keys and values.
       * The reflection APIs in such implementions still need to work as
       * if the field is a repeated message field.
       * NOTE: Do not set the option in .proto files. Always use the maps syntax
       * instead. The option should only be implicitly set by the proto compiler
       * parser.
       * </pre>
       *
       * <code>optional bool map_entry = 7;</code>
       */
      public Builder setMapEntry(boolean value) {
        copyOnWrite();
        instance.setMapEntry(value);
        return this;
      }
      /**
       * <pre>
       * Whether the message is an automatically generated map entry type for the
       * maps field.
       * For maps fields:
       *     map&lt;KeyType, ValueType&gt; map_field = 1;
       * The parsed descriptor looks like:
       *     message MapFieldEntry {
       *         option map_entry = true;
       *         optional KeyType key = 1;
       *         optional ValueType value = 2;
       *     }
       *     repeated MapFieldEntry map_field = 1;
       * Implementations may choose not to generate the map_entry=true message, but
       * use a native map in the target language to hold the keys and values.
       * The reflection APIs in such implementions still need to work as
       * if the field is a repeated message field.
       * NOTE: Do not set the option in .proto files. Always use the maps syntax
       * instead. The option should only be implicitly set by the proto compiler
       * parser.
       * </pre>
       *
       * <code>optional bool map_entry = 7;</code>
       */
      public Builder clearMapEntry() {
        copyOnWrite();
        instance.clearMapEntry();
        return this;
      }

      /**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public java.util.List<com.google.protobuf.DescriptorProtos.UninterpretedOption> getUninterpretedOptionList() {
        return java.util.Collections.unmodifiableList(
            instance.getUninterpretedOptionList());
      }
      /**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public int getUninterpretedOptionCount() {
        return instance.getUninterpretedOptionCount();
      }/**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public com.google.protobuf.DescriptorProtos.UninterpretedOption getUninterpretedOption(int index) {
        return instance.getUninterpretedOption(index);
      }
      /**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public Builder setUninterpretedOption(
          int index, com.google.protobuf.DescriptorProtos.UninterpretedOption value) {
        copyOnWrite();
        instance.setUninterpretedOption(index, value);
        return this;
      }
      /**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public Builder setUninterpretedOption(
          int index, com.google.protobuf.DescriptorProtos.UninterpretedOption.Builder builderForValue) {
        copyOnWrite();
        instance.setUninterpretedOption(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public Builder addUninterpretedOption(com.google.protobuf.DescriptorProtos.UninterpretedOption value) {
        copyOnWrite();
        instance.addUninterpretedOption(value);
        return this;
      }
      /**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public Builder addUninterpretedOption(
          int index, com.google.protobuf.DescriptorProtos.UninterpretedOption value) {
        copyOnWrite();
        instance.addUninterpretedOption(index, value);
        return this;
      }
      /**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public Builder addUninterpretedOption(
          com.google.protobuf.DescriptorProtos.UninterpretedOption.Builder builderForValue) {
        copyOnWrite();
        instance.addUninterpretedOption(builderForValue);
        return this;
      }
      /**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public Builder addUninterpretedOption(
          int index, com.google.protobuf.DescriptorProtos.UninterpretedOption.Builder builderForValue) {
        copyOnWrite();
        instance.addUninterpretedOption(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public Builder addAllUninterpretedOption(
          java.lang.Iterable<? extends com.google.protobuf.DescriptorProtos.UninterpretedOption> values) {
        copyOnWrite();
        instance.addAllUninterpretedOption(values);
        return this;
      }
      /**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public Builder clearUninterpretedOption() {
        copyOnWrite();
        instance.clearUninterpretedOption();
        return this;
      }
      /**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public Builder removeUninterpretedOption(int index) {
        copyOnWrite();
        instance.removeUninterpretedOption(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:google.protobuf.MessageOptions)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.google.protobuf.DescriptorProtos.MessageOptions();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          for (int i = 0; i < getUninterpretedOptionCount(); i++) {
            if (!getUninterpretedOption(i).isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (!extensionsAreInitialized()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          uninterpretedOption_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.google.protobuf.DescriptorProtos.MessageOptions other = (com.google.protobuf.DescriptorProtos.MessageOptions) arg1;
          messageSetWireFormat_ = visitor.visitBoolean(
              hasMessageSetWireFormat(), messageSetWireFormat_,
              other.hasMessageSetWireFormat(), other.messageSetWireFormat_);
          noStandardDescriptorAccessor_ = visitor.visitBoolean(
              hasNoStandardDescriptorAccessor(), noStandardDescriptorAccessor_,
              other.hasNoStandardDescriptorAccessor(), other.noStandardDescriptorAccessor_);
          deprecated_ = visitor.visitBoolean(
              hasDeprecated(), deprecated_,
              other.hasDeprecated(), other.deprecated_);
          mapEntry_ = visitor.visitBoolean(
              hasMapEntry(), mapEntry_,
              other.hasMapEntry(), other.mapEntry_);
          uninterpretedOption_= visitor.visitList(uninterpretedOption_, other.uninterpretedOption_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(getDefaultInstanceForType(),
                                         input, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  messageSetWireFormat_ = input.readBool();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  noStandardDescriptorAccessor_ = input.readBool();
                  break;
                }
                case 24: {
                  bitField0_ |= 0x00000004;
                  deprecated_ = input.readBool();
                  break;
                }
                case 56: {
                  bitField0_ |= 0x00000008;
                  mapEntry_ = input.readBool();
                  break;
                }
                case 7994: {
                  if (!uninterpretedOption_.isModifiable()) {
                    uninterpretedOption_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(uninterpretedOption_);
                  }
                  uninterpretedOption_.add(
                      input.readMessage(com.google.protobuf.DescriptorProtos.UninterpretedOption.parser(), extensionRegistry));
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.google.protobuf.DescriptorProtos.MessageOptions.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:google.protobuf.MessageOptions)
    private static final com.google.protobuf.DescriptorProtos.MessageOptions DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MessageOptions();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.google.protobuf.DescriptorProtos.MessageOptions getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<MessageOptions> PARSER;

    public static com.google.protobuf.Parser<MessageOptions> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface FieldOptionsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.protobuf.FieldOptions)
       com.google.protobuf.GeneratedMessageLite.
            ExtendableMessageOrBuilder<
                FieldOptions, FieldOptions.Builder> {

    /**
     * <pre>
     * The ctype option instructs the C++ code generator to use a different
     * representation of the field than it normally would.  See the specific
     * options below.  This option is not yet implemented in the open source
     * release -- sorry, we'll try to include it in a future version!
     * </pre>
     *
     * <code>optional .google.protobuf.FieldOptions.CType ctype = 1 [default = STRING];</code>
     */
    boolean hasCtype();
    /**
     * <pre>
     * The ctype option instructs the C++ code generator to use a different
     * representation of the field than it normally would.  See the specific
     * options below.  This option is not yet implemented in the open source
     * release -- sorry, we'll try to include it in a future version!
     * </pre>
     *
     * <code>optional .google.protobuf.FieldOptions.CType ctype = 1 [default = STRING];</code>
     */
    com.google.protobuf.DescriptorProtos.FieldOptions.CType getCtype();

    /**
     * <pre>
     * The packed option can be enabled for repeated primitive fields to enable
     * a more efficient representation on the wire. Rather than repeatedly
     * writing the tag and type for each element, the entire array is encoded as
     * a single length-delimited blob. In proto3, only explicit setting it to
     * false will avoid using packed encoding.
     * </pre>
     *
     * <code>optional bool packed = 2;</code>
     */
    boolean hasPacked();
    /**
     * <pre>
     * The packed option can be enabled for repeated primitive fields to enable
     * a more efficient representation on the wire. Rather than repeatedly
     * writing the tag and type for each element, the entire array is encoded as
     * a single length-delimited blob. In proto3, only explicit setting it to
     * false will avoid using packed encoding.
     * </pre>
     *
     * <code>optional bool packed = 2;</code>
     */
    boolean getPacked();

    /**
     * <pre>
     * The jstype option determines the JavaScript type used for values of the
     * field.  The option is permitted only for 64 bit integral and fixed types
     * (int64, uint64, sint64, fixed64, sfixed64).  A field with jstype JS_STRING
     * is represented as JavaScript string, which avoids loss of precision that
     * can happen when a large value is converted to a floating point JavaScript.
     * Specifying JS_NUMBER for the jstype causes the generated JavaScript code to
     * use the JavaScript "number" type.  The behavior of the default option
     * JS_NORMAL is implementation dependent.
     * This option is an enum to permit additional types to be added, e.g.
     * goog.math.Integer.
     * </pre>
     *
     * <code>optional .google.protobuf.FieldOptions.JSType jstype = 6 [default = JS_NORMAL];</code>
     */
    boolean hasJstype();
    /**
     * <pre>
     * The jstype option determines the JavaScript type used for values of the
     * field.  The option is permitted only for 64 bit integral and fixed types
     * (int64, uint64, sint64, fixed64, sfixed64).  A field with jstype JS_STRING
     * is represented as JavaScript string, which avoids loss of precision that
     * can happen when a large value is converted to a floating point JavaScript.
     * Specifying JS_NUMBER for the jstype causes the generated JavaScript code to
     * use the JavaScript "number" type.  The behavior of the default option
     * JS_NORMAL is implementation dependent.
     * This option is an enum to permit additional types to be added, e.g.
     * goog.math.Integer.
     * </pre>
     *
     * <code>optional .google.protobuf.FieldOptions.JSType jstype = 6 [default = JS_NORMAL];</code>
     */
    com.google.protobuf.DescriptorProtos.FieldOptions.JSType getJstype();

    /**
     * <pre>
     * Should this field be parsed lazily?  Lazy applies only to message-type
     * fields.  It means that when the outer message is initially parsed, the
     * inner message's contents will not be parsed but instead stored in encoded
     * form.  The inner message will actually be parsed when it is first accessed.
     * This is only a hint.  Implementations are free to choose whether to use
     * eager or lazy parsing regardless of the value of this option.  However,
     * setting this option true suggests that the protocol author believes that
     * using lazy parsing on this field is worth the additional bookkeeping
     * overhead typically needed to implement it.
     * This option does not affect the public interface of any generated code;
     * all method signatures remain the same.  Furthermore, thread-safety of the
     * interface is not affected by this option; const methods remain safe to
     * call from multiple threads concurrently, while non-const methods continue
     * to require exclusive access.
     * Note that implementations may choose not to check required fields within
     * a lazy sub-message.  That is, calling IsInitialized() on the outer message
     * may return true even if the inner message has missing required fields.
     * This is necessary because otherwise the inner message would have to be
     * parsed in order to perform the check, defeating the purpose of lazy
     * parsing.  An implementation which chooses not to check required fields
     * must be consistent about it.  That is, for any particular sub-message, the
     * implementation must either *always* check its required fields, or *never*
     * check its required fields, regardless of whether or not the message has
     * been parsed.
     * </pre>
     *
     * <code>optional bool lazy = 5 [default = false];</code>
     */
    boolean hasLazy();
    /**
     * <pre>
     * Should this field be parsed lazily?  Lazy applies only to message-type
     * fields.  It means that when the outer message is initially parsed, the
     * inner message's contents will not be parsed but instead stored in encoded
     * form.  The inner message will actually be parsed when it is first accessed.
     * This is only a hint.  Implementations are free to choose whether to use
     * eager or lazy parsing regardless of the value of this option.  However,
     * setting this option true suggests that the protocol author believes that
     * using lazy parsing on this field is worth the additional bookkeeping
     * overhead typically needed to implement it.
     * This option does not affect the public interface of any generated code;
     * all method signatures remain the same.  Furthermore, thread-safety of the
     * interface is not affected by this option; const methods remain safe to
     * call from multiple threads concurrently, while non-const methods continue
     * to require exclusive access.
     * Note that implementations may choose not to check required fields within
     * a lazy sub-message.  That is, calling IsInitialized() on the outer message
     * may return true even if the inner message has missing required fields.
     * This is necessary because otherwise the inner message would have to be
     * parsed in order to perform the check, defeating the purpose of lazy
     * parsing.  An implementation which chooses not to check required fields
     * must be consistent about it.  That is, for any particular sub-message, the
     * implementation must either *always* check its required fields, or *never*
     * check its required fields, regardless of whether or not the message has
     * been parsed.
     * </pre>
     *
     * <code>optional bool lazy = 5 [default = false];</code>
     */
    boolean getLazy();

    /**
     * <pre>
     * Is this field deprecated?
     * Depending on the target platform, this can emit Deprecated annotations
     * for accessors, or it will be completely ignored; in the very least, this
     * is a formalization for deprecating fields.
     * </pre>
     *
     * <code>optional bool deprecated = 3 [default = false];</code>
     */
    boolean hasDeprecated();
    /**
     * <pre>
     * Is this field deprecated?
     * Depending on the target platform, this can emit Deprecated annotations
     * for accessors, or it will be completely ignored; in the very least, this
     * is a formalization for deprecating fields.
     * </pre>
     *
     * <code>optional bool deprecated = 3 [default = false];</code>
     */
    boolean getDeprecated();

    /**
     * <pre>
     * For Google-internal migration only. Do not use.
     * </pre>
     *
     * <code>optional bool weak = 10 [default = false];</code>
     */
    boolean hasWeak();
    /**
     * <pre>
     * For Google-internal migration only. Do not use.
     * </pre>
     *
     * <code>optional bool weak = 10 [default = false];</code>
     */
    boolean getWeak();

    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    java.util.List<com.google.protobuf.DescriptorProtos.UninterpretedOption>
        getUninterpretedOptionList();
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    com.google.protobuf.DescriptorProtos.UninterpretedOption getUninterpretedOption(int index);
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    int getUninterpretedOptionCount();
  }
  /**
   * Protobuf type {@code google.protobuf.FieldOptions}
   */
  public  static final class FieldOptions extends
      com.google.protobuf.GeneratedMessageLite.ExtendableMessage<
        FieldOptions, FieldOptions.Builder> implements
      // @@protoc_insertion_point(message_implements:google.protobuf.FieldOptions)
      FieldOptionsOrBuilder {
    private FieldOptions() {
      uninterpretedOption_ = emptyProtobufList();
    }
    /**
     * Protobuf enum {@code google.protobuf.FieldOptions.CType}
     */
    public enum CType
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <pre>
       * Default mode.
       * </pre>
       *
       * <code>STRING = 0;</code>
       */
      STRING(0),
      /**
       * <code>CORD = 1;</code>
       */
      CORD(1),
      /**
       * <code>STRING_PIECE = 2;</code>
       */
      STRING_PIECE(2),
      ;

      /**
       * <pre>
       * Default mode.
       * </pre>
       *
       * <code>STRING = 0;</code>
       */
      public static final int STRING_VALUE = 0;
      /**
       * <code>CORD = 1;</code>
       */
      public static final int CORD_VALUE = 1;
      /**
       * <code>STRING_PIECE = 2;</code>
       */
      public static final int STRING_PIECE_VALUE = 2;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static CType valueOf(int value) {
        return forNumber(value);
      }

      public static CType forNumber(int value) {
        switch (value) {
          case 0: return STRING;
          case 1: return CORD;
          case 2: return STRING_PIECE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<CType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          CType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<CType>() {
              public CType findValueByNumber(int number) {
                return CType.forNumber(number);
              }
            };

      private final int value;

      private CType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:google.protobuf.FieldOptions.CType)
    }

    /**
     * Protobuf enum {@code google.protobuf.FieldOptions.JSType}
     */
    public enum JSType
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <pre>
       * Use the default type.
       * </pre>
       *
       * <code>JS_NORMAL = 0;</code>
       */
      JS_NORMAL(0),
      /**
       * <pre>
       * Use JavaScript strings.
       * </pre>
       *
       * <code>JS_STRING = 1;</code>
       */
      JS_STRING(1),
      /**
       * <pre>
       * Use JavaScript numbers.
       * </pre>
       *
       * <code>JS_NUMBER = 2;</code>
       */
      JS_NUMBER(2),
      ;

      /**
       * <pre>
       * Use the default type.
       * </pre>
       *
       * <code>JS_NORMAL = 0;</code>
       */
      public static final int JS_NORMAL_VALUE = 0;
      /**
       * <pre>
       * Use JavaScript strings.
       * </pre>
       *
       * <code>JS_STRING = 1;</code>
       */
      public static final int JS_STRING_VALUE = 1;
      /**
       * <pre>
       * Use JavaScript numbers.
       * </pre>
       *
       * <code>JS_NUMBER = 2;</code>
       */
      public static final int JS_NUMBER_VALUE = 2;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static JSType valueOf(int value) {
        return forNumber(value);
      }

      public static JSType forNumber(int value) {
        switch (value) {
          case 0: return JS_NORMAL;
          case 1: return JS_STRING;
          case 2: return JS_NUMBER;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<JSType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          JSType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<JSType>() {
              public JSType findValueByNumber(int number) {
                return JSType.forNumber(number);
              }
            };

      private final int value;

      private JSType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:google.protobuf.FieldOptions.JSType)
    }

    private int bitField0_;
    public static final int CTYPE_FIELD_NUMBER = 1;
    private int ctype_;
    /**
     * <pre>
     * The ctype option instructs the C++ code generator to use a different
     * representation of the field than it normally would.  See the specific
     * options below.  This option is not yet implemented in the open source
     * release -- sorry, we'll try to include it in a future version!
     * </pre>
     *
     * <code>optional .google.protobuf.FieldOptions.CType ctype = 1 [default = STRING];</code>
     */
    public boolean hasCtype() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * The ctype option instructs the C++ code generator to use a different
     * representation of the field than it normally would.  See the specific
     * options below.  This option is not yet implemented in the open source
     * release -- sorry, we'll try to include it in a future version!
     * </pre>
     *
     * <code>optional .google.protobuf.FieldOptions.CType ctype = 1 [default = STRING];</code>
     */
    public com.google.protobuf.DescriptorProtos.FieldOptions.CType getCtype() {
      com.google.protobuf.DescriptorProtos.FieldOptions.CType result = com.google.protobuf.DescriptorProtos.FieldOptions.CType.forNumber(ctype_);
      return result == null ? com.google.protobuf.DescriptorProtos.FieldOptions.CType.STRING : result;
    }
    /**
     * <pre>
     * The ctype option instructs the C++ code generator to use a different
     * representation of the field than it normally would.  See the specific
     * options below.  This option is not yet implemented in the open source
     * release -- sorry, we'll try to include it in a future version!
     * </pre>
     *
     * <code>optional .google.protobuf.FieldOptions.CType ctype = 1 [default = STRING];</code>
     */
    private void setCtype(com.google.protobuf.DescriptorProtos.FieldOptions.CType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000001;
      ctype_ = value.getNumber();
    }
    /**
     * <pre>
     * The ctype option instructs the C++ code generator to use a different
     * representation of the field than it normally would.  See the specific
     * options below.  This option is not yet implemented in the open source
     * release -- sorry, we'll try to include it in a future version!
     * </pre>
     *
     * <code>optional .google.protobuf.FieldOptions.CType ctype = 1 [default = STRING];</code>
     */
    private void clearCtype() {
      bitField0_ = (bitField0_ & ~0x00000001);
      ctype_ = 0;
    }

    public static final int PACKED_FIELD_NUMBER = 2;
    private boolean packed_;
    /**
     * <pre>
     * The packed option can be enabled for repeated primitive fields to enable
     * a more efficient representation on the wire. Rather than repeatedly
     * writing the tag and type for each element, the entire array is encoded as
     * a single length-delimited blob. In proto3, only explicit setting it to
     * false will avoid using packed encoding.
     * </pre>
     *
     * <code>optional bool packed = 2;</code>
     */
    public boolean hasPacked() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * The packed option can be enabled for repeated primitive fields to enable
     * a more efficient representation on the wire. Rather than repeatedly
     * writing the tag and type for each element, the entire array is encoded as
     * a single length-delimited blob. In proto3, only explicit setting it to
     * false will avoid using packed encoding.
     * </pre>
     *
     * <code>optional bool packed = 2;</code>
     */
    public boolean getPacked() {
      return packed_;
    }
    /**
     * <pre>
     * The packed option can be enabled for repeated primitive fields to enable
     * a more efficient representation on the wire. Rather than repeatedly
     * writing the tag and type for each element, the entire array is encoded as
     * a single length-delimited blob. In proto3, only explicit setting it to
     * false will avoid using packed encoding.
     * </pre>
     *
     * <code>optional bool packed = 2;</code>
     */
    private void setPacked(boolean value) {
      bitField0_ |= 0x00000002;
      packed_ = value;
    }
    /**
     * <pre>
     * The packed option can be enabled for repeated primitive fields to enable
     * a more efficient representation on the wire. Rather than repeatedly
     * writing the tag and type for each element, the entire array is encoded as
     * a single length-delimited blob. In proto3, only explicit setting it to
     * false will avoid using packed encoding.
     * </pre>
     *
     * <code>optional bool packed = 2;</code>
     */
    private void clearPacked() {
      bitField0_ = (bitField0_ & ~0x00000002);
      packed_ = false;
    }

    public static final int JSTYPE_FIELD_NUMBER = 6;
    private int jstype_;
    /**
     * <pre>
     * The jstype option determines the JavaScript type used for values of the
     * field.  The option is permitted only for 64 bit integral and fixed types
     * (int64, uint64, sint64, fixed64, sfixed64).  A field with jstype JS_STRING
     * is represented as JavaScript string, which avoids loss of precision that
     * can happen when a large value is converted to a floating point JavaScript.
     * Specifying JS_NUMBER for the jstype causes the generated JavaScript code to
     * use the JavaScript "number" type.  The behavior of the default option
     * JS_NORMAL is implementation dependent.
     * This option is an enum to permit additional types to be added, e.g.
     * goog.math.Integer.
     * </pre>
     *
     * <code>optional .google.protobuf.FieldOptions.JSType jstype = 6 [default = JS_NORMAL];</code>
     */
    public boolean hasJstype() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     * The jstype option determines the JavaScript type used for values of the
     * field.  The option is permitted only for 64 bit integral and fixed types
     * (int64, uint64, sint64, fixed64, sfixed64).  A field with jstype JS_STRING
     * is represented as JavaScript string, which avoids loss of precision that
     * can happen when a large value is converted to a floating point JavaScript.
     * Specifying JS_NUMBER for the jstype causes the generated JavaScript code to
     * use the JavaScript "number" type.  The behavior of the default option
     * JS_NORMAL is implementation dependent.
     * This option is an enum to permit additional types to be added, e.g.
     * goog.math.Integer.
     * </pre>
     *
     * <code>optional .google.protobuf.FieldOptions.JSType jstype = 6 [default = JS_NORMAL];</code>
     */
    public com.google.protobuf.DescriptorProtos.FieldOptions.JSType getJstype() {
      com.google.protobuf.DescriptorProtos.FieldOptions.JSType result = com.google.protobuf.DescriptorProtos.FieldOptions.JSType.forNumber(jstype_);
      return result == null ? com.google.protobuf.DescriptorProtos.FieldOptions.JSType.JS_NORMAL : result;
    }
    /**
     * <pre>
     * The jstype option determines the JavaScript type used for values of the
     * field.  The option is permitted only for 64 bit integral and fixed types
     * (int64, uint64, sint64, fixed64, sfixed64).  A field with jstype JS_STRING
     * is represented as JavaScript string, which avoids loss of precision that
     * can happen when a large value is converted to a floating point JavaScript.
     * Specifying JS_NUMBER for the jstype causes the generated JavaScript code to
     * use the JavaScript "number" type.  The behavior of the default option
     * JS_NORMAL is implementation dependent.
     * This option is an enum to permit additional types to be added, e.g.
     * goog.math.Integer.
     * </pre>
     *
     * <code>optional .google.protobuf.FieldOptions.JSType jstype = 6 [default = JS_NORMAL];</code>
     */
    private void setJstype(com.google.protobuf.DescriptorProtos.FieldOptions.JSType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000004;
      jstype_ = value.getNumber();
    }
    /**
     * <pre>
     * The jstype option determines the JavaScript type used for values of the
     * field.  The option is permitted only for 64 bit integral and fixed types
     * (int64, uint64, sint64, fixed64, sfixed64).  A field with jstype JS_STRING
     * is represented as JavaScript string, which avoids loss of precision that
     * can happen when a large value is converted to a floating point JavaScript.
     * Specifying JS_NUMBER for the jstype causes the generated JavaScript code to
     * use the JavaScript "number" type.  The behavior of the default option
     * JS_NORMAL is implementation dependent.
     * This option is an enum to permit additional types to be added, e.g.
     * goog.math.Integer.
     * </pre>
     *
     * <code>optional .google.protobuf.FieldOptions.JSType jstype = 6 [default = JS_NORMAL];</code>
     */
    private void clearJstype() {
      bitField0_ = (bitField0_ & ~0x00000004);
      jstype_ = 0;
    }

    public static final int LAZY_FIELD_NUMBER = 5;
    private boolean lazy_;
    /**
     * <pre>
     * Should this field be parsed lazily?  Lazy applies only to message-type
     * fields.  It means that when the outer message is initially parsed, the
     * inner message's contents will not be parsed but instead stored in encoded
     * form.  The inner message will actually be parsed when it is first accessed.
     * This is only a hint.  Implementations are free to choose whether to use
     * eager or lazy parsing regardless of the value of this option.  However,
     * setting this option true suggests that the protocol author believes that
     * using lazy parsing on this field is worth the additional bookkeeping
     * overhead typically needed to implement it.
     * This option does not affect the public interface of any generated code;
     * all method signatures remain the same.  Furthermore, thread-safety of the
     * interface is not affected by this option; const methods remain safe to
     * call from multiple threads concurrently, while non-const methods continue
     * to require exclusive access.
     * Note that implementations may choose not to check required fields within
     * a lazy sub-message.  That is, calling IsInitialized() on the outer message
     * may return true even if the inner message has missing required fields.
     * This is necessary because otherwise the inner message would have to be
     * parsed in order to perform the check, defeating the purpose of lazy
     * parsing.  An implementation which chooses not to check required fields
     * must be consistent about it.  That is, for any particular sub-message, the
     * implementation must either *always* check its required fields, or *never*
     * check its required fields, regardless of whether or not the message has
     * been parsed.
     * </pre>
     *
     * <code>optional bool lazy = 5 [default = false];</code>
     */
    public boolean hasLazy() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     * Should this field be parsed lazily?  Lazy applies only to message-type
     * fields.  It means that when the outer message is initially parsed, the
     * inner message's contents will not be parsed but instead stored in encoded
     * form.  The inner message will actually be parsed when it is first accessed.
     * This is only a hint.  Implementations are free to choose whether to use
     * eager or lazy parsing regardless of the value of this option.  However,
     * setting this option true suggests that the protocol author believes that
     * using lazy parsing on this field is worth the additional bookkeeping
     * overhead typically needed to implement it.
     * This option does not affect the public interface of any generated code;
     * all method signatures remain the same.  Furthermore, thread-safety of the
     * interface is not affected by this option; const methods remain safe to
     * call from multiple threads concurrently, while non-const methods continue
     * to require exclusive access.
     * Note that implementations may choose not to check required fields within
     * a lazy sub-message.  That is, calling IsInitialized() on the outer message
     * may return true even if the inner message has missing required fields.
     * This is necessary because otherwise the inner message would have to be
     * parsed in order to perform the check, defeating the purpose of lazy
     * parsing.  An implementation which chooses not to check required fields
     * must be consistent about it.  That is, for any particular sub-message, the
     * implementation must either *always* check its required fields, or *never*
     * check its required fields, regardless of whether or not the message has
     * been parsed.
     * </pre>
     *
     * <code>optional bool lazy = 5 [default = false];</code>
     */
    public boolean getLazy() {
      return lazy_;
    }
    /**
     * <pre>
     * Should this field be parsed lazily?  Lazy applies only to message-type
     * fields.  It means that when the outer message is initially parsed, the
     * inner message's contents will not be parsed but instead stored in encoded
     * form.  The inner message will actually be parsed when it is first accessed.
     * This is only a hint.  Implementations are free to choose whether to use
     * eager or lazy parsing regardless of the value of this option.  However,
     * setting this option true suggests that the protocol author believes that
     * using lazy parsing on this field is worth the additional bookkeeping
     * overhead typically needed to implement it.
     * This option does not affect the public interface of any generated code;
     * all method signatures remain the same.  Furthermore, thread-safety of the
     * interface is not affected by this option; const methods remain safe to
     * call from multiple threads concurrently, while non-const methods continue
     * to require exclusive access.
     * Note that implementations may choose not to check required fields within
     * a lazy sub-message.  That is, calling IsInitialized() on the outer message
     * may return true even if the inner message has missing required fields.
     * This is necessary because otherwise the inner message would have to be
     * parsed in order to perform the check, defeating the purpose of lazy
     * parsing.  An implementation which chooses not to check required fields
     * must be consistent about it.  That is, for any particular sub-message, the
     * implementation must either *always* check its required fields, or *never*
     * check its required fields, regardless of whether or not the message has
     * been parsed.
     * </pre>
     *
     * <code>optional bool lazy = 5 [default = false];</code>
     */
    private void setLazy(boolean value) {
      bitField0_ |= 0x00000008;
      lazy_ = value;
    }
    /**
     * <pre>
     * Should this field be parsed lazily?  Lazy applies only to message-type
     * fields.  It means that when the outer message is initially parsed, the
     * inner message's contents will not be parsed but instead stored in encoded
     * form.  The inner message will actually be parsed when it is first accessed.
     * This is only a hint.  Implementations are free to choose whether to use
     * eager or lazy parsing regardless of the value of this option.  However,
     * setting this option true suggests that the protocol author believes that
     * using lazy parsing on this field is worth the additional bookkeeping
     * overhead typically needed to implement it.
     * This option does not affect the public interface of any generated code;
     * all method signatures remain the same.  Furthermore, thread-safety of the
     * interface is not affected by this option; const methods remain safe to
     * call from multiple threads concurrently, while non-const methods continue
     * to require exclusive access.
     * Note that implementations may choose not to check required fields within
     * a lazy sub-message.  That is, calling IsInitialized() on the outer message
     * may return true even if the inner message has missing required fields.
     * This is necessary because otherwise the inner message would have to be
     * parsed in order to perform the check, defeating the purpose of lazy
     * parsing.  An implementation which chooses not to check required fields
     * must be consistent about it.  That is, for any particular sub-message, the
     * implementation must either *always* check its required fields, or *never*
     * check its required fields, regardless of whether or not the message has
     * been parsed.
     * </pre>
     *
     * <code>optional bool lazy = 5 [default = false];</code>
     */
    private void clearLazy() {
      bitField0_ = (bitField0_ & ~0x00000008);
      lazy_ = false;
    }

    public static final int DEPRECATED_FIELD_NUMBER = 3;
    private boolean deprecated_;
    /**
     * <pre>
     * Is this field deprecated?
     * Depending on the target platform, this can emit Deprecated annotations
     * for accessors, or it will be completely ignored; in the very least, this
     * is a formalization for deprecating fields.
     * </pre>
     *
     * <code>optional bool deprecated = 3 [default = false];</code>
     */
    public boolean hasDeprecated() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <pre>
     * Is this field deprecated?
     * Depending on the target platform, this can emit Deprecated annotations
     * for accessors, or it will be completely ignored; in the very least, this
     * is a formalization for deprecating fields.
     * </pre>
     *
     * <code>optional bool deprecated = 3 [default = false];</code>
     */
    public boolean getDeprecated() {
      return deprecated_;
    }
    /**
     * <pre>
     * Is this field deprecated?
     * Depending on the target platform, this can emit Deprecated annotations
     * for accessors, or it will be completely ignored; in the very least, this
     * is a formalization for deprecating fields.
     * </pre>
     *
     * <code>optional bool deprecated = 3 [default = false];</code>
     */
    private void setDeprecated(boolean value) {
      bitField0_ |= 0x00000010;
      deprecated_ = value;
    }
    /**
     * <pre>
     * Is this field deprecated?
     * Depending on the target platform, this can emit Deprecated annotations
     * for accessors, or it will be completely ignored; in the very least, this
     * is a formalization for deprecating fields.
     * </pre>
     *
     * <code>optional bool deprecated = 3 [default = false];</code>
     */
    private void clearDeprecated() {
      bitField0_ = (bitField0_ & ~0x00000010);
      deprecated_ = false;
    }

    public static final int WEAK_FIELD_NUMBER = 10;
    private boolean weak_;
    /**
     * <pre>
     * For Google-internal migration only. Do not use.
     * </pre>
     *
     * <code>optional bool weak = 10 [default = false];</code>
     */
    public boolean hasWeak() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <pre>
     * For Google-internal migration only. Do not use.
     * </pre>
     *
     * <code>optional bool weak = 10 [default = false];</code>
     */
    public boolean getWeak() {
      return weak_;
    }
    /**
     * <pre>
     * For Google-internal migration only. Do not use.
     * </pre>
     *
     * <code>optional bool weak = 10 [default = false];</code>
     */
    private void setWeak(boolean value) {
      bitField0_ |= 0x00000020;
      weak_ = value;
    }
    /**
     * <pre>
     * For Google-internal migration only. Do not use.
     * </pre>
     *
     * <code>optional bool weak = 10 [default = false];</code>
     */
    private void clearWeak() {
      bitField0_ = (bitField0_ & ~0x00000020);
      weak_ = false;
    }

    public static final int UNINTERPRETED_OPTION_FIELD_NUMBER = 999;
    private com.google.protobuf.Internal.ProtobufList<com.google.protobuf.DescriptorProtos.UninterpretedOption> uninterpretedOption_;
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    public java.util.List<com.google.protobuf.DescriptorProtos.UninterpretedOption> getUninterpretedOptionList() {
      return uninterpretedOption_;
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    public java.util.List<? extends com.google.protobuf.DescriptorProtos.UninterpretedOptionOrBuilder>
        getUninterpretedOptionOrBuilderList() {
      return uninterpretedOption_;
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    public int getUninterpretedOptionCount() {
      return uninterpretedOption_.size();
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    public com.google.protobuf.DescriptorProtos.UninterpretedOption getUninterpretedOption(int index) {
      return uninterpretedOption_.get(index);
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    public com.google.protobuf.DescriptorProtos.UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(
        int index) {
      return uninterpretedOption_.get(index);
    }
    private void ensureUninterpretedOptionIsMutable() {
      if (!uninterpretedOption_.isModifiable()) {
        uninterpretedOption_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(uninterpretedOption_);
       }
    }

    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    private void setUninterpretedOption(
        int index, com.google.protobuf.DescriptorProtos.UninterpretedOption value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureUninterpretedOptionIsMutable();
      uninterpretedOption_.set(index, value);
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    private void setUninterpretedOption(
        int index, com.google.protobuf.DescriptorProtos.UninterpretedOption.Builder builderForValue) {
      ensureUninterpretedOptionIsMutable();
      uninterpretedOption_.set(index, builderForValue.build());
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    private void addUninterpretedOption(com.google.protobuf.DescriptorProtos.UninterpretedOption value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureUninterpretedOptionIsMutable();
      uninterpretedOption_.add(value);
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    private void addUninterpretedOption(
        int index, com.google.protobuf.DescriptorProtos.UninterpretedOption value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureUninterpretedOptionIsMutable();
      uninterpretedOption_.add(index, value);
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    private void addUninterpretedOption(
        com.google.protobuf.DescriptorProtos.UninterpretedOption.Builder builderForValue) {
      ensureUninterpretedOptionIsMutable();
      uninterpretedOption_.add(builderForValue.build());
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    private void addUninterpretedOption(
        int index, com.google.protobuf.DescriptorProtos.UninterpretedOption.Builder builderForValue) {
      ensureUninterpretedOptionIsMutable();
      uninterpretedOption_.add(index, builderForValue.build());
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    private void addAllUninterpretedOption(
        java.lang.Iterable<? extends com.google.protobuf.DescriptorProtos.UninterpretedOption> values) {
      ensureUninterpretedOptionIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, uninterpretedOption_);
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    private void clearUninterpretedOption() {
      uninterpretedOption_ = emptyProtobufList();
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    private void removeUninterpretedOption(int index) {
      ensureUninterpretedOptionIsMutable();
      uninterpretedOption_.remove(index);
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      com.google.protobuf.GeneratedMessageLite
        .ExtendableMessage<com.google.protobuf.DescriptorProtos.FieldOptions, com.google.protobuf.DescriptorProtos.FieldOptions.Builder>
          .ExtensionWriter extensionWriter =
            newExtensionWriter();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, ctype_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(2, packed_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBool(3, deprecated_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(5, lazy_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(6, jstype_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBool(10, weak_);
      }
      for (int i = 0; i < uninterpretedOption_.size(); i++) {
        output.writeMessage(999, uninterpretedOption_.get(i));
      }
      extensionWriter.writeUntil(536870912, output);
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, ctype_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, packed_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, deprecated_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, lazy_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(6, jstype_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(10, weak_);
      }
      for (int i = 0; i < uninterpretedOption_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(999, uninterpretedOption_.get(i));
      }
      size += extensionsSerializedSize();
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.google.protobuf.DescriptorProtos.FieldOptions parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.google.protobuf.DescriptorProtos.FieldOptions parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.google.protobuf.DescriptorProtos.FieldOptions parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.google.protobuf.DescriptorProtos.FieldOptions parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.google.protobuf.DescriptorProtos.FieldOptions parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.google.protobuf.DescriptorProtos.FieldOptions parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.google.protobuf.DescriptorProtos.FieldOptions parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.google.protobuf.DescriptorProtos.FieldOptions parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.google.protobuf.DescriptorProtos.FieldOptions parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.google.protobuf.DescriptorProtos.FieldOptions parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.protobuf.DescriptorProtos.FieldOptions prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code google.protobuf.FieldOptions}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.ExtendableBuilder<
          com.google.protobuf.DescriptorProtos.FieldOptions, Builder> implements
        // @@protoc_insertion_point(builder_implements:google.protobuf.FieldOptions)
        com.google.protobuf.DescriptorProtos.FieldOptionsOrBuilder {
      // Construct using com.google.protobuf.DescriptorProtos.FieldOptions.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * The ctype option instructs the C++ code generator to use a different
       * representation of the field than it normally would.  See the specific
       * options below.  This option is not yet implemented in the open source
       * release -- sorry, we'll try to include it in a future version!
       * </pre>
       *
       * <code>optional .google.protobuf.FieldOptions.CType ctype = 1 [default = STRING];</code>
       */
      public boolean hasCtype() {
        return instance.hasCtype();
      }
      /**
       * <pre>
       * The ctype option instructs the C++ code generator to use a different
       * representation of the field than it normally would.  See the specific
       * options below.  This option is not yet implemented in the open source
       * release -- sorry, we'll try to include it in a future version!
       * </pre>
       *
       * <code>optional .google.protobuf.FieldOptions.CType ctype = 1 [default = STRING];</code>
       */
      public com.google.protobuf.DescriptorProtos.FieldOptions.CType getCtype() {
        return instance.getCtype();
      }
      /**
       * <pre>
       * The ctype option instructs the C++ code generator to use a different
       * representation of the field than it normally would.  See the specific
       * options below.  This option is not yet implemented in the open source
       * release -- sorry, we'll try to include it in a future version!
       * </pre>
       *
       * <code>optional .google.protobuf.FieldOptions.CType ctype = 1 [default = STRING];</code>
       */
      public Builder setCtype(com.google.protobuf.DescriptorProtos.FieldOptions.CType value) {
        copyOnWrite();
        instance.setCtype(value);
        return this;
      }
      /**
       * <pre>
       * The ctype option instructs the C++ code generator to use a different
       * representation of the field than it normally would.  See the specific
       * options below.  This option is not yet implemented in the open source
       * release -- sorry, we'll try to include it in a future version!
       * </pre>
       *
       * <code>optional .google.protobuf.FieldOptions.CType ctype = 1 [default = STRING];</code>
       */
      public Builder clearCtype() {
        copyOnWrite();
        instance.clearCtype();
        return this;
      }

      /**
       * <pre>
       * The packed option can be enabled for repeated primitive fields to enable
       * a more efficient representation on the wire. Rather than repeatedly
       * writing the tag and type for each element, the entire array is encoded as
       * a single length-delimited blob. In proto3, only explicit setting it to
       * false will avoid using packed encoding.
       * </pre>
       *
       * <code>optional bool packed = 2;</code>
       */
      public boolean hasPacked() {
        return instance.hasPacked();
      }
      /**
       * <pre>
       * The packed option can be enabled for repeated primitive fields to enable
       * a more efficient representation on the wire. Rather than repeatedly
       * writing the tag and type for each element, the entire array is encoded as
       * a single length-delimited blob. In proto3, only explicit setting it to
       * false will avoid using packed encoding.
       * </pre>
       *
       * <code>optional bool packed = 2;</code>
       */
      public boolean getPacked() {
        return instance.getPacked();
      }
      /**
       * <pre>
       * The packed option can be enabled for repeated primitive fields to enable
       * a more efficient representation on the wire. Rather than repeatedly
       * writing the tag and type for each element, the entire array is encoded as
       * a single length-delimited blob. In proto3, only explicit setting it to
       * false will avoid using packed encoding.
       * </pre>
       *
       * <code>optional bool packed = 2;</code>
       */
      public Builder setPacked(boolean value) {
        copyOnWrite();
        instance.setPacked(value);
        return this;
      }
      /**
       * <pre>
       * The packed option can be enabled for repeated primitive fields to enable
       * a more efficient representation on the wire. Rather than repeatedly
       * writing the tag and type for each element, the entire array is encoded as
       * a single length-delimited blob. In proto3, only explicit setting it to
       * false will avoid using packed encoding.
       * </pre>
       *
       * <code>optional bool packed = 2;</code>
       */
      public Builder clearPacked() {
        copyOnWrite();
        instance.clearPacked();
        return this;
      }

      /**
       * <pre>
       * The jstype option determines the JavaScript type used for values of the
       * field.  The option is permitted only for 64 bit integral and fixed types
       * (int64, uint64, sint64, fixed64, sfixed64).  A field with jstype JS_STRING
       * is represented as JavaScript string, which avoids loss of precision that
       * can happen when a large value is converted to a floating point JavaScript.
       * Specifying JS_NUMBER for the jstype causes the generated JavaScript code to
       * use the JavaScript "number" type.  The behavior of the default option
       * JS_NORMAL is implementation dependent.
       * This option is an enum to permit additional types to be added, e.g.
       * goog.math.Integer.
       * </pre>
       *
       * <code>optional .google.protobuf.FieldOptions.JSType jstype = 6 [default = JS_NORMAL];</code>
       */
      public boolean hasJstype() {
        return instance.hasJstype();
      }
      /**
       * <pre>
       * The jstype option determines the JavaScript type used for values of the
       * field.  The option is permitted only for 64 bit integral and fixed types
       * (int64, uint64, sint64, fixed64, sfixed64).  A field with jstype JS_STRING
       * is represented as JavaScript string, which avoids loss of precision that
       * can happen when a large value is converted to a floating point JavaScript.
       * Specifying JS_NUMBER for the jstype causes the generated JavaScript code to
       * use the JavaScript "number" type.  The behavior of the default option
       * JS_NORMAL is implementation dependent.
       * This option is an enum to permit additional types to be added, e.g.
       * goog.math.Integer.
       * </pre>
       *
       * <code>optional .google.protobuf.FieldOptions.JSType jstype = 6 [default = JS_NORMAL];</code>
       */
      public com.google.protobuf.DescriptorProtos.FieldOptions.JSType getJstype() {
        return instance.getJstype();
      }
      /**
       * <pre>
       * The jstype option determines the JavaScript type used for values of the
       * field.  The option is permitted only for 64 bit integral and fixed types
       * (int64, uint64, sint64, fixed64, sfixed64).  A field with jstype JS_STRING
       * is represented as JavaScript string, which avoids loss of precision that
       * can happen when a large value is converted to a floating point JavaScript.
       * Specifying JS_NUMBER for the jstype causes the generated JavaScript code to
       * use the JavaScript "number" type.  The behavior of the default option
       * JS_NORMAL is implementation dependent.
       * This option is an enum to permit additional types to be added, e.g.
       * goog.math.Integer.
       * </pre>
       *
       * <code>optional .google.protobuf.FieldOptions.JSType jstype = 6 [default = JS_NORMAL];</code>
       */
      public Builder setJstype(com.google.protobuf.DescriptorProtos.FieldOptions.JSType value) {
        copyOnWrite();
        instance.setJstype(value);
        return this;
      }
      /**
       * <pre>
       * The jstype option determines the JavaScript type used for values of the
       * field.  The option is permitted only for 64 bit integral and fixed types
       * (int64, uint64, sint64, fixed64, sfixed64).  A field with jstype JS_STRING
       * is represented as JavaScript string, which avoids loss of precision that
       * can happen when a large value is converted to a floating point JavaScript.
       * Specifying JS_NUMBER for the jstype causes the generated JavaScript code to
       * use the JavaScript "number" type.  The behavior of the default option
       * JS_NORMAL is implementation dependent.
       * This option is an enum to permit additional types to be added, e.g.
       * goog.math.Integer.
       * </pre>
       *
       * <code>optional .google.protobuf.FieldOptions.JSType jstype = 6 [default = JS_NORMAL];</code>
       */
      public Builder clearJstype() {
        copyOnWrite();
        instance.clearJstype();
        return this;
      }

      /**
       * <pre>
       * Should this field be parsed lazily?  Lazy applies only to message-type
       * fields.  It means that when the outer message is initially parsed, the
       * inner message's contents will not be parsed but instead stored in encoded
       * form.  The inner message will actually be parsed when it is first accessed.
       * This is only a hint.  Implementations are free to choose whether to use
       * eager or lazy parsing regardless of the value of this option.  However,
       * setting this option true suggests that the protocol author believes that
       * using lazy parsing on this field is worth the additional bookkeeping
       * overhead typically needed to implement it.
       * This option does not affect the public interface of any generated code;
       * all method signatures remain the same.  Furthermore, thread-safety of the
       * interface is not affected by this option; const methods remain safe to
       * call from multiple threads concurrently, while non-const methods continue
       * to require exclusive access.
       * Note that implementations may choose not to check required fields within
       * a lazy sub-message.  That is, calling IsInitialized() on the outer message
       * may return true even if the inner message has missing required fields.
       * This is necessary because otherwise the inner message would have to be
       * parsed in order to perform the check, defeating the purpose of lazy
       * parsing.  An implementation which chooses not to check required fields
       * must be consistent about it.  That is, for any particular sub-message, the
       * implementation must either *always* check its required fields, or *never*
       * check its required fields, regardless of whether or not the message has
       * been parsed.
       * </pre>
       *
       * <code>optional bool lazy = 5 [default = false];</code>
       */
      public boolean hasLazy() {
        return instance.hasLazy();
      }
      /**
       * <pre>
       * Should this field be parsed lazily?  Lazy applies only to message-type
       * fields.  It means that when the outer message is initially parsed, the
       * inner message's contents will not be parsed but instead stored in encoded
       * form.  The inner message will actually be parsed when it is first accessed.
       * This is only a hint.  Implementations are free to choose whether to use
       * eager or lazy parsing regardless of the value of this option.  However,
       * setting this option true suggests that the protocol author believes that
       * using lazy parsing on this field is worth the additional bookkeeping
       * overhead typically needed to implement it.
       * This option does not affect the public interface of any generated code;
       * all method signatures remain the same.  Furthermore, thread-safety of the
       * interface is not affected by this option; const methods remain safe to
       * call from multiple threads concurrently, while non-const methods continue
       * to require exclusive access.
       * Note that implementations may choose not to check required fields within
       * a lazy sub-message.  That is, calling IsInitialized() on the outer message
       * may return true even if the inner message has missing required fields.
       * This is necessary because otherwise the inner message would have to be
       * parsed in order to perform the check, defeating the purpose of lazy
       * parsing.  An implementation which chooses not to check required fields
       * must be consistent about it.  That is, for any particular sub-message, the
       * implementation must either *always* check its required fields, or *never*
       * check its required fields, regardless of whether or not the message has
       * been parsed.
       * </pre>
       *
       * <code>optional bool lazy = 5 [default = false];</code>
       */
      public boolean getLazy() {
        return instance.getLazy();
      }
      /**
       * <pre>
       * Should this field be parsed lazily?  Lazy applies only to message-type
       * fields.  It means that when the outer message is initially parsed, the
       * inner message's contents will not be parsed but instead stored in encoded
       * form.  The inner message will actually be parsed when it is first accessed.
       * This is only a hint.  Implementations are free to choose whether to use
       * eager or lazy parsing regardless of the value of this option.  However,
       * setting this option true suggests that the protocol author believes that
       * using lazy parsing on this field is worth the additional bookkeeping
       * overhead typically needed to implement it.
       * This option does not affect the public interface of any generated code;
       * all method signatures remain the same.  Furthermore, thread-safety of the
       * interface is not affected by this option; const methods remain safe to
       * call from multiple threads concurrently, while non-const methods continue
       * to require exclusive access.
       * Note that implementations may choose not to check required fields within
       * a lazy sub-message.  That is, calling IsInitialized() on the outer message
       * may return true even if the inner message has missing required fields.
       * This is necessary because otherwise the inner message would have to be
       * parsed in order to perform the check, defeating the purpose of lazy
       * parsing.  An implementation which chooses not to check required fields
       * must be consistent about it.  That is, for any particular sub-message, the
       * implementation must either *always* check its required fields, or *never*
       * check its required fields, regardless of whether or not the message has
       * been parsed.
       * </pre>
       *
       * <code>optional bool lazy = 5 [default = false];</code>
       */
      public Builder setLazy(boolean value) {
        copyOnWrite();
        instance.setLazy(value);
        return this;
      }
      /**
       * <pre>
       * Should this field be parsed lazily?  Lazy applies only to message-type
       * fields.  It means that when the outer message is initially parsed, the
       * inner message's contents will not be parsed but instead stored in encoded
       * form.  The inner message will actually be parsed when it is first accessed.
       * This is only a hint.  Implementations are free to choose whether to use
       * eager or lazy parsing regardless of the value of this option.  However,
       * setting this option true suggests that the protocol author believes that
       * using lazy parsing on this field is worth the additional bookkeeping
       * overhead typically needed to implement it.
       * This option does not affect the public interface of any generated code;
       * all method signatures remain the same.  Furthermore, thread-safety of the
       * interface is not affected by this option; const methods remain safe to
       * call from multiple threads concurrently, while non-const methods continue
       * to require exclusive access.
       * Note that implementations may choose not to check required fields within
       * a lazy sub-message.  That is, calling IsInitialized() on the outer message
       * may return true even if the inner message has missing required fields.
       * This is necessary because otherwise the inner message would have to be
       * parsed in order to perform the check, defeating the purpose of lazy
       * parsing.  An implementation which chooses not to check required fields
       * must be consistent about it.  That is, for any particular sub-message, the
       * implementation must either *always* check its required fields, or *never*
       * check its required fields, regardless of whether or not the message has
       * been parsed.
       * </pre>
       *
       * <code>optional bool lazy = 5 [default = false];</code>
       */
      public Builder clearLazy() {
        copyOnWrite();
        instance.clearLazy();
        return this;
      }

      /**
       * <pre>
       * Is this field deprecated?
       * Depending on the target platform, this can emit Deprecated annotations
       * for accessors, or it will be completely ignored; in the very least, this
       * is a formalization for deprecating fields.
       * </pre>
       *
       * <code>optional bool deprecated = 3 [default = false];</code>
       */
      public boolean hasDeprecated() {
        return instance.hasDeprecated();
      }
      /**
       * <pre>
       * Is this field deprecated?
       * Depending on the target platform, this can emit Deprecated annotations
       * for accessors, or it will be completely ignored; in the very least, this
       * is a formalization for deprecating fields.
       * </pre>
       *
       * <code>optional bool deprecated = 3 [default = false];</code>
       */
      public boolean getDeprecated() {
        return instance.getDeprecated();
      }
      /**
       * <pre>
       * Is this field deprecated?
       * Depending on the target platform, this can emit Deprecated annotations
       * for accessors, or it will be completely ignored; in the very least, this
       * is a formalization for deprecating fields.
       * </pre>
       *
       * <code>optional bool deprecated = 3 [default = false];</code>
       */
      public Builder setDeprecated(boolean value) {
        copyOnWrite();
        instance.setDeprecated(value);
        return this;
      }
      /**
       * <pre>
       * Is this field deprecated?
       * Depending on the target platform, this can emit Deprecated annotations
       * for accessors, or it will be completely ignored; in the very least, this
       * is a formalization for deprecating fields.
       * </pre>
       *
       * <code>optional bool deprecated = 3 [default = false];</code>
       */
      public Builder clearDeprecated() {
        copyOnWrite();
        instance.clearDeprecated();
        return this;
      }

      /**
       * <pre>
       * For Google-internal migration only. Do not use.
       * </pre>
       *
       * <code>optional bool weak = 10 [default = false];</code>
       */
      public boolean hasWeak() {
        return instance.hasWeak();
      }
      /**
       * <pre>
       * For Google-internal migration only. Do not use.
       * </pre>
       *
       * <code>optional bool weak = 10 [default = false];</code>
       */
      public boolean getWeak() {
        return instance.getWeak();
      }
      /**
       * <pre>
       * For Google-internal migration only. Do not use.
       * </pre>
       *
       * <code>optional bool weak = 10 [default = false];</code>
       */
      public Builder setWeak(boolean value) {
        copyOnWrite();
        instance.setWeak(value);
        return this;
      }
      /**
       * <pre>
       * For Google-internal migration only. Do not use.
       * </pre>
       *
       * <code>optional bool weak = 10 [default = false];</code>
       */
      public Builder clearWeak() {
        copyOnWrite();
        instance.clearWeak();
        return this;
      }

      /**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public java.util.List<com.google.protobuf.DescriptorProtos.UninterpretedOption> getUninterpretedOptionList() {
        return java.util.Collections.unmodifiableList(
            instance.getUninterpretedOptionList());
      }
      /**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public int getUninterpretedOptionCount() {
        return instance.getUninterpretedOptionCount();
      }/**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public com.google.protobuf.DescriptorProtos.UninterpretedOption getUninterpretedOption(int index) {
        return instance.getUninterpretedOption(index);
      }
      /**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public Builder setUninterpretedOption(
          int index, com.google.protobuf.DescriptorProtos.UninterpretedOption value) {
        copyOnWrite();
        instance.setUninterpretedOption(index, value);
        return this;
      }
      /**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public Builder setUninterpretedOption(
          int index, com.google.protobuf.DescriptorProtos.UninterpretedOption.Builder builderForValue) {
        copyOnWrite();
        instance.setUninterpretedOption(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public Builder addUninterpretedOption(com.google.protobuf.DescriptorProtos.UninterpretedOption value) {
        copyOnWrite();
        instance.addUninterpretedOption(value);
        return this;
      }
      /**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public Builder addUninterpretedOption(
          int index, com.google.protobuf.DescriptorProtos.UninterpretedOption value) {
        copyOnWrite();
        instance.addUninterpretedOption(index, value);
        return this;
      }
      /**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public Builder addUninterpretedOption(
          com.google.protobuf.DescriptorProtos.UninterpretedOption.Builder builderForValue) {
        copyOnWrite();
        instance.addUninterpretedOption(builderForValue);
        return this;
      }
      /**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public Builder addUninterpretedOption(
          int index, com.google.protobuf.DescriptorProtos.UninterpretedOption.Builder builderForValue) {
        copyOnWrite();
        instance.addUninterpretedOption(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public Builder addAllUninterpretedOption(
          java.lang.Iterable<? extends com.google.protobuf.DescriptorProtos.UninterpretedOption> values) {
        copyOnWrite();
        instance.addAllUninterpretedOption(values);
        return this;
      }
      /**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public Builder clearUninterpretedOption() {
        copyOnWrite();
        instance.clearUninterpretedOption();
        return this;
      }
      /**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public Builder removeUninterpretedOption(int index) {
        copyOnWrite();
        instance.removeUninterpretedOption(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:google.protobuf.FieldOptions)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.google.protobuf.DescriptorProtos.FieldOptions();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          for (int i = 0; i < getUninterpretedOptionCount(); i++) {
            if (!getUninterpretedOption(i).isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (!extensionsAreInitialized()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          uninterpretedOption_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.google.protobuf.DescriptorProtos.FieldOptions other = (com.google.protobuf.DescriptorProtos.FieldOptions) arg1;
          ctype_ = visitor.visitInt(hasCtype(), ctype_,
              other.hasCtype(), other.ctype_);
          packed_ = visitor.visitBoolean(
              hasPacked(), packed_,
              other.hasPacked(), other.packed_);
          jstype_ = visitor.visitInt(hasJstype(), jstype_,
              other.hasJstype(), other.jstype_);
          lazy_ = visitor.visitBoolean(
              hasLazy(), lazy_,
              other.hasLazy(), other.lazy_);
          deprecated_ = visitor.visitBoolean(
              hasDeprecated(), deprecated_,
              other.hasDeprecated(), other.deprecated_);
          weak_ = visitor.visitBoolean(
              hasWeak(), weak_,
              other.hasWeak(), other.weak_);
          uninterpretedOption_= visitor.visitList(uninterpretedOption_, other.uninterpretedOption_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(getDefaultInstanceForType(),
                                         input, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  int rawValue = input.readEnum();
                  com.google.protobuf.DescriptorProtos.FieldOptions.CType value = com.google.protobuf.DescriptorProtos.FieldOptions.CType.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(1, rawValue);
                  } else {
                    bitField0_ |= 0x00000001;
                    ctype_ = rawValue;
                  }
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  packed_ = input.readBool();
                  break;
                }
                case 24: {
                  bitField0_ |= 0x00000010;
                  deprecated_ = input.readBool();
                  break;
                }
                case 40: {
                  bitField0_ |= 0x00000008;
                  lazy_ = input.readBool();
                  break;
                }
                case 48: {
                  int rawValue = input.readEnum();
                  com.google.protobuf.DescriptorProtos.FieldOptions.JSType value = com.google.protobuf.DescriptorProtos.FieldOptions.JSType.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(6, rawValue);
                  } else {
                    bitField0_ |= 0x00000004;
                    jstype_ = rawValue;
                  }
                  break;
                }
                case 80: {
                  bitField0_ |= 0x00000020;
                  weak_ = input.readBool();
                  break;
                }
                case 7994: {
                  if (!uninterpretedOption_.isModifiable()) {
                    uninterpretedOption_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(uninterpretedOption_);
                  }
                  uninterpretedOption_.add(
                      input.readMessage(com.google.protobuf.DescriptorProtos.UninterpretedOption.parser(), extensionRegistry));
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.google.protobuf.DescriptorProtos.FieldOptions.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:google.protobuf.FieldOptions)
    private static final com.google.protobuf.DescriptorProtos.FieldOptions DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new FieldOptions();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.google.protobuf.DescriptorProtos.FieldOptions getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<FieldOptions> PARSER;

    public static com.google.protobuf.Parser<FieldOptions> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface OneofOptionsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.protobuf.OneofOptions)
       com.google.protobuf.GeneratedMessageLite.
            ExtendableMessageOrBuilder<
                OneofOptions, OneofOptions.Builder> {

    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    java.util.List<com.google.protobuf.DescriptorProtos.UninterpretedOption>
        getUninterpretedOptionList();
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    com.google.protobuf.DescriptorProtos.UninterpretedOption getUninterpretedOption(int index);
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    int getUninterpretedOptionCount();
  }
  /**
   * Protobuf type {@code google.protobuf.OneofOptions}
   */
  public  static final class OneofOptions extends
      com.google.protobuf.GeneratedMessageLite.ExtendableMessage<
        OneofOptions, OneofOptions.Builder> implements
      // @@protoc_insertion_point(message_implements:google.protobuf.OneofOptions)
      OneofOptionsOrBuilder {
    private OneofOptions() {
      uninterpretedOption_ = emptyProtobufList();
    }
    public static final int UNINTERPRETED_OPTION_FIELD_NUMBER = 999;
    private com.google.protobuf.Internal.ProtobufList<com.google.protobuf.DescriptorProtos.UninterpretedOption> uninterpretedOption_;
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    public java.util.List<com.google.protobuf.DescriptorProtos.UninterpretedOption> getUninterpretedOptionList() {
      return uninterpretedOption_;
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    public java.util.List<? extends com.google.protobuf.DescriptorProtos.UninterpretedOptionOrBuilder>
        getUninterpretedOptionOrBuilderList() {
      return uninterpretedOption_;
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    public int getUninterpretedOptionCount() {
      return uninterpretedOption_.size();
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    public com.google.protobuf.DescriptorProtos.UninterpretedOption getUninterpretedOption(int index) {
      return uninterpretedOption_.get(index);
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    public com.google.protobuf.DescriptorProtos.UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(
        int index) {
      return uninterpretedOption_.get(index);
    }
    private void ensureUninterpretedOptionIsMutable() {
      if (!uninterpretedOption_.isModifiable()) {
        uninterpretedOption_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(uninterpretedOption_);
       }
    }

    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    private void setUninterpretedOption(
        int index, com.google.protobuf.DescriptorProtos.UninterpretedOption value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureUninterpretedOptionIsMutable();
      uninterpretedOption_.set(index, value);
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    private void setUninterpretedOption(
        int index, com.google.protobuf.DescriptorProtos.UninterpretedOption.Builder builderForValue) {
      ensureUninterpretedOptionIsMutable();
      uninterpretedOption_.set(index, builderForValue.build());
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    private void addUninterpretedOption(com.google.protobuf.DescriptorProtos.UninterpretedOption value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureUninterpretedOptionIsMutable();
      uninterpretedOption_.add(value);
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    private void addUninterpretedOption(
        int index, com.google.protobuf.DescriptorProtos.UninterpretedOption value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureUninterpretedOptionIsMutable();
      uninterpretedOption_.add(index, value);
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    private void addUninterpretedOption(
        com.google.protobuf.DescriptorProtos.UninterpretedOption.Builder builderForValue) {
      ensureUninterpretedOptionIsMutable();
      uninterpretedOption_.add(builderForValue.build());
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    private void addUninterpretedOption(
        int index, com.google.protobuf.DescriptorProtos.UninterpretedOption.Builder builderForValue) {
      ensureUninterpretedOptionIsMutable();
      uninterpretedOption_.add(index, builderForValue.build());
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    private void addAllUninterpretedOption(
        java.lang.Iterable<? extends com.google.protobuf.DescriptorProtos.UninterpretedOption> values) {
      ensureUninterpretedOptionIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, uninterpretedOption_);
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    private void clearUninterpretedOption() {
      uninterpretedOption_ = emptyProtobufList();
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    private void removeUninterpretedOption(int index) {
      ensureUninterpretedOptionIsMutable();
      uninterpretedOption_.remove(index);
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      com.google.protobuf.GeneratedMessageLite
        .ExtendableMessage<com.google.protobuf.DescriptorProtos.OneofOptions, com.google.protobuf.DescriptorProtos.OneofOptions.Builder>
          .ExtensionWriter extensionWriter =
            newExtensionWriter();
      for (int i = 0; i < uninterpretedOption_.size(); i++) {
        output.writeMessage(999, uninterpretedOption_.get(i));
      }
      extensionWriter.writeUntil(536870912, output);
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < uninterpretedOption_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(999, uninterpretedOption_.get(i));
      }
      size += extensionsSerializedSize();
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.google.protobuf.DescriptorProtos.OneofOptions parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.google.protobuf.DescriptorProtos.OneofOptions parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.google.protobuf.DescriptorProtos.OneofOptions parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.google.protobuf.DescriptorProtos.OneofOptions parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.google.protobuf.DescriptorProtos.OneofOptions parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.google.protobuf.DescriptorProtos.OneofOptions parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.google.protobuf.DescriptorProtos.OneofOptions parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.google.protobuf.DescriptorProtos.OneofOptions parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.google.protobuf.DescriptorProtos.OneofOptions parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.google.protobuf.DescriptorProtos.OneofOptions parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.protobuf.DescriptorProtos.OneofOptions prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code google.protobuf.OneofOptions}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.ExtendableBuilder<
          com.google.protobuf.DescriptorProtos.OneofOptions, Builder> implements
        // @@protoc_insertion_point(builder_implements:google.protobuf.OneofOptions)
        com.google.protobuf.DescriptorProtos.OneofOptionsOrBuilder {
      // Construct using com.google.protobuf.DescriptorProtos.OneofOptions.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public java.util.List<com.google.protobuf.DescriptorProtos.UninterpretedOption> getUninterpretedOptionList() {
        return java.util.Collections.unmodifiableList(
            instance.getUninterpretedOptionList());
      }
      /**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public int getUninterpretedOptionCount() {
        return instance.getUninterpretedOptionCount();
      }/**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public com.google.protobuf.DescriptorProtos.UninterpretedOption getUninterpretedOption(int index) {
        return instance.getUninterpretedOption(index);
      }
      /**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public Builder setUninterpretedOption(
          int index, com.google.protobuf.DescriptorProtos.UninterpretedOption value) {
        copyOnWrite();
        instance.setUninterpretedOption(index, value);
        return this;
      }
      /**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public Builder setUninterpretedOption(
          int index, com.google.protobuf.DescriptorProtos.UninterpretedOption.Builder builderForValue) {
        copyOnWrite();
        instance.setUninterpretedOption(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public Builder addUninterpretedOption(com.google.protobuf.DescriptorProtos.UninterpretedOption value) {
        copyOnWrite();
        instance.addUninterpretedOption(value);
        return this;
      }
      /**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public Builder addUninterpretedOption(
          int index, com.google.protobuf.DescriptorProtos.UninterpretedOption value) {
        copyOnWrite();
        instance.addUninterpretedOption(index, value);
        return this;
      }
      /**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public Builder addUninterpretedOption(
          com.google.protobuf.DescriptorProtos.UninterpretedOption.Builder builderForValue) {
        copyOnWrite();
        instance.addUninterpretedOption(builderForValue);
        return this;
      }
      /**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public Builder addUninterpretedOption(
          int index, com.google.protobuf.DescriptorProtos.UninterpretedOption.Builder builderForValue) {
        copyOnWrite();
        instance.addUninterpretedOption(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public Builder addAllUninterpretedOption(
          java.lang.Iterable<? extends com.google.protobuf.DescriptorProtos.UninterpretedOption> values) {
        copyOnWrite();
        instance.addAllUninterpretedOption(values);
        return this;
      }
      /**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public Builder clearUninterpretedOption() {
        copyOnWrite();
        instance.clearUninterpretedOption();
        return this;
      }
      /**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public Builder removeUninterpretedOption(int index) {
        copyOnWrite();
        instance.removeUninterpretedOption(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:google.protobuf.OneofOptions)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.google.protobuf.DescriptorProtos.OneofOptions();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          for (int i = 0; i < getUninterpretedOptionCount(); i++) {
            if (!getUninterpretedOption(i).isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (!extensionsAreInitialized()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          uninterpretedOption_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.google.protobuf.DescriptorProtos.OneofOptions other = (com.google.protobuf.DescriptorProtos.OneofOptions) arg1;
          uninterpretedOption_= visitor.visitList(uninterpretedOption_, other.uninterpretedOption_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(getDefaultInstanceForType(),
                                         input, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
                case 7994: {
                  if (!uninterpretedOption_.isModifiable()) {
                    uninterpretedOption_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(uninterpretedOption_);
                  }
                  uninterpretedOption_.add(
                      input.readMessage(com.google.protobuf.DescriptorProtos.UninterpretedOption.parser(), extensionRegistry));
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.google.protobuf.DescriptorProtos.OneofOptions.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:google.protobuf.OneofOptions)
    private static final com.google.protobuf.DescriptorProtos.OneofOptions DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new OneofOptions();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.google.protobuf.DescriptorProtos.OneofOptions getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<OneofOptions> PARSER;

    public static com.google.protobuf.Parser<OneofOptions> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface EnumOptionsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.protobuf.EnumOptions)
       com.google.protobuf.GeneratedMessageLite.
            ExtendableMessageOrBuilder<
                EnumOptions, EnumOptions.Builder> {

    /**
     * <pre>
     * Set this option to true to allow mapping different tag names to the same
     * value.
     * </pre>
     *
     * <code>optional bool allow_alias = 2;</code>
     */
    boolean hasAllowAlias();
    /**
     * <pre>
     * Set this option to true to allow mapping different tag names to the same
     * value.
     * </pre>
     *
     * <code>optional bool allow_alias = 2;</code>
     */
    boolean getAllowAlias();

    /**
     * <pre>
     * Is this enum deprecated?
     * Depending on the target platform, this can emit Deprecated annotations
     * for the enum, or it will be completely ignored; in the very least, this
     * is a formalization for deprecating enums.
     * </pre>
     *
     * <code>optional bool deprecated = 3 [default = false];</code>
     */
    boolean hasDeprecated();
    /**
     * <pre>
     * Is this enum deprecated?
     * Depending on the target platform, this can emit Deprecated annotations
     * for the enum, or it will be completely ignored; in the very least, this
     * is a formalization for deprecating enums.
     * </pre>
     *
     * <code>optional bool deprecated = 3 [default = false];</code>
     */
    boolean getDeprecated();

    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    java.util.List<com.google.protobuf.DescriptorProtos.UninterpretedOption>
        getUninterpretedOptionList();
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    com.google.protobuf.DescriptorProtos.UninterpretedOption getUninterpretedOption(int index);
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    int getUninterpretedOptionCount();
  }
  /**
   * Protobuf type {@code google.protobuf.EnumOptions}
   */
  public  static final class EnumOptions extends
      com.google.protobuf.GeneratedMessageLite.ExtendableMessage<
        EnumOptions, EnumOptions.Builder> implements
      // @@protoc_insertion_point(message_implements:google.protobuf.EnumOptions)
      EnumOptionsOrBuilder {
    private EnumOptions() {
      uninterpretedOption_ = emptyProtobufList();
    }
    private int bitField0_;
    public static final int ALLOW_ALIAS_FIELD_NUMBER = 2;
    private boolean allowAlias_;
    /**
     * <pre>
     * Set this option to true to allow mapping different tag names to the same
     * value.
     * </pre>
     *
     * <code>optional bool allow_alias = 2;</code>
     */
    public boolean hasAllowAlias() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * Set this option to true to allow mapping different tag names to the same
     * value.
     * </pre>
     *
     * <code>optional bool allow_alias = 2;</code>
     */
    public boolean getAllowAlias() {
      return allowAlias_;
    }
    /**
     * <pre>
     * Set this option to true to allow mapping different tag names to the same
     * value.
     * </pre>
     *
     * <code>optional bool allow_alias = 2;</code>
     */
    private void setAllowAlias(boolean value) {
      bitField0_ |= 0x00000001;
      allowAlias_ = value;
    }
    /**
     * <pre>
     * Set this option to true to allow mapping different tag names to the same
     * value.
     * </pre>
     *
     * <code>optional bool allow_alias = 2;</code>
     */
    private void clearAllowAlias() {
      bitField0_ = (bitField0_ & ~0x00000001);
      allowAlias_ = false;
    }

    public static final int DEPRECATED_FIELD_NUMBER = 3;
    private boolean deprecated_;
    /**
     * <pre>
     * Is this enum deprecated?
     * Depending on the target platform, this can emit Deprecated annotations
     * for the enum, or it will be completely ignored; in the very least, this
     * is a formalization for deprecating enums.
     * </pre>
     *
     * <code>optional bool deprecated = 3 [default = false];</code>
     */
    public boolean hasDeprecated() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * Is this enum deprecated?
     * Depending on the target platform, this can emit Deprecated annotations
     * for the enum, or it will be completely ignored; in the very least, this
     * is a formalization for deprecating enums.
     * </pre>
     *
     * <code>optional bool deprecated = 3 [default = false];</code>
     */
    public boolean getDeprecated() {
      return deprecated_;
    }
    /**
     * <pre>
     * Is this enum deprecated?
     * Depending on the target platform, this can emit Deprecated annotations
     * for the enum, or it will be completely ignored; in the very least, this
     * is a formalization for deprecating enums.
     * </pre>
     *
     * <code>optional bool deprecated = 3 [default = false];</code>
     */
    private void setDeprecated(boolean value) {
      bitField0_ |= 0x00000002;
      deprecated_ = value;
    }
    /**
     * <pre>
     * Is this enum deprecated?
     * Depending on the target platform, this can emit Deprecated annotations
     * for the enum, or it will be completely ignored; in the very least, this
     * is a formalization for deprecating enums.
     * </pre>
     *
     * <code>optional bool deprecated = 3 [default = false];</code>
     */
    private void clearDeprecated() {
      bitField0_ = (bitField0_ & ~0x00000002);
      deprecated_ = false;
    }

    public static final int UNINTERPRETED_OPTION_FIELD_NUMBER = 999;
    private com.google.protobuf.Internal.ProtobufList<com.google.protobuf.DescriptorProtos.UninterpretedOption> uninterpretedOption_;
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    public java.util.List<com.google.protobuf.DescriptorProtos.UninterpretedOption> getUninterpretedOptionList() {
      return uninterpretedOption_;
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    public java.util.List<? extends com.google.protobuf.DescriptorProtos.UninterpretedOptionOrBuilder>
        getUninterpretedOptionOrBuilderList() {
      return uninterpretedOption_;
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    public int getUninterpretedOptionCount() {
      return uninterpretedOption_.size();
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    public com.google.protobuf.DescriptorProtos.UninterpretedOption getUninterpretedOption(int index) {
      return uninterpretedOption_.get(index);
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    public com.google.protobuf.DescriptorProtos.UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(
        int index) {
      return uninterpretedOption_.get(index);
    }
    private void ensureUninterpretedOptionIsMutable() {
      if (!uninterpretedOption_.isModifiable()) {
        uninterpretedOption_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(uninterpretedOption_);
       }
    }

    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    private void setUninterpretedOption(
        int index, com.google.protobuf.DescriptorProtos.UninterpretedOption value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureUninterpretedOptionIsMutable();
      uninterpretedOption_.set(index, value);
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    private void setUninterpretedOption(
        int index, com.google.protobuf.DescriptorProtos.UninterpretedOption.Builder builderForValue) {
      ensureUninterpretedOptionIsMutable();
      uninterpretedOption_.set(index, builderForValue.build());
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    private void addUninterpretedOption(com.google.protobuf.DescriptorProtos.UninterpretedOption value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureUninterpretedOptionIsMutable();
      uninterpretedOption_.add(value);
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    private void addUninterpretedOption(
        int index, com.google.protobuf.DescriptorProtos.UninterpretedOption value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureUninterpretedOptionIsMutable();
      uninterpretedOption_.add(index, value);
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    private void addUninterpretedOption(
        com.google.protobuf.DescriptorProtos.UninterpretedOption.Builder builderForValue) {
      ensureUninterpretedOptionIsMutable();
      uninterpretedOption_.add(builderForValue.build());
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    private void addUninterpretedOption(
        int index, com.google.protobuf.DescriptorProtos.UninterpretedOption.Builder builderForValue) {
      ensureUninterpretedOptionIsMutable();
      uninterpretedOption_.add(index, builderForValue.build());
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    private void addAllUninterpretedOption(
        java.lang.Iterable<? extends com.google.protobuf.DescriptorProtos.UninterpretedOption> values) {
      ensureUninterpretedOptionIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, uninterpretedOption_);
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    private void clearUninterpretedOption() {
      uninterpretedOption_ = emptyProtobufList();
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    private void removeUninterpretedOption(int index) {
      ensureUninterpretedOptionIsMutable();
      uninterpretedOption_.remove(index);
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      com.google.protobuf.GeneratedMessageLite
        .ExtendableMessage<com.google.protobuf.DescriptorProtos.EnumOptions, com.google.protobuf.DescriptorProtos.EnumOptions.Builder>
          .ExtensionWriter extensionWriter =
            newExtensionWriter();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(2, allowAlias_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(3, deprecated_);
      }
      for (int i = 0; i < uninterpretedOption_.size(); i++) {
        output.writeMessage(999, uninterpretedOption_.get(i));
      }
      extensionWriter.writeUntil(536870912, output);
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, allowAlias_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, deprecated_);
      }
      for (int i = 0; i < uninterpretedOption_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(999, uninterpretedOption_.get(i));
      }
      size += extensionsSerializedSize();
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.google.protobuf.DescriptorProtos.EnumOptions parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.google.protobuf.DescriptorProtos.EnumOptions parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.google.protobuf.DescriptorProtos.EnumOptions parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.google.protobuf.DescriptorProtos.EnumOptions parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.google.protobuf.DescriptorProtos.EnumOptions parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.google.protobuf.DescriptorProtos.EnumOptions parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.google.protobuf.DescriptorProtos.EnumOptions parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.google.protobuf.DescriptorProtos.EnumOptions parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.google.protobuf.DescriptorProtos.EnumOptions parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.google.protobuf.DescriptorProtos.EnumOptions parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.protobuf.DescriptorProtos.EnumOptions prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code google.protobuf.EnumOptions}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.ExtendableBuilder<
          com.google.protobuf.DescriptorProtos.EnumOptions, Builder> implements
        // @@protoc_insertion_point(builder_implements:google.protobuf.EnumOptions)
        com.google.protobuf.DescriptorProtos.EnumOptionsOrBuilder {
      // Construct using com.google.protobuf.DescriptorProtos.EnumOptions.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Set this option to true to allow mapping different tag names to the same
       * value.
       * </pre>
       *
       * <code>optional bool allow_alias = 2;</code>
       */
      public boolean hasAllowAlias() {
        return instance.hasAllowAlias();
      }
      /**
       * <pre>
       * Set this option to true to allow mapping different tag names to the same
       * value.
       * </pre>
       *
       * <code>optional bool allow_alias = 2;</code>
       */
      public boolean getAllowAlias() {
        return instance.getAllowAlias();
      }
      /**
       * <pre>
       * Set this option to true to allow mapping different tag names to the same
       * value.
       * </pre>
       *
       * <code>optional bool allow_alias = 2;</code>
       */
      public Builder setAllowAlias(boolean value) {
        copyOnWrite();
        instance.setAllowAlias(value);
        return this;
      }
      /**
       * <pre>
       * Set this option to true to allow mapping different tag names to the same
       * value.
       * </pre>
       *
       * <code>optional bool allow_alias = 2;</code>
       */
      public Builder clearAllowAlias() {
        copyOnWrite();
        instance.clearAllowAlias();
        return this;
      }

      /**
       * <pre>
       * Is this enum deprecated?
       * Depending on the target platform, this can emit Deprecated annotations
       * for the enum, or it will be completely ignored; in the very least, this
       * is a formalization for deprecating enums.
       * </pre>
       *
       * <code>optional bool deprecated = 3 [default = false];</code>
       */
      public boolean hasDeprecated() {
        return instance.hasDeprecated();
      }
      /**
       * <pre>
       * Is this enum deprecated?
       * Depending on the target platform, this can emit Deprecated annotations
       * for the enum, or it will be completely ignored; in the very least, this
       * is a formalization for deprecating enums.
       * </pre>
       *
       * <code>optional bool deprecated = 3 [default = false];</code>
       */
      public boolean getDeprecated() {
        return instance.getDeprecated();
      }
      /**
       * <pre>
       * Is this enum deprecated?
       * Depending on the target platform, this can emit Deprecated annotations
       * for the enum, or it will be completely ignored; in the very least, this
       * is a formalization for deprecating enums.
       * </pre>
       *
       * <code>optional bool deprecated = 3 [default = false];</code>
       */
      public Builder setDeprecated(boolean value) {
        copyOnWrite();
        instance.setDeprecated(value);
        return this;
      }
      /**
       * <pre>
       * Is this enum deprecated?
       * Depending on the target platform, this can emit Deprecated annotations
       * for the enum, or it will be completely ignored; in the very least, this
       * is a formalization for deprecating enums.
       * </pre>
       *
       * <code>optional bool deprecated = 3 [default = false];</code>
       */
      public Builder clearDeprecated() {
        copyOnWrite();
        instance.clearDeprecated();
        return this;
      }

      /**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public java.util.List<com.google.protobuf.DescriptorProtos.UninterpretedOption> getUninterpretedOptionList() {
        return java.util.Collections.unmodifiableList(
            instance.getUninterpretedOptionList());
      }
      /**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public int getUninterpretedOptionCount() {
        return instance.getUninterpretedOptionCount();
      }/**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public com.google.protobuf.DescriptorProtos.UninterpretedOption getUninterpretedOption(int index) {
        return instance.getUninterpretedOption(index);
      }
      /**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public Builder setUninterpretedOption(
          int index, com.google.protobuf.DescriptorProtos.UninterpretedOption value) {
        copyOnWrite();
        instance.setUninterpretedOption(index, value);
        return this;
      }
      /**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public Builder setUninterpretedOption(
          int index, com.google.protobuf.DescriptorProtos.UninterpretedOption.Builder builderForValue) {
        copyOnWrite();
        instance.setUninterpretedOption(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public Builder addUninterpretedOption(com.google.protobuf.DescriptorProtos.UninterpretedOption value) {
        copyOnWrite();
        instance.addUninterpretedOption(value);
        return this;
      }
      /**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public Builder addUninterpretedOption(
          int index, com.google.protobuf.DescriptorProtos.UninterpretedOption value) {
        copyOnWrite();
        instance.addUninterpretedOption(index, value);
        return this;
      }
      /**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public Builder addUninterpretedOption(
          com.google.protobuf.DescriptorProtos.UninterpretedOption.Builder builderForValue) {
        copyOnWrite();
        instance.addUninterpretedOption(builderForValue);
        return this;
      }
      /**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public Builder addUninterpretedOption(
          int index, com.google.protobuf.DescriptorProtos.UninterpretedOption.Builder builderForValue) {
        copyOnWrite();
        instance.addUninterpretedOption(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public Builder addAllUninterpretedOption(
          java.lang.Iterable<? extends com.google.protobuf.DescriptorProtos.UninterpretedOption> values) {
        copyOnWrite();
        instance.addAllUninterpretedOption(values);
        return this;
      }
      /**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public Builder clearUninterpretedOption() {
        copyOnWrite();
        instance.clearUninterpretedOption();
        return this;
      }
      /**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public Builder removeUninterpretedOption(int index) {
        copyOnWrite();
        instance.removeUninterpretedOption(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:google.protobuf.EnumOptions)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.google.protobuf.DescriptorProtos.EnumOptions();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          for (int i = 0; i < getUninterpretedOptionCount(); i++) {
            if (!getUninterpretedOption(i).isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (!extensionsAreInitialized()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          uninterpretedOption_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.google.protobuf.DescriptorProtos.EnumOptions other = (com.google.protobuf.DescriptorProtos.EnumOptions) arg1;
          allowAlias_ = visitor.visitBoolean(
              hasAllowAlias(), allowAlias_,
              other.hasAllowAlias(), other.allowAlias_);
          deprecated_ = visitor.visitBoolean(
              hasDeprecated(), deprecated_,
              other.hasDeprecated(), other.deprecated_);
          uninterpretedOption_= visitor.visitList(uninterpretedOption_, other.uninterpretedOption_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(getDefaultInstanceForType(),
                                         input, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000001;
                  allowAlias_ = input.readBool();
                  break;
                }
                case 24: {
                  bitField0_ |= 0x00000002;
                  deprecated_ = input.readBool();
                  break;
                }
                case 7994: {
                  if (!uninterpretedOption_.isModifiable()) {
                    uninterpretedOption_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(uninterpretedOption_);
                  }
                  uninterpretedOption_.add(
                      input.readMessage(com.google.protobuf.DescriptorProtos.UninterpretedOption.parser(), extensionRegistry));
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.google.protobuf.DescriptorProtos.EnumOptions.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:google.protobuf.EnumOptions)
    private static final com.google.protobuf.DescriptorProtos.EnumOptions DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EnumOptions();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.google.protobuf.DescriptorProtos.EnumOptions getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<EnumOptions> PARSER;

    public static com.google.protobuf.Parser<EnumOptions> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface EnumValueOptionsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.protobuf.EnumValueOptions)
       com.google.protobuf.GeneratedMessageLite.
            ExtendableMessageOrBuilder<
                EnumValueOptions, EnumValueOptions.Builder> {

    /**
     * <pre>
     * Is this enum value deprecated?
     * Depending on the target platform, this can emit Deprecated annotations
     * for the enum value, or it will be completely ignored; in the very least,
     * this is a formalization for deprecating enum values.
     * </pre>
     *
     * <code>optional bool deprecated = 1 [default = false];</code>
     */
    boolean hasDeprecated();
    /**
     * <pre>
     * Is this enum value deprecated?
     * Depending on the target platform, this can emit Deprecated annotations
     * for the enum value, or it will be completely ignored; in the very least,
     * this is a formalization for deprecating enum values.
     * </pre>
     *
     * <code>optional bool deprecated = 1 [default = false];</code>
     */
    boolean getDeprecated();

    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    java.util.List<com.google.protobuf.DescriptorProtos.UninterpretedOption>
        getUninterpretedOptionList();
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    com.google.protobuf.DescriptorProtos.UninterpretedOption getUninterpretedOption(int index);
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    int getUninterpretedOptionCount();
  }
  /**
   * Protobuf type {@code google.protobuf.EnumValueOptions}
   */
  public  static final class EnumValueOptions extends
      com.google.protobuf.GeneratedMessageLite.ExtendableMessage<
        EnumValueOptions, EnumValueOptions.Builder> implements
      // @@protoc_insertion_point(message_implements:google.protobuf.EnumValueOptions)
      EnumValueOptionsOrBuilder {
    private EnumValueOptions() {
      uninterpretedOption_ = emptyProtobufList();
    }
    private int bitField0_;
    public static final int DEPRECATED_FIELD_NUMBER = 1;
    private boolean deprecated_;
    /**
     * <pre>
     * Is this enum value deprecated?
     * Depending on the target platform, this can emit Deprecated annotations
     * for the enum value, or it will be completely ignored; in the very least,
     * this is a formalization for deprecating enum values.
     * </pre>
     *
     * <code>optional bool deprecated = 1 [default = false];</code>
     */
    public boolean hasDeprecated() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * Is this enum value deprecated?
     * Depending on the target platform, this can emit Deprecated annotations
     * for the enum value, or it will be completely ignored; in the very least,
     * this is a formalization for deprecating enum values.
     * </pre>
     *
     * <code>optional bool deprecated = 1 [default = false];</code>
     */
    public boolean getDeprecated() {
      return deprecated_;
    }
    /**
     * <pre>
     * Is this enum value deprecated?
     * Depending on the target platform, this can emit Deprecated annotations
     * for the enum value, or it will be completely ignored; in the very least,
     * this is a formalization for deprecating enum values.
     * </pre>
     *
     * <code>optional bool deprecated = 1 [default = false];</code>
     */
    private void setDeprecated(boolean value) {
      bitField0_ |= 0x00000001;
      deprecated_ = value;
    }
    /**
     * <pre>
     * Is this enum value deprecated?
     * Depending on the target platform, this can emit Deprecated annotations
     * for the enum value, or it will be completely ignored; in the very least,
     * this is a formalization for deprecating enum values.
     * </pre>
     *
     * <code>optional bool deprecated = 1 [default = false];</code>
     */
    private void clearDeprecated() {
      bitField0_ = (bitField0_ & ~0x00000001);
      deprecated_ = false;
    }

    public static final int UNINTERPRETED_OPTION_FIELD_NUMBER = 999;
    private com.google.protobuf.Internal.ProtobufList<com.google.protobuf.DescriptorProtos.UninterpretedOption> uninterpretedOption_;
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    public java.util.List<com.google.protobuf.DescriptorProtos.UninterpretedOption> getUninterpretedOptionList() {
      return uninterpretedOption_;
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    public java.util.List<? extends com.google.protobuf.DescriptorProtos.UninterpretedOptionOrBuilder>
        getUninterpretedOptionOrBuilderList() {
      return uninterpretedOption_;
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    public int getUninterpretedOptionCount() {
      return uninterpretedOption_.size();
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    public com.google.protobuf.DescriptorProtos.UninterpretedOption getUninterpretedOption(int index) {
      return uninterpretedOption_.get(index);
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    public com.google.protobuf.DescriptorProtos.UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(
        int index) {
      return uninterpretedOption_.get(index);
    }
    private void ensureUninterpretedOptionIsMutable() {
      if (!uninterpretedOption_.isModifiable()) {
        uninterpretedOption_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(uninterpretedOption_);
       }
    }

    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    private void setUninterpretedOption(
        int index, com.google.protobuf.DescriptorProtos.UninterpretedOption value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureUninterpretedOptionIsMutable();
      uninterpretedOption_.set(index, value);
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    private void setUninterpretedOption(
        int index, com.google.protobuf.DescriptorProtos.UninterpretedOption.Builder builderForValue) {
      ensureUninterpretedOptionIsMutable();
      uninterpretedOption_.set(index, builderForValue.build());
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    private void addUninterpretedOption(com.google.protobuf.DescriptorProtos.UninterpretedOption value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureUninterpretedOptionIsMutable();
      uninterpretedOption_.add(value);
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    private void addUninterpretedOption(
        int index, com.google.protobuf.DescriptorProtos.UninterpretedOption value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureUninterpretedOptionIsMutable();
      uninterpretedOption_.add(index, value);
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    private void addUninterpretedOption(
        com.google.protobuf.DescriptorProtos.UninterpretedOption.Builder builderForValue) {
      ensureUninterpretedOptionIsMutable();
      uninterpretedOption_.add(builderForValue.build());
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    private void addUninterpretedOption(
        int index, com.google.protobuf.DescriptorProtos.UninterpretedOption.Builder builderForValue) {
      ensureUninterpretedOptionIsMutable();
      uninterpretedOption_.add(index, builderForValue.build());
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    private void addAllUninterpretedOption(
        java.lang.Iterable<? extends com.google.protobuf.DescriptorProtos.UninterpretedOption> values) {
      ensureUninterpretedOptionIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, uninterpretedOption_);
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    private void clearUninterpretedOption() {
      uninterpretedOption_ = emptyProtobufList();
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    private void removeUninterpretedOption(int index) {
      ensureUninterpretedOptionIsMutable();
      uninterpretedOption_.remove(index);
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      com.google.protobuf.GeneratedMessageLite
        .ExtendableMessage<com.google.protobuf.DescriptorProtos.EnumValueOptions, com.google.protobuf.DescriptorProtos.EnumValueOptions.Builder>
          .ExtensionWriter extensionWriter =
            newExtensionWriter();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, deprecated_);
      }
      for (int i = 0; i < uninterpretedOption_.size(); i++) {
        output.writeMessage(999, uninterpretedOption_.get(i));
      }
      extensionWriter.writeUntil(536870912, output);
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, deprecated_);
      }
      for (int i = 0; i < uninterpretedOption_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(999, uninterpretedOption_.get(i));
      }
      size += extensionsSerializedSize();
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.google.protobuf.DescriptorProtos.EnumValueOptions parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.google.protobuf.DescriptorProtos.EnumValueOptions parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.google.protobuf.DescriptorProtos.EnumValueOptions parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.google.protobuf.DescriptorProtos.EnumValueOptions parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.google.protobuf.DescriptorProtos.EnumValueOptions parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.google.protobuf.DescriptorProtos.EnumValueOptions parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.google.protobuf.DescriptorProtos.EnumValueOptions parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.google.protobuf.DescriptorProtos.EnumValueOptions parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.google.protobuf.DescriptorProtos.EnumValueOptions parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.google.protobuf.DescriptorProtos.EnumValueOptions parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.protobuf.DescriptorProtos.EnumValueOptions prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code google.protobuf.EnumValueOptions}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.ExtendableBuilder<
          com.google.protobuf.DescriptorProtos.EnumValueOptions, Builder> implements
        // @@protoc_insertion_point(builder_implements:google.protobuf.EnumValueOptions)
        com.google.protobuf.DescriptorProtos.EnumValueOptionsOrBuilder {
      // Construct using com.google.protobuf.DescriptorProtos.EnumValueOptions.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Is this enum value deprecated?
       * Depending on the target platform, this can emit Deprecated annotations
       * for the enum value, or it will be completely ignored; in the very least,
       * this is a formalization for deprecating enum values.
       * </pre>
       *
       * <code>optional bool deprecated = 1 [default = false];</code>
       */
      public boolean hasDeprecated() {
        return instance.hasDeprecated();
      }
      /**
       * <pre>
       * Is this enum value deprecated?
       * Depending on the target platform, this can emit Deprecated annotations
       * for the enum value, or it will be completely ignored; in the very least,
       * this is a formalization for deprecating enum values.
       * </pre>
       *
       * <code>optional bool deprecated = 1 [default = false];</code>
       */
      public boolean getDeprecated() {
        return instance.getDeprecated();
      }
      /**
       * <pre>
       * Is this enum value deprecated?
       * Depending on the target platform, this can emit Deprecated annotations
       * for the enum value, or it will be completely ignored; in the very least,
       * this is a formalization for deprecating enum values.
       * </pre>
       *
       * <code>optional bool deprecated = 1 [default = false];</code>
       */
      public Builder setDeprecated(boolean value) {
        copyOnWrite();
        instance.setDeprecated(value);
        return this;
      }
      /**
       * <pre>
       * Is this enum value deprecated?
       * Depending on the target platform, this can emit Deprecated annotations
       * for the enum value, or it will be completely ignored; in the very least,
       * this is a formalization for deprecating enum values.
       * </pre>
       *
       * <code>optional bool deprecated = 1 [default = false];</code>
       */
      public Builder clearDeprecated() {
        copyOnWrite();
        instance.clearDeprecated();
        return this;
      }

      /**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public java.util.List<com.google.protobuf.DescriptorProtos.UninterpretedOption> getUninterpretedOptionList() {
        return java.util.Collections.unmodifiableList(
            instance.getUninterpretedOptionList());
      }
      /**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public int getUninterpretedOptionCount() {
        return instance.getUninterpretedOptionCount();
      }/**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public com.google.protobuf.DescriptorProtos.UninterpretedOption getUninterpretedOption(int index) {
        return instance.getUninterpretedOption(index);
      }
      /**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public Builder setUninterpretedOption(
          int index, com.google.protobuf.DescriptorProtos.UninterpretedOption value) {
        copyOnWrite();
        instance.setUninterpretedOption(index, value);
        return this;
      }
      /**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public Builder setUninterpretedOption(
          int index, com.google.protobuf.DescriptorProtos.UninterpretedOption.Builder builderForValue) {
        copyOnWrite();
        instance.setUninterpretedOption(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public Builder addUninterpretedOption(com.google.protobuf.DescriptorProtos.UninterpretedOption value) {
        copyOnWrite();
        instance.addUninterpretedOption(value);
        return this;
      }
      /**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public Builder addUninterpretedOption(
          int index, com.google.protobuf.DescriptorProtos.UninterpretedOption value) {
        copyOnWrite();
        instance.addUninterpretedOption(index, value);
        return this;
      }
      /**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public Builder addUninterpretedOption(
          com.google.protobuf.DescriptorProtos.UninterpretedOption.Builder builderForValue) {
        copyOnWrite();
        instance.addUninterpretedOption(builderForValue);
        return this;
      }
      /**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public Builder addUninterpretedOption(
          int index, com.google.protobuf.DescriptorProtos.UninterpretedOption.Builder builderForValue) {
        copyOnWrite();
        instance.addUninterpretedOption(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public Builder addAllUninterpretedOption(
          java.lang.Iterable<? extends com.google.protobuf.DescriptorProtos.UninterpretedOption> values) {
        copyOnWrite();
        instance.addAllUninterpretedOption(values);
        return this;
      }
      /**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public Builder clearUninterpretedOption() {
        copyOnWrite();
        instance.clearUninterpretedOption();
        return this;
      }
      /**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public Builder removeUninterpretedOption(int index) {
        copyOnWrite();
        instance.removeUninterpretedOption(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:google.protobuf.EnumValueOptions)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.google.protobuf.DescriptorProtos.EnumValueOptions();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          for (int i = 0; i < getUninterpretedOptionCount(); i++) {
            if (!getUninterpretedOption(i).isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (!extensionsAreInitialized()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          uninterpretedOption_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.google.protobuf.DescriptorProtos.EnumValueOptions other = (com.google.protobuf.DescriptorProtos.EnumValueOptions) arg1;
          deprecated_ = visitor.visitBoolean(
              hasDeprecated(), deprecated_,
              other.hasDeprecated(), other.deprecated_);
          uninterpretedOption_= visitor.visitList(uninterpretedOption_, other.uninterpretedOption_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(getDefaultInstanceForType(),
                                         input, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  deprecated_ = input.readBool();
                  break;
                }
                case 7994: {
                  if (!uninterpretedOption_.isModifiable()) {
                    uninterpretedOption_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(uninterpretedOption_);
                  }
                  uninterpretedOption_.add(
                      input.readMessage(com.google.protobuf.DescriptorProtos.UninterpretedOption.parser(), extensionRegistry));
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.google.protobuf.DescriptorProtos.EnumValueOptions.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:google.protobuf.EnumValueOptions)
    private static final com.google.protobuf.DescriptorProtos.EnumValueOptions DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EnumValueOptions();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.google.protobuf.DescriptorProtos.EnumValueOptions getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<EnumValueOptions> PARSER;

    public static com.google.protobuf.Parser<EnumValueOptions> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ServiceOptionsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.protobuf.ServiceOptions)
       com.google.protobuf.GeneratedMessageLite.
            ExtendableMessageOrBuilder<
                ServiceOptions, ServiceOptions.Builder> {

    /**
     * <pre>
     * Is this service deprecated?
     * Depending on the target platform, this can emit Deprecated annotations
     * for the service, or it will be completely ignored; in the very least,
     * this is a formalization for deprecating services.
     * </pre>
     *
     * <code>optional bool deprecated = 33 [default = false];</code>
     */
    boolean hasDeprecated();
    /**
     * <pre>
     * Is this service deprecated?
     * Depending on the target platform, this can emit Deprecated annotations
     * for the service, or it will be completely ignored; in the very least,
     * this is a formalization for deprecating services.
     * </pre>
     *
     * <code>optional bool deprecated = 33 [default = false];</code>
     */
    boolean getDeprecated();

    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    java.util.List<com.google.protobuf.DescriptorProtos.UninterpretedOption>
        getUninterpretedOptionList();
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    com.google.protobuf.DescriptorProtos.UninterpretedOption getUninterpretedOption(int index);
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    int getUninterpretedOptionCount();
  }
  /**
   * Protobuf type {@code google.protobuf.ServiceOptions}
   */
  public  static final class ServiceOptions extends
      com.google.protobuf.GeneratedMessageLite.ExtendableMessage<
        ServiceOptions, ServiceOptions.Builder> implements
      // @@protoc_insertion_point(message_implements:google.protobuf.ServiceOptions)
      ServiceOptionsOrBuilder {
    private ServiceOptions() {
      uninterpretedOption_ = emptyProtobufList();
    }
    private int bitField0_;
    public static final int DEPRECATED_FIELD_NUMBER = 33;
    private boolean deprecated_;
    /**
     * <pre>
     * Is this service deprecated?
     * Depending on the target platform, this can emit Deprecated annotations
     * for the service, or it will be completely ignored; in the very least,
     * this is a formalization for deprecating services.
     * </pre>
     *
     * <code>optional bool deprecated = 33 [default = false];</code>
     */
    public boolean hasDeprecated() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * Is this service deprecated?
     * Depending on the target platform, this can emit Deprecated annotations
     * for the service, or it will be completely ignored; in the very least,
     * this is a formalization for deprecating services.
     * </pre>
     *
     * <code>optional bool deprecated = 33 [default = false];</code>
     */
    public boolean getDeprecated() {
      return deprecated_;
    }
    /**
     * <pre>
     * Is this service deprecated?
     * Depending on the target platform, this can emit Deprecated annotations
     * for the service, or it will be completely ignored; in the very least,
     * this is a formalization for deprecating services.
     * </pre>
     *
     * <code>optional bool deprecated = 33 [default = false];</code>
     */
    private void setDeprecated(boolean value) {
      bitField0_ |= 0x00000001;
      deprecated_ = value;
    }
    /**
     * <pre>
     * Is this service deprecated?
     * Depending on the target platform, this can emit Deprecated annotations
     * for the service, or it will be completely ignored; in the very least,
     * this is a formalization for deprecating services.
     * </pre>
     *
     * <code>optional bool deprecated = 33 [default = false];</code>
     */
    private void clearDeprecated() {
      bitField0_ = (bitField0_ & ~0x00000001);
      deprecated_ = false;
    }

    public static final int UNINTERPRETED_OPTION_FIELD_NUMBER = 999;
    private com.google.protobuf.Internal.ProtobufList<com.google.protobuf.DescriptorProtos.UninterpretedOption> uninterpretedOption_;
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    public java.util.List<com.google.protobuf.DescriptorProtos.UninterpretedOption> getUninterpretedOptionList() {
      return uninterpretedOption_;
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    public java.util.List<? extends com.google.protobuf.DescriptorProtos.UninterpretedOptionOrBuilder>
        getUninterpretedOptionOrBuilderList() {
      return uninterpretedOption_;
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    public int getUninterpretedOptionCount() {
      return uninterpretedOption_.size();
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    public com.google.protobuf.DescriptorProtos.UninterpretedOption getUninterpretedOption(int index) {
      return uninterpretedOption_.get(index);
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    public com.google.protobuf.DescriptorProtos.UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(
        int index) {
      return uninterpretedOption_.get(index);
    }
    private void ensureUninterpretedOptionIsMutable() {
      if (!uninterpretedOption_.isModifiable()) {
        uninterpretedOption_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(uninterpretedOption_);
       }
    }

    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    private void setUninterpretedOption(
        int index, com.google.protobuf.DescriptorProtos.UninterpretedOption value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureUninterpretedOptionIsMutable();
      uninterpretedOption_.set(index, value);
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    private void setUninterpretedOption(
        int index, com.google.protobuf.DescriptorProtos.UninterpretedOption.Builder builderForValue) {
      ensureUninterpretedOptionIsMutable();
      uninterpretedOption_.set(index, builderForValue.build());
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    private void addUninterpretedOption(com.google.protobuf.DescriptorProtos.UninterpretedOption value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureUninterpretedOptionIsMutable();
      uninterpretedOption_.add(value);
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    private void addUninterpretedOption(
        int index, com.google.protobuf.DescriptorProtos.UninterpretedOption value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureUninterpretedOptionIsMutable();
      uninterpretedOption_.add(index, value);
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    private void addUninterpretedOption(
        com.google.protobuf.DescriptorProtos.UninterpretedOption.Builder builderForValue) {
      ensureUninterpretedOptionIsMutable();
      uninterpretedOption_.add(builderForValue.build());
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    private void addUninterpretedOption(
        int index, com.google.protobuf.DescriptorProtos.UninterpretedOption.Builder builderForValue) {
      ensureUninterpretedOptionIsMutable();
      uninterpretedOption_.add(index, builderForValue.build());
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    private void addAllUninterpretedOption(
        java.lang.Iterable<? extends com.google.protobuf.DescriptorProtos.UninterpretedOption> values) {
      ensureUninterpretedOptionIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, uninterpretedOption_);
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    private void clearUninterpretedOption() {
      uninterpretedOption_ = emptyProtobufList();
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    private void removeUninterpretedOption(int index) {
      ensureUninterpretedOptionIsMutable();
      uninterpretedOption_.remove(index);
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      com.google.protobuf.GeneratedMessageLite
        .ExtendableMessage<com.google.protobuf.DescriptorProtos.ServiceOptions, com.google.protobuf.DescriptorProtos.ServiceOptions.Builder>
          .ExtensionWriter extensionWriter =
            newExtensionWriter();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(33, deprecated_);
      }
      for (int i = 0; i < uninterpretedOption_.size(); i++) {
        output.writeMessage(999, uninterpretedOption_.get(i));
      }
      extensionWriter.writeUntil(536870912, output);
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(33, deprecated_);
      }
      for (int i = 0; i < uninterpretedOption_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(999, uninterpretedOption_.get(i));
      }
      size += extensionsSerializedSize();
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.google.protobuf.DescriptorProtos.ServiceOptions parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.google.protobuf.DescriptorProtos.ServiceOptions parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.google.protobuf.DescriptorProtos.ServiceOptions parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.google.protobuf.DescriptorProtos.ServiceOptions parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.google.protobuf.DescriptorProtos.ServiceOptions parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.google.protobuf.DescriptorProtos.ServiceOptions parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.google.protobuf.DescriptorProtos.ServiceOptions parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.google.protobuf.DescriptorProtos.ServiceOptions parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.google.protobuf.DescriptorProtos.ServiceOptions parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.google.protobuf.DescriptorProtos.ServiceOptions parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.protobuf.DescriptorProtos.ServiceOptions prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code google.protobuf.ServiceOptions}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.ExtendableBuilder<
          com.google.protobuf.DescriptorProtos.ServiceOptions, Builder> implements
        // @@protoc_insertion_point(builder_implements:google.protobuf.ServiceOptions)
        com.google.protobuf.DescriptorProtos.ServiceOptionsOrBuilder {
      // Construct using com.google.protobuf.DescriptorProtos.ServiceOptions.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Is this service deprecated?
       * Depending on the target platform, this can emit Deprecated annotations
       * for the service, or it will be completely ignored; in the very least,
       * this is a formalization for deprecating services.
       * </pre>
       *
       * <code>optional bool deprecated = 33 [default = false];</code>
       */
      public boolean hasDeprecated() {
        return instance.hasDeprecated();
      }
      /**
       * <pre>
       * Is this service deprecated?
       * Depending on the target platform, this can emit Deprecated annotations
       * for the service, or it will be completely ignored; in the very least,
       * this is a formalization for deprecating services.
       * </pre>
       *
       * <code>optional bool deprecated = 33 [default = false];</code>
       */
      public boolean getDeprecated() {
        return instance.getDeprecated();
      }
      /**
       * <pre>
       * Is this service deprecated?
       * Depending on the target platform, this can emit Deprecated annotations
       * for the service, or it will be completely ignored; in the very least,
       * this is a formalization for deprecating services.
       * </pre>
       *
       * <code>optional bool deprecated = 33 [default = false];</code>
       */
      public Builder setDeprecated(boolean value) {
        copyOnWrite();
        instance.setDeprecated(value);
        return this;
      }
      /**
       * <pre>
       * Is this service deprecated?
       * Depending on the target platform, this can emit Deprecated annotations
       * for the service, or it will be completely ignored; in the very least,
       * this is a formalization for deprecating services.
       * </pre>
       *
       * <code>optional bool deprecated = 33 [default = false];</code>
       */
      public Builder clearDeprecated() {
        copyOnWrite();
        instance.clearDeprecated();
        return this;
      }

      /**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public java.util.List<com.google.protobuf.DescriptorProtos.UninterpretedOption> getUninterpretedOptionList() {
        return java.util.Collections.unmodifiableList(
            instance.getUninterpretedOptionList());
      }
      /**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public int getUninterpretedOptionCount() {
        return instance.getUninterpretedOptionCount();
      }/**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public com.google.protobuf.DescriptorProtos.UninterpretedOption getUninterpretedOption(int index) {
        return instance.getUninterpretedOption(index);
      }
      /**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public Builder setUninterpretedOption(
          int index, com.google.protobuf.DescriptorProtos.UninterpretedOption value) {
        copyOnWrite();
        instance.setUninterpretedOption(index, value);
        return this;
      }
      /**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public Builder setUninterpretedOption(
          int index, com.google.protobuf.DescriptorProtos.UninterpretedOption.Builder builderForValue) {
        copyOnWrite();
        instance.setUninterpretedOption(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public Builder addUninterpretedOption(com.google.protobuf.DescriptorProtos.UninterpretedOption value) {
        copyOnWrite();
        instance.addUninterpretedOption(value);
        return this;
      }
      /**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public Builder addUninterpretedOption(
          int index, com.google.protobuf.DescriptorProtos.UninterpretedOption value) {
        copyOnWrite();
        instance.addUninterpretedOption(index, value);
        return this;
      }
      /**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public Builder addUninterpretedOption(
          com.google.protobuf.DescriptorProtos.UninterpretedOption.Builder builderForValue) {
        copyOnWrite();
        instance.addUninterpretedOption(builderForValue);
        return this;
      }
      /**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public Builder addUninterpretedOption(
          int index, com.google.protobuf.DescriptorProtos.UninterpretedOption.Builder builderForValue) {
        copyOnWrite();
        instance.addUninterpretedOption(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public Builder addAllUninterpretedOption(
          java.lang.Iterable<? extends com.google.protobuf.DescriptorProtos.UninterpretedOption> values) {
        copyOnWrite();
        instance.addAllUninterpretedOption(values);
        return this;
      }
      /**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public Builder clearUninterpretedOption() {
        copyOnWrite();
        instance.clearUninterpretedOption();
        return this;
      }
      /**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public Builder removeUninterpretedOption(int index) {
        copyOnWrite();
        instance.removeUninterpretedOption(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:google.protobuf.ServiceOptions)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.google.protobuf.DescriptorProtos.ServiceOptions();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          for (int i = 0; i < getUninterpretedOptionCount(); i++) {
            if (!getUninterpretedOption(i).isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (!extensionsAreInitialized()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          uninterpretedOption_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.google.protobuf.DescriptorProtos.ServiceOptions other = (com.google.protobuf.DescriptorProtos.ServiceOptions) arg1;
          deprecated_ = visitor.visitBoolean(
              hasDeprecated(), deprecated_,
              other.hasDeprecated(), other.deprecated_);
          uninterpretedOption_= visitor.visitList(uninterpretedOption_, other.uninterpretedOption_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(getDefaultInstanceForType(),
                                         input, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
                case 264: {
                  bitField0_ |= 0x00000001;
                  deprecated_ = input.readBool();
                  break;
                }
                case 7994: {
                  if (!uninterpretedOption_.isModifiable()) {
                    uninterpretedOption_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(uninterpretedOption_);
                  }
                  uninterpretedOption_.add(
                      input.readMessage(com.google.protobuf.DescriptorProtos.UninterpretedOption.parser(), extensionRegistry));
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.google.protobuf.DescriptorProtos.ServiceOptions.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:google.protobuf.ServiceOptions)
    private static final com.google.protobuf.DescriptorProtos.ServiceOptions DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ServiceOptions();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.google.protobuf.DescriptorProtos.ServiceOptions getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ServiceOptions> PARSER;

    public static com.google.protobuf.Parser<ServiceOptions> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface MethodOptionsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.protobuf.MethodOptions)
       com.google.protobuf.GeneratedMessageLite.
            ExtendableMessageOrBuilder<
                MethodOptions, MethodOptions.Builder> {

    /**
     * <pre>
     * Is this method deprecated?
     * Depending on the target platform, this can emit Deprecated annotations
     * for the method, or it will be completely ignored; in the very least,
     * this is a formalization for deprecating methods.
     * </pre>
     *
     * <code>optional bool deprecated = 33 [default = false];</code>
     */
    boolean hasDeprecated();
    /**
     * <pre>
     * Is this method deprecated?
     * Depending on the target platform, this can emit Deprecated annotations
     * for the method, or it will be completely ignored; in the very least,
     * this is a formalization for deprecating methods.
     * </pre>
     *
     * <code>optional bool deprecated = 33 [default = false];</code>
     */
    boolean getDeprecated();

    /**
     * <code>optional .google.protobuf.MethodOptions.IdempotencyLevel idempotency_level = 34 [default = IDEMPOTENCY_UNKNOWN];</code>
     */
    boolean hasIdempotencyLevel();
    /**
     * <code>optional .google.protobuf.MethodOptions.IdempotencyLevel idempotency_level = 34 [default = IDEMPOTENCY_UNKNOWN];</code>
     */
    com.google.protobuf.DescriptorProtos.MethodOptions.IdempotencyLevel getIdempotencyLevel();

    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    java.util.List<com.google.protobuf.DescriptorProtos.UninterpretedOption>
        getUninterpretedOptionList();
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    com.google.protobuf.DescriptorProtos.UninterpretedOption getUninterpretedOption(int index);
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    int getUninterpretedOptionCount();
  }
  /**
   * Protobuf type {@code google.protobuf.MethodOptions}
   */
  public  static final class MethodOptions extends
      com.google.protobuf.GeneratedMessageLite.ExtendableMessage<
        MethodOptions, MethodOptions.Builder> implements
      // @@protoc_insertion_point(message_implements:google.protobuf.MethodOptions)
      MethodOptionsOrBuilder {
    private MethodOptions() {
      uninterpretedOption_ = emptyProtobufList();
    }
    /**
     * <pre>
     * Is this method side-effect-free (or safe in HTTP parlance), or idempotent,
     * or neither? HTTP based RPC implementation may choose GET verb for safe
     * methods, and PUT verb for idempotent methods instead of the default POST.
     * </pre>
     *
     * Protobuf enum {@code google.protobuf.MethodOptions.IdempotencyLevel}
     */
    public enum IdempotencyLevel
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <code>IDEMPOTENCY_UNKNOWN = 0;</code>
       */
      IDEMPOTENCY_UNKNOWN(0),
      /**
       * <pre>
       * implies idempotent
       * </pre>
       *
       * <code>NO_SIDE_EFFECTS = 1;</code>
       */
      NO_SIDE_EFFECTS(1),
      /**
       * <pre>
       * idempotent, but may have side effects
       * </pre>
       *
       * <code>IDEMPOTENT = 2;</code>
       */
      IDEMPOTENT(2),
      ;

      /**
       * <code>IDEMPOTENCY_UNKNOWN = 0;</code>
       */
      public static final int IDEMPOTENCY_UNKNOWN_VALUE = 0;
      /**
       * <pre>
       * implies idempotent
       * </pre>
       *
       * <code>NO_SIDE_EFFECTS = 1;</code>
       */
      public static final int NO_SIDE_EFFECTS_VALUE = 1;
      /**
       * <pre>
       * idempotent, but may have side effects
       * </pre>
       *
       * <code>IDEMPOTENT = 2;</code>
       */
      public static final int IDEMPOTENT_VALUE = 2;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static IdempotencyLevel valueOf(int value) {
        return forNumber(value);
      }

      public static IdempotencyLevel forNumber(int value) {
        switch (value) {
          case 0: return IDEMPOTENCY_UNKNOWN;
          case 1: return NO_SIDE_EFFECTS;
          case 2: return IDEMPOTENT;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<IdempotencyLevel>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          IdempotencyLevel> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<IdempotencyLevel>() {
              public IdempotencyLevel findValueByNumber(int number) {
                return IdempotencyLevel.forNumber(number);
              }
            };

      private final int value;

      private IdempotencyLevel(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:google.protobuf.MethodOptions.IdempotencyLevel)
    }

    private int bitField0_;
    public static final int DEPRECATED_FIELD_NUMBER = 33;
    private boolean deprecated_;
    /**
     * <pre>
     * Is this method deprecated?
     * Depending on the target platform, this can emit Deprecated annotations
     * for the method, or it will be completely ignored; in the very least,
     * this is a formalization for deprecating methods.
     * </pre>
     *
     * <code>optional bool deprecated = 33 [default = false];</code>
     */
    public boolean hasDeprecated() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * Is this method deprecated?
     * Depending on the target platform, this can emit Deprecated annotations
     * for the method, or it will be completely ignored; in the very least,
     * this is a formalization for deprecating methods.
     * </pre>
     *
     * <code>optional bool deprecated = 33 [default = false];</code>
     */
    public boolean getDeprecated() {
      return deprecated_;
    }
    /**
     * <pre>
     * Is this method deprecated?
     * Depending on the target platform, this can emit Deprecated annotations
     * for the method, or it will be completely ignored; in the very least,
     * this is a formalization for deprecating methods.
     * </pre>
     *
     * <code>optional bool deprecated = 33 [default = false];</code>
     */
    private void setDeprecated(boolean value) {
      bitField0_ |= 0x00000001;
      deprecated_ = value;
    }
    /**
     * <pre>
     * Is this method deprecated?
     * Depending on the target platform, this can emit Deprecated annotations
     * for the method, or it will be completely ignored; in the very least,
     * this is a formalization for deprecating methods.
     * </pre>
     *
     * <code>optional bool deprecated = 33 [default = false];</code>
     */
    private void clearDeprecated() {
      bitField0_ = (bitField0_ & ~0x00000001);
      deprecated_ = false;
    }

    public static final int IDEMPOTENCY_LEVEL_FIELD_NUMBER = 34;
    private int idempotencyLevel_;
    /**
     * <code>optional .google.protobuf.MethodOptions.IdempotencyLevel idempotency_level = 34 [default = IDEMPOTENCY_UNKNOWN];</code>
     */
    public boolean hasIdempotencyLevel() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .google.protobuf.MethodOptions.IdempotencyLevel idempotency_level = 34 [default = IDEMPOTENCY_UNKNOWN];</code>
     */
    public com.google.protobuf.DescriptorProtos.MethodOptions.IdempotencyLevel getIdempotencyLevel() {
      com.google.protobuf.DescriptorProtos.MethodOptions.IdempotencyLevel result = com.google.protobuf.DescriptorProtos.MethodOptions.IdempotencyLevel.forNumber(idempotencyLevel_);
      return result == null ? com.google.protobuf.DescriptorProtos.MethodOptions.IdempotencyLevel.IDEMPOTENCY_UNKNOWN : result;
    }
    /**
     * <code>optional .google.protobuf.MethodOptions.IdempotencyLevel idempotency_level = 34 [default = IDEMPOTENCY_UNKNOWN];</code>
     */
    private void setIdempotencyLevel(com.google.protobuf.DescriptorProtos.MethodOptions.IdempotencyLevel value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000002;
      idempotencyLevel_ = value.getNumber();
    }
    /**
     * <code>optional .google.protobuf.MethodOptions.IdempotencyLevel idempotency_level = 34 [default = IDEMPOTENCY_UNKNOWN];</code>
     */
    private void clearIdempotencyLevel() {
      bitField0_ = (bitField0_ & ~0x00000002);
      idempotencyLevel_ = 0;
    }

    public static final int UNINTERPRETED_OPTION_FIELD_NUMBER = 999;
    private com.google.protobuf.Internal.ProtobufList<com.google.protobuf.DescriptorProtos.UninterpretedOption> uninterpretedOption_;
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    public java.util.List<com.google.protobuf.DescriptorProtos.UninterpretedOption> getUninterpretedOptionList() {
      return uninterpretedOption_;
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    public java.util.List<? extends com.google.protobuf.DescriptorProtos.UninterpretedOptionOrBuilder>
        getUninterpretedOptionOrBuilderList() {
      return uninterpretedOption_;
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    public int getUninterpretedOptionCount() {
      return uninterpretedOption_.size();
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    public com.google.protobuf.DescriptorProtos.UninterpretedOption getUninterpretedOption(int index) {
      return uninterpretedOption_.get(index);
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    public com.google.protobuf.DescriptorProtos.UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(
        int index) {
      return uninterpretedOption_.get(index);
    }
    private void ensureUninterpretedOptionIsMutable() {
      if (!uninterpretedOption_.isModifiable()) {
        uninterpretedOption_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(uninterpretedOption_);
       }
    }

    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    private void setUninterpretedOption(
        int index, com.google.protobuf.DescriptorProtos.UninterpretedOption value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureUninterpretedOptionIsMutable();
      uninterpretedOption_.set(index, value);
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    private void setUninterpretedOption(
        int index, com.google.protobuf.DescriptorProtos.UninterpretedOption.Builder builderForValue) {
      ensureUninterpretedOptionIsMutable();
      uninterpretedOption_.set(index, builderForValue.build());
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    private void addUninterpretedOption(com.google.protobuf.DescriptorProtos.UninterpretedOption value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureUninterpretedOptionIsMutable();
      uninterpretedOption_.add(value);
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    private void addUninterpretedOption(
        int index, com.google.protobuf.DescriptorProtos.UninterpretedOption value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureUninterpretedOptionIsMutable();
      uninterpretedOption_.add(index, value);
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    private void addUninterpretedOption(
        com.google.protobuf.DescriptorProtos.UninterpretedOption.Builder builderForValue) {
      ensureUninterpretedOptionIsMutable();
      uninterpretedOption_.add(builderForValue.build());
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    private void addUninterpretedOption(
        int index, com.google.protobuf.DescriptorProtos.UninterpretedOption.Builder builderForValue) {
      ensureUninterpretedOptionIsMutable();
      uninterpretedOption_.add(index, builderForValue.build());
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    private void addAllUninterpretedOption(
        java.lang.Iterable<? extends com.google.protobuf.DescriptorProtos.UninterpretedOption> values) {
      ensureUninterpretedOptionIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, uninterpretedOption_);
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    private void clearUninterpretedOption() {
      uninterpretedOption_ = emptyProtobufList();
    }
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    private void removeUninterpretedOption(int index) {
      ensureUninterpretedOptionIsMutable();
      uninterpretedOption_.remove(index);
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      com.google.protobuf.GeneratedMessageLite
        .ExtendableMessage<com.google.protobuf.DescriptorProtos.MethodOptions, com.google.protobuf.DescriptorProtos.MethodOptions.Builder>
          .ExtensionWriter extensionWriter =
            newExtensionWriter();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(33, deprecated_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(34, idempotencyLevel_);
      }
      for (int i = 0; i < uninterpretedOption_.size(); i++) {
        output.writeMessage(999, uninterpretedOption_.get(i));
      }
      extensionWriter.writeUntil(536870912, output);
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(33, deprecated_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(34, idempotencyLevel_);
      }
      for (int i = 0; i < uninterpretedOption_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(999, uninterpretedOption_.get(i));
      }
      size += extensionsSerializedSize();
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.google.protobuf.DescriptorProtos.MethodOptions parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.google.protobuf.DescriptorProtos.MethodOptions parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.google.protobuf.DescriptorProtos.MethodOptions parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.google.protobuf.DescriptorProtos.MethodOptions parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.google.protobuf.DescriptorProtos.MethodOptions parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.google.protobuf.DescriptorProtos.MethodOptions parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.google.protobuf.DescriptorProtos.MethodOptions parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.google.protobuf.DescriptorProtos.MethodOptions parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.google.protobuf.DescriptorProtos.MethodOptions parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.google.protobuf.DescriptorProtos.MethodOptions parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.protobuf.DescriptorProtos.MethodOptions prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code google.protobuf.MethodOptions}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.ExtendableBuilder<
          com.google.protobuf.DescriptorProtos.MethodOptions, Builder> implements
        // @@protoc_insertion_point(builder_implements:google.protobuf.MethodOptions)
        com.google.protobuf.DescriptorProtos.MethodOptionsOrBuilder {
      // Construct using com.google.protobuf.DescriptorProtos.MethodOptions.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Is this method deprecated?
       * Depending on the target platform, this can emit Deprecated annotations
       * for the method, or it will be completely ignored; in the very least,
       * this is a formalization for deprecating methods.
       * </pre>
       *
       * <code>optional bool deprecated = 33 [default = false];</code>
       */
      public boolean hasDeprecated() {
        return instance.hasDeprecated();
      }
      /**
       * <pre>
       * Is this method deprecated?
       * Depending on the target platform, this can emit Deprecated annotations
       * for the method, or it will be completely ignored; in the very least,
       * this is a formalization for deprecating methods.
       * </pre>
       *
       * <code>optional bool deprecated = 33 [default = false];</code>
       */
      public boolean getDeprecated() {
        return instance.getDeprecated();
      }
      /**
       * <pre>
       * Is this method deprecated?
       * Depending on the target platform, this can emit Deprecated annotations
       * for the method, or it will be completely ignored; in the very least,
       * this is a formalization for deprecating methods.
       * </pre>
       *
       * <code>optional bool deprecated = 33 [default = false];</code>
       */
      public Builder setDeprecated(boolean value) {
        copyOnWrite();
        instance.setDeprecated(value);
        return this;
      }
      /**
       * <pre>
       * Is this method deprecated?
       * Depending on the target platform, this can emit Deprecated annotations
       * for the method, or it will be completely ignored; in the very least,
       * this is a formalization for deprecating methods.
       * </pre>
       *
       * <code>optional bool deprecated = 33 [default = false];</code>
       */
      public Builder clearDeprecated() {
        copyOnWrite();
        instance.clearDeprecated();
        return this;
      }

      /**
       * <code>optional .google.protobuf.MethodOptions.IdempotencyLevel idempotency_level = 34 [default = IDEMPOTENCY_UNKNOWN];</code>
       */
      public boolean hasIdempotencyLevel() {
        return instance.hasIdempotencyLevel();
      }
      /**
       * <code>optional .google.protobuf.MethodOptions.IdempotencyLevel idempotency_level = 34 [default = IDEMPOTENCY_UNKNOWN];</code>
       */
      public com.google.protobuf.DescriptorProtos.MethodOptions.IdempotencyLevel getIdempotencyLevel() {
        return instance.getIdempotencyLevel();
      }
      /**
       * <code>optional .google.protobuf.MethodOptions.IdempotencyLevel idempotency_level = 34 [default = IDEMPOTENCY_UNKNOWN];</code>
       */
      public Builder setIdempotencyLevel(com.google.protobuf.DescriptorProtos.MethodOptions.IdempotencyLevel value) {
        copyOnWrite();
        instance.setIdempotencyLevel(value);
        return this;
      }
      /**
       * <code>optional .google.protobuf.MethodOptions.IdempotencyLevel idempotency_level = 34 [default = IDEMPOTENCY_UNKNOWN];</code>
       */
      public Builder clearIdempotencyLevel() {
        copyOnWrite();
        instance.clearIdempotencyLevel();
        return this;
      }

      /**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public java.util.List<com.google.protobuf.DescriptorProtos.UninterpretedOption> getUninterpretedOptionList() {
        return java.util.Collections.unmodifiableList(
            instance.getUninterpretedOptionList());
      }
      /**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public int getUninterpretedOptionCount() {
        return instance.getUninterpretedOptionCount();
      }/**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public com.google.protobuf.DescriptorProtos.UninterpretedOption getUninterpretedOption(int index) {
        return instance.getUninterpretedOption(index);
      }
      /**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public Builder setUninterpretedOption(
          int index, com.google.protobuf.DescriptorProtos.UninterpretedOption value) {
        copyOnWrite();
        instance.setUninterpretedOption(index, value);
        return this;
      }
      /**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public Builder setUninterpretedOption(
          int index, com.google.protobuf.DescriptorProtos.UninterpretedOption.Builder builderForValue) {
        copyOnWrite();
        instance.setUninterpretedOption(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public Builder addUninterpretedOption(com.google.protobuf.DescriptorProtos.UninterpretedOption value) {
        copyOnWrite();
        instance.addUninterpretedOption(value);
        return this;
      }
      /**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public Builder addUninterpretedOption(
          int index, com.google.protobuf.DescriptorProtos.UninterpretedOption value) {
        copyOnWrite();
        instance.addUninterpretedOption(index, value);
        return this;
      }
      /**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public Builder addUninterpretedOption(
          com.google.protobuf.DescriptorProtos.UninterpretedOption.Builder builderForValue) {
        copyOnWrite();
        instance.addUninterpretedOption(builderForValue);
        return this;
      }
      /**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public Builder addUninterpretedOption(
          int index, com.google.protobuf.DescriptorProtos.UninterpretedOption.Builder builderForValue) {
        copyOnWrite();
        instance.addUninterpretedOption(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public Builder addAllUninterpretedOption(
          java.lang.Iterable<? extends com.google.protobuf.DescriptorProtos.UninterpretedOption> values) {
        copyOnWrite();
        instance.addAllUninterpretedOption(values);
        return this;
      }
      /**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public Builder clearUninterpretedOption() {
        copyOnWrite();
        instance.clearUninterpretedOption();
        return this;
      }
      /**
       * <pre>
       * The parser stores options it doesn't recognize here. See above.
       * </pre>
       *
       * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
       */
      public Builder removeUninterpretedOption(int index) {
        copyOnWrite();
        instance.removeUninterpretedOption(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:google.protobuf.MethodOptions)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.google.protobuf.DescriptorProtos.MethodOptions();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          for (int i = 0; i < getUninterpretedOptionCount(); i++) {
            if (!getUninterpretedOption(i).isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (!extensionsAreInitialized()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          uninterpretedOption_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.google.protobuf.DescriptorProtos.MethodOptions other = (com.google.protobuf.DescriptorProtos.MethodOptions) arg1;
          deprecated_ = visitor.visitBoolean(
              hasDeprecated(), deprecated_,
              other.hasDeprecated(), other.deprecated_);
          idempotencyLevel_ = visitor.visitInt(hasIdempotencyLevel(), idempotencyLevel_,
              other.hasIdempotencyLevel(), other.idempotencyLevel_);
          uninterpretedOption_= visitor.visitList(uninterpretedOption_, other.uninterpretedOption_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(getDefaultInstanceForType(),
                                         input, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
                case 264: {
                  bitField0_ |= 0x00000001;
                  deprecated_ = input.readBool();
                  break;
                }
                case 272: {
                  int rawValue = input.readEnum();
                  com.google.protobuf.DescriptorProtos.MethodOptions.IdempotencyLevel value = com.google.protobuf.DescriptorProtos.MethodOptions.IdempotencyLevel.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(34, rawValue);
                  } else {
                    bitField0_ |= 0x00000002;
                    idempotencyLevel_ = rawValue;
                  }
                  break;
                }
                case 7994: {
                  if (!uninterpretedOption_.isModifiable()) {
                    uninterpretedOption_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(uninterpretedOption_);
                  }
                  uninterpretedOption_.add(
                      input.readMessage(com.google.protobuf.DescriptorProtos.UninterpretedOption.parser(), extensionRegistry));
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.google.protobuf.DescriptorProtos.MethodOptions.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:google.protobuf.MethodOptions)
    private static final com.google.protobuf.DescriptorProtos.MethodOptions DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MethodOptions();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.google.protobuf.DescriptorProtos.MethodOptions getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<MethodOptions> PARSER;

    public static com.google.protobuf.Parser<MethodOptions> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface UninterpretedOptionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.protobuf.UninterpretedOption)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>repeated .google.protobuf.UninterpretedOption.NamePart name = 2;</code>
     */
    java.util.List<com.google.protobuf.DescriptorProtos.UninterpretedOption.NamePart>
        getNameList();
    /**
     * <code>repeated .google.protobuf.UninterpretedOption.NamePart name = 2;</code>
     */
    com.google.protobuf.DescriptorProtos.UninterpretedOption.NamePart getName(int index);
    /**
     * <code>repeated .google.protobuf.UninterpretedOption.NamePart name = 2;</code>
     */
    int getNameCount();

    /**
     * <pre>
     * The value of the uninterpreted option, in whatever type the tokenizer
     * identified it as during parsing. Exactly one of these should be set.
     * </pre>
     *
     * <code>optional string identifier_value = 3;</code>
     */
    boolean hasIdentifierValue();
    /**
     * <pre>
     * The value of the uninterpreted option, in whatever type the tokenizer
     * identified it as during parsing. Exactly one of these should be set.
     * </pre>
     *
     * <code>optional string identifier_value = 3;</code>
     */
    java.lang.String getIdentifierValue();
    /**
     * <pre>
     * The value of the uninterpreted option, in whatever type the tokenizer
     * identified it as during parsing. Exactly one of these should be set.
     * </pre>
     *
     * <code>optional string identifier_value = 3;</code>
     */
    com.google.protobuf.ByteString
        getIdentifierValueBytes();

    /**
     * <code>optional uint64 positive_int_value = 4;</code>
     */
    boolean hasPositiveIntValue();
    /**
     * <code>optional uint64 positive_int_value = 4;</code>
     */
    long getPositiveIntValue();

    /**
     * <code>optional int64 negative_int_value = 5;</code>
     */
    boolean hasNegativeIntValue();
    /**
     * <code>optional int64 negative_int_value = 5;</code>
     */
    long getNegativeIntValue();

    /**
     * <code>optional double double_value = 6;</code>
     */
    boolean hasDoubleValue();
    /**
     * <code>optional double double_value = 6;</code>
     */
    double getDoubleValue();

    /**
     * <code>optional bytes string_value = 7;</code>
     */
    boolean hasStringValue();
    /**
     * <code>optional bytes string_value = 7;</code>
     */
    com.google.protobuf.ByteString getStringValue();

    /**
     * <code>optional string aggregate_value = 8;</code>
     */
    boolean hasAggregateValue();
    /**
     * <code>optional string aggregate_value = 8;</code>
     */
    java.lang.String getAggregateValue();
    /**
     * <code>optional string aggregate_value = 8;</code>
     */
    com.google.protobuf.ByteString
        getAggregateValueBytes();
  }
  /**
   * <pre>
   * A message representing a option the parser does not recognize. This only
   * appears in options protos created by the compiler::Parser class.
   * DescriptorPool resolves these when building Descriptor objects. Therefore,
   * options protos in descriptor objects (e.g. returned by Descriptor::options(),
   * or produced by Descriptor::CopyTo()) will never have UninterpretedOptions
   * in them.
   * </pre>
   *
   * Protobuf type {@code google.protobuf.UninterpretedOption}
   */
  public  static final class UninterpretedOption extends
      com.google.protobuf.GeneratedMessageLite<
          UninterpretedOption, UninterpretedOption.Builder> implements
      // @@protoc_insertion_point(message_implements:google.protobuf.UninterpretedOption)
      UninterpretedOptionOrBuilder {
    private UninterpretedOption() {
      name_ = emptyProtobufList();
      identifierValue_ = "";
      stringValue_ = com.google.protobuf.ByteString.EMPTY;
      aggregateValue_ = "";
    }
    public interface NamePartOrBuilder extends
        // @@protoc_insertion_point(interface_extends:google.protobuf.UninterpretedOption.NamePart)
        com.google.protobuf.MessageLiteOrBuilder {

      /**
       * <code>required string name_part = 1;</code>
       */
      boolean hasNamePart();
      /**
       * <code>required string name_part = 1;</code>
       */
      java.lang.String getNamePart();
      /**
       * <code>required string name_part = 1;</code>
       */
      com.google.protobuf.ByteString
          getNamePartBytes();

      /**
       * <code>required bool is_extension = 2;</code>
       */
      boolean hasIsExtension();
      /**
       * <code>required bool is_extension = 2;</code>
       */
      boolean getIsExtension();
    }
    /**
     * <pre>
     * The name of the uninterpreted option.  Each string represents a segment in
     * a dot-separated name.  is_extension is true iff a segment represents an
     * extension (denoted with parentheses in options specs in .proto files).
     * E.g.,{ ["foo", false], ["bar.baz", true], ["qux", false] } represents
     * "foo.(bar.baz).qux".
     * </pre>
     *
     * Protobuf type {@code google.protobuf.UninterpretedOption.NamePart}
     */
    public  static final class NamePart extends
        com.google.protobuf.GeneratedMessageLite<
            NamePart, NamePart.Builder> implements
        // @@protoc_insertion_point(message_implements:google.protobuf.UninterpretedOption.NamePart)
        NamePartOrBuilder {
      private NamePart() {
        namePart_ = "";
      }
      private int bitField0_;
      public static final int NAME_PART_FIELD_NUMBER = 1;
      private java.lang.String namePart_;
      /**
       * <code>required string name_part = 1;</code>
       */
      public boolean hasNamePart() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string name_part = 1;</code>
       */
      public java.lang.String getNamePart() {
        return namePart_;
      }
      /**
       * <code>required string name_part = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNamePartBytes() {
        return com.google.protobuf.ByteString.copyFromUtf8(namePart_);
      }
      /**
       * <code>required string name_part = 1;</code>
       */
      private void setNamePart(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        namePart_ = value;
      }
      /**
       * <code>required string name_part = 1;</code>
       */
      private void clearNamePart() {
        bitField0_ = (bitField0_ & ~0x00000001);
        namePart_ = getDefaultInstance().getNamePart();
      }
      /**
       * <code>required string name_part = 1;</code>
       */
      private void setNamePartBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        namePart_ = value.toStringUtf8();
      }

      public static final int IS_EXTENSION_FIELD_NUMBER = 2;
      private boolean isExtension_;
      /**
       * <code>required bool is_extension = 2;</code>
       */
      public boolean hasIsExtension() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required bool is_extension = 2;</code>
       */
      public boolean getIsExtension() {
        return isExtension_;
      }
      /**
       * <code>required bool is_extension = 2;</code>
       */
      private void setIsExtension(boolean value) {
        bitField0_ |= 0x00000002;
        isExtension_ = value;
      }
      /**
       * <code>required bool is_extension = 2;</code>
       */
      private void clearIsExtension() {
        bitField0_ = (bitField0_ & ~0x00000002);
        isExtension_ = false;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeString(1, getNamePart());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBool(2, isExtension_);
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(1, getNamePart());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(2, isExtension_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      public static com.google.protobuf.DescriptorProtos.UninterpretedOption.NamePart parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static com.google.protobuf.DescriptorProtos.UninterpretedOption.NamePart parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static com.google.protobuf.DescriptorProtos.UninterpretedOption.NamePart parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static com.google.protobuf.DescriptorProtos.UninterpretedOption.NamePart parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static com.google.protobuf.DescriptorProtos.UninterpretedOption.NamePart parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static com.google.protobuf.DescriptorProtos.UninterpretedOption.NamePart parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static com.google.protobuf.DescriptorProtos.UninterpretedOption.NamePart parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input);
      }
      public static com.google.protobuf.DescriptorProtos.UninterpretedOption.NamePart parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static com.google.protobuf.DescriptorProtos.UninterpretedOption.NamePart parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static com.google.protobuf.DescriptorProtos.UninterpretedOption.NamePart parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }

      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.google.protobuf.DescriptorProtos.UninterpretedOption.NamePart prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      /**
       * <pre>
       * The name of the uninterpreted option.  Each string represents a segment in
       * a dot-separated name.  is_extension is true iff a segment represents an
       * extension (denoted with parentheses in options specs in .proto files).
       * E.g.,{ ["foo", false], ["bar.baz", true], ["qux", false] } represents
       * "foo.(bar.baz).qux".
       * </pre>
       *
       * Protobuf type {@code google.protobuf.UninterpretedOption.NamePart}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            com.google.protobuf.DescriptorProtos.UninterpretedOption.NamePart, Builder> implements
          // @@protoc_insertion_point(builder_implements:google.protobuf.UninterpretedOption.NamePart)
          com.google.protobuf.DescriptorProtos.UninterpretedOption.NamePartOrBuilder {
        // Construct using com.google.protobuf.DescriptorProtos.UninterpretedOption.NamePart.newBuilder()
        private Builder() {
          super(DEFAULT_INSTANCE);
        }


        /**
         * <code>required string name_part = 1;</code>
         */
        public boolean hasNamePart() {
          return instance.hasNamePart();
        }
        /**
         * <code>required string name_part = 1;</code>
         */
        public java.lang.String getNamePart() {
          return instance.getNamePart();
        }
        /**
         * <code>required string name_part = 1;</code>
         */
        public com.google.protobuf.ByteString
            getNamePartBytes() {
          return instance.getNamePartBytes();
        }
        /**
         * <code>required string name_part = 1;</code>
         */
        public Builder setNamePart(
            java.lang.String value) {
          copyOnWrite();
          instance.setNamePart(value);
          return this;
        }
        /**
         * <code>required string name_part = 1;</code>
         */
        public Builder clearNamePart() {
          copyOnWrite();
          instance.clearNamePart();
          return this;
        }
        /**
         * <code>required string name_part = 1;</code>
         */
        public Builder setNamePartBytes(
            com.google.protobuf.ByteString value) {
          copyOnWrite();
          instance.setNamePartBytes(value);
          return this;
        }

        /**
         * <code>required bool is_extension = 2;</code>
         */
        public boolean hasIsExtension() {
          return instance.hasIsExtension();
        }
        /**
         * <code>required bool is_extension = 2;</code>
         */
        public boolean getIsExtension() {
          return instance.getIsExtension();
        }
        /**
         * <code>required bool is_extension = 2;</code>
         */
        public Builder setIsExtension(boolean value) {
          copyOnWrite();
          instance.setIsExtension(value);
          return this;
        }
        /**
         * <code>required bool is_extension = 2;</code>
         */
        public Builder clearIsExtension() {
          copyOnWrite();
          instance.clearIsExtension();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:google.protobuf.UninterpretedOption.NamePart)
      }
      private byte memoizedIsInitialized = -1;
      protected final Object dynamicMethod(
          com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
          Object arg0, Object arg1) {
        switch (method) {
          case NEW_MUTABLE_INSTANCE: {
            return new com.google.protobuf.DescriptorProtos.UninterpretedOption.NamePart();
          }
          case IS_INITIALIZED: {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return DEFAULT_INSTANCE;
            if (isInitialized == 0) return null;

            boolean shouldMemoize = ((Boolean) arg0).booleanValue();
            if (!hasNamePart()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
            if (!hasIsExtension()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
            if (shouldMemoize) memoizedIsInitialized = 1;
            return DEFAULT_INSTANCE;

          }
          case MAKE_IMMUTABLE: {
            return null;
          }
          case NEW_BUILDER: {
            return new Builder();
          }
          case VISIT: {
            Visitor visitor = (Visitor) arg0;
            com.google.protobuf.DescriptorProtos.UninterpretedOption.NamePart other = (com.google.protobuf.DescriptorProtos.UninterpretedOption.NamePart) arg1;
            namePart_ = visitor.visitString(
                hasNamePart(), namePart_,
                other.hasNamePart(), other.namePart_);
            isExtension_ = visitor.visitBoolean(
                hasIsExtension(), isExtension_,
                other.hasIsExtension(), other.isExtension_);
            if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                .INSTANCE) {
              bitField0_ |= other.bitField0_;
            }
            return this;
          }
          case MERGE_FROM_STREAM: {
            com.google.protobuf.CodedInputStream input =
                (com.google.protobuf.CodedInputStream) arg0;
            com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                (com.google.protobuf.ExtensionRegistryLite) arg1;
            try {
              boolean done = false;
              while (!done) {
                int tag = input.readTag();
                switch (tag) {
                  case 0:
                    done = true;
                    break;
                  default: {
                    if (!parseUnknownField(tag, input)) {
                      done = true;
                    }
                    break;
                  }
                  case 10: {
                    String s = input.readString();
                    bitField0_ |= 0x00000001;
                    namePart_ = s;
                    break;
                  }
                  case 16: {
                    bitField0_ |= 0x00000002;
                    isExtension_ = input.readBool();
                    break;
                  }
                }
              }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw new RuntimeException(e.setUnfinishedMessage(this));
            } catch (java.io.IOException e) {
              throw new RuntimeException(
                  new com.google.protobuf.InvalidProtocolBufferException(
                      e.getMessage()).setUnfinishedMessage(this));
            } finally {
            }
          }
          case GET_DEFAULT_INSTANCE: {
            return DEFAULT_INSTANCE;
          }
          case GET_PARSER: {
            if (PARSER == null) {    synchronized (com.google.protobuf.DescriptorProtos.UninterpretedOption.NamePart.class) {
                if (PARSER == null) {
                  PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                }
              }
            }
            return PARSER;
          }
        }
        throw new UnsupportedOperationException();
      }


      // @@protoc_insertion_point(class_scope:google.protobuf.UninterpretedOption.NamePart)
      private static final com.google.protobuf.DescriptorProtos.UninterpretedOption.NamePart DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new NamePart();
        DEFAULT_INSTANCE.makeImmutable();
      }

      public static com.google.protobuf.DescriptorProtos.UninterpretedOption.NamePart getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static volatile com.google.protobuf.Parser<NamePart> PARSER;

      public static com.google.protobuf.Parser<NamePart> parser() {
        return DEFAULT_INSTANCE.getParserForType();
      }
    }

    private int bitField0_;
    public static final int NAME_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.ProtobufList<com.google.protobuf.DescriptorProtos.UninterpretedOption.NamePart> name_;
    /**
     * <code>repeated .google.protobuf.UninterpretedOption.NamePart name = 2;</code>
     */
    public java.util.List<com.google.protobuf.DescriptorProtos.UninterpretedOption.NamePart> getNameList() {
      return name_;
    }
    /**
     * <code>repeated .google.protobuf.UninterpretedOption.NamePart name = 2;</code>
     */
    public java.util.List<? extends com.google.protobuf.DescriptorProtos.UninterpretedOption.NamePartOrBuilder>
        getNameOrBuilderList() {
      return name_;
    }
    /**
     * <code>repeated .google.protobuf.UninterpretedOption.NamePart name = 2;</code>
     */
    public int getNameCount() {
      return name_.size();
    }
    /**
     * <code>repeated .google.protobuf.UninterpretedOption.NamePart name = 2;</code>
     */
    public com.google.protobuf.DescriptorProtos.UninterpretedOption.NamePart getName(int index) {
      return name_.get(index);
    }
    /**
     * <code>repeated .google.protobuf.UninterpretedOption.NamePart name = 2;</code>
     */
    public com.google.protobuf.DescriptorProtos.UninterpretedOption.NamePartOrBuilder getNameOrBuilder(
        int index) {
      return name_.get(index);
    }
    private void ensureNameIsMutable() {
      if (!name_.isModifiable()) {
        name_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(name_);
       }
    }

    /**
     * <code>repeated .google.protobuf.UninterpretedOption.NamePart name = 2;</code>
     */
    private void setName(
        int index, com.google.protobuf.DescriptorProtos.UninterpretedOption.NamePart value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureNameIsMutable();
      name_.set(index, value);
    }
    /**
     * <code>repeated .google.protobuf.UninterpretedOption.NamePart name = 2;</code>
     */
    private void setName(
        int index, com.google.protobuf.DescriptorProtos.UninterpretedOption.NamePart.Builder builderForValue) {
      ensureNameIsMutable();
      name_.set(index, builderForValue.build());
    }
    /**
     * <code>repeated .google.protobuf.UninterpretedOption.NamePart name = 2;</code>
     */
    private void addName(com.google.protobuf.DescriptorProtos.UninterpretedOption.NamePart value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureNameIsMutable();
      name_.add(value);
    }
    /**
     * <code>repeated .google.protobuf.UninterpretedOption.NamePart name = 2;</code>
     */
    private void addName(
        int index, com.google.protobuf.DescriptorProtos.UninterpretedOption.NamePart value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureNameIsMutable();
      name_.add(index, value);
    }
    /**
     * <code>repeated .google.protobuf.UninterpretedOption.NamePart name = 2;</code>
     */
    private void addName(
        com.google.protobuf.DescriptorProtos.UninterpretedOption.NamePart.Builder builderForValue) {
      ensureNameIsMutable();
      name_.add(builderForValue.build());
    }
    /**
     * <code>repeated .google.protobuf.UninterpretedOption.NamePart name = 2;</code>
     */
    private void addName(
        int index, com.google.protobuf.DescriptorProtos.UninterpretedOption.NamePart.Builder builderForValue) {
      ensureNameIsMutable();
      name_.add(index, builderForValue.build());
    }
    /**
     * <code>repeated .google.protobuf.UninterpretedOption.NamePart name = 2;</code>
     */
    private void addAllName(
        java.lang.Iterable<? extends com.google.protobuf.DescriptorProtos.UninterpretedOption.NamePart> values) {
      ensureNameIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, name_);
    }
    /**
     * <code>repeated .google.protobuf.UninterpretedOption.NamePart name = 2;</code>
     */
    private void clearName() {
      name_ = emptyProtobufList();
    }
    /**
     * <code>repeated .google.protobuf.UninterpretedOption.NamePart name = 2;</code>
     */
    private void removeName(int index) {
      ensureNameIsMutable();
      name_.remove(index);
    }

    public static final int IDENTIFIER_VALUE_FIELD_NUMBER = 3;
    private java.lang.String identifierValue_;
    /**
     * <pre>
     * The value of the uninterpreted option, in whatever type the tokenizer
     * identified it as during parsing. Exactly one of these should be set.
     * </pre>
     *
     * <code>optional string identifier_value = 3;</code>
     */
    public boolean hasIdentifierValue() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * The value of the uninterpreted option, in whatever type the tokenizer
     * identified it as during parsing. Exactly one of these should be set.
     * </pre>
     *
     * <code>optional string identifier_value = 3;</code>
     */
    public java.lang.String getIdentifierValue() {
      return identifierValue_;
    }
    /**
     * <pre>
     * The value of the uninterpreted option, in whatever type the tokenizer
     * identified it as during parsing. Exactly one of these should be set.
     * </pre>
     *
     * <code>optional string identifier_value = 3;</code>
     */
    public com.google.protobuf.ByteString
        getIdentifierValueBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(identifierValue_);
    }
    /**
     * <pre>
     * The value of the uninterpreted option, in whatever type the tokenizer
     * identified it as during parsing. Exactly one of these should be set.
     * </pre>
     *
     * <code>optional string identifier_value = 3;</code>
     */
    private void setIdentifierValue(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      identifierValue_ = value;
    }
    /**
     * <pre>
     * The value of the uninterpreted option, in whatever type the tokenizer
     * identified it as during parsing. Exactly one of these should be set.
     * </pre>
     *
     * <code>optional string identifier_value = 3;</code>
     */
    private void clearIdentifierValue() {
      bitField0_ = (bitField0_ & ~0x00000001);
      identifierValue_ = getDefaultInstance().getIdentifierValue();
    }
    /**
     * <pre>
     * The value of the uninterpreted option, in whatever type the tokenizer
     * identified it as during parsing. Exactly one of these should be set.
     * </pre>
     *
     * <code>optional string identifier_value = 3;</code>
     */
    private void setIdentifierValueBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      identifierValue_ = value.toStringUtf8();
    }

    public static final int POSITIVE_INT_VALUE_FIELD_NUMBER = 4;
    private long positiveIntValue_;
    /**
     * <code>optional uint64 positive_int_value = 4;</code>
     */
    public boolean hasPositiveIntValue() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint64 positive_int_value = 4;</code>
     */
    public long getPositiveIntValue() {
      return positiveIntValue_;
    }
    /**
     * <code>optional uint64 positive_int_value = 4;</code>
     */
    private void setPositiveIntValue(long value) {
      bitField0_ |= 0x00000002;
      positiveIntValue_ = value;
    }
    /**
     * <code>optional uint64 positive_int_value = 4;</code>
     */
    private void clearPositiveIntValue() {
      bitField0_ = (bitField0_ & ~0x00000002);
      positiveIntValue_ = 0L;
    }

    public static final int NEGATIVE_INT_VALUE_FIELD_NUMBER = 5;
    private long negativeIntValue_;
    /**
     * <code>optional int64 negative_int_value = 5;</code>
     */
    public boolean hasNegativeIntValue() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int64 negative_int_value = 5;</code>
     */
    public long getNegativeIntValue() {
      return negativeIntValue_;
    }
    /**
     * <code>optional int64 negative_int_value = 5;</code>
     */
    private void setNegativeIntValue(long value) {
      bitField0_ |= 0x00000004;
      negativeIntValue_ = value;
    }
    /**
     * <code>optional int64 negative_int_value = 5;</code>
     */
    private void clearNegativeIntValue() {
      bitField0_ = (bitField0_ & ~0x00000004);
      negativeIntValue_ = 0L;
    }

    public static final int DOUBLE_VALUE_FIELD_NUMBER = 6;
    private double doubleValue_;
    /**
     * <code>optional double double_value = 6;</code>
     */
    public boolean hasDoubleValue() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional double double_value = 6;</code>
     */
    public double getDoubleValue() {
      return doubleValue_;
    }
    /**
     * <code>optional double double_value = 6;</code>
     */
    private void setDoubleValue(double value) {
      bitField0_ |= 0x00000008;
      doubleValue_ = value;
    }
    /**
     * <code>optional double double_value = 6;</code>
     */
    private void clearDoubleValue() {
      bitField0_ = (bitField0_ & ~0x00000008);
      doubleValue_ = 0D;
    }

    public static final int STRING_VALUE_FIELD_NUMBER = 7;
    private com.google.protobuf.ByteString stringValue_;
    /**
     * <code>optional bytes string_value = 7;</code>
     */
    public boolean hasStringValue() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional bytes string_value = 7;</code>
     */
    public com.google.protobuf.ByteString getStringValue() {
      return stringValue_;
    }
    /**
     * <code>optional bytes string_value = 7;</code>
     */
    private void setStringValue(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
      stringValue_ = value;
    }
    /**
     * <code>optional bytes string_value = 7;</code>
     */
    private void clearStringValue() {
      bitField0_ = (bitField0_ & ~0x00000010);
      stringValue_ = getDefaultInstance().getStringValue();
    }

    public static final int AGGREGATE_VALUE_FIELD_NUMBER = 8;
    private java.lang.String aggregateValue_;
    /**
     * <code>optional string aggregate_value = 8;</code>
     */
    public boolean hasAggregateValue() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional string aggregate_value = 8;</code>
     */
    public java.lang.String getAggregateValue() {
      return aggregateValue_;
    }
    /**
     * <code>optional string aggregate_value = 8;</code>
     */
    public com.google.protobuf.ByteString
        getAggregateValueBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(aggregateValue_);
    }
    /**
     * <code>optional string aggregate_value = 8;</code>
     */
    private void setAggregateValue(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
      aggregateValue_ = value;
    }
    /**
     * <code>optional string aggregate_value = 8;</code>
     */
    private void clearAggregateValue() {
      bitField0_ = (bitField0_ & ~0x00000020);
      aggregateValue_ = getDefaultInstance().getAggregateValue();
    }
    /**
     * <code>optional string aggregate_value = 8;</code>
     */
    private void setAggregateValueBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
      aggregateValue_ = value.toStringUtf8();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < name_.size(); i++) {
        output.writeMessage(2, name_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeString(3, getIdentifierValue());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(4, positiveIntValue_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(5, negativeIntValue_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeDouble(6, doubleValue_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(7, stringValue_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeString(8, getAggregateValue());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < name_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, name_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getIdentifierValue());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(4, positiveIntValue_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, negativeIntValue_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, doubleValue_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, stringValue_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(8, getAggregateValue());
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.google.protobuf.DescriptorProtos.UninterpretedOption parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.google.protobuf.DescriptorProtos.UninterpretedOption parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.google.protobuf.DescriptorProtos.UninterpretedOption parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.google.protobuf.DescriptorProtos.UninterpretedOption parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.google.protobuf.DescriptorProtos.UninterpretedOption parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.google.protobuf.DescriptorProtos.UninterpretedOption parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.google.protobuf.DescriptorProtos.UninterpretedOption parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.google.protobuf.DescriptorProtos.UninterpretedOption parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.google.protobuf.DescriptorProtos.UninterpretedOption parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.google.protobuf.DescriptorProtos.UninterpretedOption parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.protobuf.DescriptorProtos.UninterpretedOption prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * A message representing a option the parser does not recognize. This only
     * appears in options protos created by the compiler::Parser class.
     * DescriptorPool resolves these when building Descriptor objects. Therefore,
     * options protos in descriptor objects (e.g. returned by Descriptor::options(),
     * or produced by Descriptor::CopyTo()) will never have UninterpretedOptions
     * in them.
     * </pre>
     *
     * Protobuf type {@code google.protobuf.UninterpretedOption}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.google.protobuf.DescriptorProtos.UninterpretedOption, Builder> implements
        // @@protoc_insertion_point(builder_implements:google.protobuf.UninterpretedOption)
        com.google.protobuf.DescriptorProtos.UninterpretedOptionOrBuilder {
      // Construct using com.google.protobuf.DescriptorProtos.UninterpretedOption.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>repeated .google.protobuf.UninterpretedOption.NamePart name = 2;</code>
       */
      public java.util.List<com.google.protobuf.DescriptorProtos.UninterpretedOption.NamePart> getNameList() {
        return java.util.Collections.unmodifiableList(
            instance.getNameList());
      }
      /**
       * <code>repeated .google.protobuf.UninterpretedOption.NamePart name = 2;</code>
       */
      public int getNameCount() {
        return instance.getNameCount();
      }/**
       * <code>repeated .google.protobuf.UninterpretedOption.NamePart name = 2;</code>
       */
      public com.google.protobuf.DescriptorProtos.UninterpretedOption.NamePart getName(int index) {
        return instance.getName(index);
      }
      /**
       * <code>repeated .google.protobuf.UninterpretedOption.NamePart name = 2;</code>
       */
      public Builder setName(
          int index, com.google.protobuf.DescriptorProtos.UninterpretedOption.NamePart value) {
        copyOnWrite();
        instance.setName(index, value);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.UninterpretedOption.NamePart name = 2;</code>
       */
      public Builder setName(
          int index, com.google.protobuf.DescriptorProtos.UninterpretedOption.NamePart.Builder builderForValue) {
        copyOnWrite();
        instance.setName(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.UninterpretedOption.NamePart name = 2;</code>
       */
      public Builder addName(com.google.protobuf.DescriptorProtos.UninterpretedOption.NamePart value) {
        copyOnWrite();
        instance.addName(value);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.UninterpretedOption.NamePart name = 2;</code>
       */
      public Builder addName(
          int index, com.google.protobuf.DescriptorProtos.UninterpretedOption.NamePart value) {
        copyOnWrite();
        instance.addName(index, value);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.UninterpretedOption.NamePart name = 2;</code>
       */
      public Builder addName(
          com.google.protobuf.DescriptorProtos.UninterpretedOption.NamePart.Builder builderForValue) {
        copyOnWrite();
        instance.addName(builderForValue);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.UninterpretedOption.NamePart name = 2;</code>
       */
      public Builder addName(
          int index, com.google.protobuf.DescriptorProtos.UninterpretedOption.NamePart.Builder builderForValue) {
        copyOnWrite();
        instance.addName(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.UninterpretedOption.NamePart name = 2;</code>
       */
      public Builder addAllName(
          java.lang.Iterable<? extends com.google.protobuf.DescriptorProtos.UninterpretedOption.NamePart> values) {
        copyOnWrite();
        instance.addAllName(values);
        return this;
      }
      /**
       * <code>repeated .google.protobuf.UninterpretedOption.NamePart name = 2;</code>
       */
      public Builder clearName() {
        copyOnWrite();
        instance.clearName();
        return this;
      }
      /**
       * <code>repeated .google.protobuf.UninterpretedOption.NamePart name = 2;</code>
       */
      public Builder removeName(int index) {
        copyOnWrite();
        instance.removeName(index);
        return this;
      }

      /**
       * <pre>
       * The value of the uninterpreted option, in whatever type the tokenizer
       * identified it as during parsing. Exactly one of these should be set.
       * </pre>
       *
       * <code>optional string identifier_value = 3;</code>
       */
      public boolean hasIdentifierValue() {
        return instance.hasIdentifierValue();
      }
      /**
       * <pre>
       * The value of the uninterpreted option, in whatever type the tokenizer
       * identified it as during parsing. Exactly one of these should be set.
       * </pre>
       *
       * <code>optional string identifier_value = 3;</code>
       */
      public java.lang.String getIdentifierValue() {
        return instance.getIdentifierValue();
      }
      /**
       * <pre>
       * The value of the uninterpreted option, in whatever type the tokenizer
       * identified it as during parsing. Exactly one of these should be set.
       * </pre>
       *
       * <code>optional string identifier_value = 3;</code>
       */
      public com.google.protobuf.ByteString
          getIdentifierValueBytes() {
        return instance.getIdentifierValueBytes();
      }
      /**
       * <pre>
       * The value of the uninterpreted option, in whatever type the tokenizer
       * identified it as during parsing. Exactly one of these should be set.
       * </pre>
       *
       * <code>optional string identifier_value = 3;</code>
       */
      public Builder setIdentifierValue(
          java.lang.String value) {
        copyOnWrite();
        instance.setIdentifierValue(value);
        return this;
      }
      /**
       * <pre>
       * The value of the uninterpreted option, in whatever type the tokenizer
       * identified it as during parsing. Exactly one of these should be set.
       * </pre>
       *
       * <code>optional string identifier_value = 3;</code>
       */
      public Builder clearIdentifierValue() {
        copyOnWrite();
        instance.clearIdentifierValue();
        return this;
      }
      /**
       * <pre>
       * The value of the uninterpreted option, in whatever type the tokenizer
       * identified it as during parsing. Exactly one of these should be set.
       * </pre>
       *
       * <code>optional string identifier_value = 3;</code>
       */
      public Builder setIdentifierValueBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setIdentifierValueBytes(value);
        return this;
      }

      /**
       * <code>optional uint64 positive_int_value = 4;</code>
       */
      public boolean hasPositiveIntValue() {
        return instance.hasPositiveIntValue();
      }
      /**
       * <code>optional uint64 positive_int_value = 4;</code>
       */
      public long getPositiveIntValue() {
        return instance.getPositiveIntValue();
      }
      /**
       * <code>optional uint64 positive_int_value = 4;</code>
       */
      public Builder setPositiveIntValue(long value) {
        copyOnWrite();
        instance.setPositiveIntValue(value);
        return this;
      }
      /**
       * <code>optional uint64 positive_int_value = 4;</code>
       */
      public Builder clearPositiveIntValue() {
        copyOnWrite();
        instance.clearPositiveIntValue();
        return this;
      }

      /**
       * <code>optional int64 negative_int_value = 5;</code>
       */
      public boolean hasNegativeIntValue() {
        return instance.hasNegativeIntValue();
      }
      /**
       * <code>optional int64 negative_int_value = 5;</code>
       */
      public long getNegativeIntValue() {
        return instance.getNegativeIntValue();
      }
      /**
       * <code>optional int64 negative_int_value = 5;</code>
       */
      public Builder setNegativeIntValue(long value) {
        copyOnWrite();
        instance.setNegativeIntValue(value);
        return this;
      }
      /**
       * <code>optional int64 negative_int_value = 5;</code>
       */
      public Builder clearNegativeIntValue() {
        copyOnWrite();
        instance.clearNegativeIntValue();
        return this;
      }

      /**
       * <code>optional double double_value = 6;</code>
       */
      public boolean hasDoubleValue() {
        return instance.hasDoubleValue();
      }
      /**
       * <code>optional double double_value = 6;</code>
       */
      public double getDoubleValue() {
        return instance.getDoubleValue();
      }
      /**
       * <code>optional double double_value = 6;</code>
       */
      public Builder setDoubleValue(double value) {
        copyOnWrite();
        instance.setDoubleValue(value);
        return this;
      }
      /**
       * <code>optional double double_value = 6;</code>
       */
      public Builder clearDoubleValue() {
        copyOnWrite();
        instance.clearDoubleValue();
        return this;
      }

      /**
       * <code>optional bytes string_value = 7;</code>
       */
      public boolean hasStringValue() {
        return instance.hasStringValue();
      }
      /**
       * <code>optional bytes string_value = 7;</code>
       */
      public com.google.protobuf.ByteString getStringValue() {
        return instance.getStringValue();
      }
      /**
       * <code>optional bytes string_value = 7;</code>
       */
      public Builder setStringValue(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setStringValue(value);
        return this;
      }
      /**
       * <code>optional bytes string_value = 7;</code>
       */
      public Builder clearStringValue() {
        copyOnWrite();
        instance.clearStringValue();
        return this;
      }

      /**
       * <code>optional string aggregate_value = 8;</code>
       */
      public boolean hasAggregateValue() {
        return instance.hasAggregateValue();
      }
      /**
       * <code>optional string aggregate_value = 8;</code>
       */
      public java.lang.String getAggregateValue() {
        return instance.getAggregateValue();
      }
      /**
       * <code>optional string aggregate_value = 8;</code>
       */
      public com.google.protobuf.ByteString
          getAggregateValueBytes() {
        return instance.getAggregateValueBytes();
      }
      /**
       * <code>optional string aggregate_value = 8;</code>
       */
      public Builder setAggregateValue(
          java.lang.String value) {
        copyOnWrite();
        instance.setAggregateValue(value);
        return this;
      }
      /**
       * <code>optional string aggregate_value = 8;</code>
       */
      public Builder clearAggregateValue() {
        copyOnWrite();
        instance.clearAggregateValue();
        return this;
      }
      /**
       * <code>optional string aggregate_value = 8;</code>
       */
      public Builder setAggregateValueBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setAggregateValueBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:google.protobuf.UninterpretedOption)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.google.protobuf.DescriptorProtos.UninterpretedOption();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          for (int i = 0; i < getNameCount(); i++) {
            if (!getName(i).isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          name_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.google.protobuf.DescriptorProtos.UninterpretedOption other = (com.google.protobuf.DescriptorProtos.UninterpretedOption) arg1;
          name_= visitor.visitList(name_, other.name_);
          identifierValue_ = visitor.visitString(
              hasIdentifierValue(), identifierValue_,
              other.hasIdentifierValue(), other.identifierValue_);
          positiveIntValue_ = visitor.visitLong(
              hasPositiveIntValue(), positiveIntValue_,
              other.hasPositiveIntValue(), other.positiveIntValue_);
          negativeIntValue_ = visitor.visitLong(
              hasNegativeIntValue(), negativeIntValue_,
              other.hasNegativeIntValue(), other.negativeIntValue_);
          doubleValue_ = visitor.visitDouble(
              hasDoubleValue(), doubleValue_,
              other.hasDoubleValue(), other.doubleValue_);
          stringValue_ = visitor.visitByteString(
              hasStringValue(), stringValue_,
              other.hasStringValue(), other.stringValue_);
          aggregateValue_ = visitor.visitString(
              hasAggregateValue(), aggregateValue_,
              other.hasAggregateValue(), other.aggregateValue_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 18: {
                  if (!name_.isModifiable()) {
                    name_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(name_);
                  }
                  name_.add(
                      input.readMessage(com.google.protobuf.DescriptorProtos.UninterpretedOption.NamePart.parser(), extensionRegistry));
                  break;
                }
                case 26: {
                  String s = input.readString();
                  bitField0_ |= 0x00000001;
                  identifierValue_ = s;
                  break;
                }
                case 32: {
                  bitField0_ |= 0x00000002;
                  positiveIntValue_ = input.readUInt64();
                  break;
                }
                case 40: {
                  bitField0_ |= 0x00000004;
                  negativeIntValue_ = input.readInt64();
                  break;
                }
                case 49: {
                  bitField0_ |= 0x00000008;
                  doubleValue_ = input.readDouble();
                  break;
                }
                case 58: {
                  bitField0_ |= 0x00000010;
                  stringValue_ = input.readBytes();
                  break;
                }
                case 66: {
                  String s = input.readString();
                  bitField0_ |= 0x00000020;
                  aggregateValue_ = s;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.google.protobuf.DescriptorProtos.UninterpretedOption.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:google.protobuf.UninterpretedOption)
    private static final com.google.protobuf.DescriptorProtos.UninterpretedOption DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new UninterpretedOption();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.google.protobuf.DescriptorProtos.UninterpretedOption getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<UninterpretedOption> PARSER;

    public static com.google.protobuf.Parser<UninterpretedOption> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface SourceCodeInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.protobuf.SourceCodeInfo)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * A Location identifies a piece of source code in a .proto file which
     * corresponds to a particular definition.  This information is intended
     * to be useful to IDEs, code indexers, documentation generators, and similar
     * tools.
     * For example, say we have a file like:
     *   message Foo {
     *     optional string foo = 1;
     *   }
     * Let's look at just the field definition:
     *   optional string foo = 1;
     *   ^       ^^     ^^  ^  ^^^
     *   a       bc     de  f  ghi
     * We have the following locations:
     *   span   path               represents
     *   [a,i)  [ 4, 0, 2, 0 ]     The whole field definition.
     *   [a,b)  [ 4, 0, 2, 0, 4 ]  The label (optional).
     *   [c,d)  [ 4, 0, 2, 0, 5 ]  The type (string).
     *   [e,f)  [ 4, 0, 2, 0, 1 ]  The name (foo).
     *   [g,h)  [ 4, 0, 2, 0, 3 ]  The number (1).
     * Notes:
     * - A location may refer to a repeated field itself (i.e. not to any
     *   particular index within it).  This is used whenever a set of elements are
     *   logically enclosed in a single code segment.  For example, an entire
     *   extend block (possibly containing multiple extension definitions) will
     *   have an outer location whose path refers to the "extensions" repeated
     *   field without an index.
     * - Multiple locations may have the same path.  This happens when a single
     *   logical declaration is spread out across multiple places.  The most
     *   obvious example is the "extend" block again -- there may be multiple
     *   extend blocks in the same scope, each of which will have the same path.
     * - A location's span is not always a subset of its parent's span.  For
     *   example, the "extendee" of an extension declaration appears at the
     *   beginning of the "extend" block and is shared by all extensions within
     *   the block.
     * - Just because a location's span is a subset of some other location's span
     *   does not mean that it is a descendent.  For example, a "group" defines
     *   both a type and a field in a single declaration.  Thus, the locations
     *   corresponding to the type and field and their components will overlap.
     * - Code which tries to interpret locations should probably be designed to
     *   ignore those that it doesn't understand, as more types of locations could
     *   be recorded in the future.
     * </pre>
     *
     * <code>repeated .google.protobuf.SourceCodeInfo.Location location = 1;</code>
     */
    java.util.List<com.google.protobuf.DescriptorProtos.SourceCodeInfo.Location>
        getLocationList();
    /**
     * <pre>
     * A Location identifies a piece of source code in a .proto file which
     * corresponds to a particular definition.  This information is intended
     * to be useful to IDEs, code indexers, documentation generators, and similar
     * tools.
     * For example, say we have a file like:
     *   message Foo {
     *     optional string foo = 1;
     *   }
     * Let's look at just the field definition:
     *   optional string foo = 1;
     *   ^       ^^     ^^  ^  ^^^
     *   a       bc     de  f  ghi
     * We have the following locations:
     *   span   path               represents
     *   [a,i)  [ 4, 0, 2, 0 ]     The whole field definition.
     *   [a,b)  [ 4, 0, 2, 0, 4 ]  The label (optional).
     *   [c,d)  [ 4, 0, 2, 0, 5 ]  The type (string).
     *   [e,f)  [ 4, 0, 2, 0, 1 ]  The name (foo).
     *   [g,h)  [ 4, 0, 2, 0, 3 ]  The number (1).
     * Notes:
     * - A location may refer to a repeated field itself (i.e. not to any
     *   particular index within it).  This is used whenever a set of elements are
     *   logically enclosed in a single code segment.  For example, an entire
     *   extend block (possibly containing multiple extension definitions) will
     *   have an outer location whose path refers to the "extensions" repeated
     *   field without an index.
     * - Multiple locations may have the same path.  This happens when a single
     *   logical declaration is spread out across multiple places.  The most
     *   obvious example is the "extend" block again -- there may be multiple
     *   extend blocks in the same scope, each of which will have the same path.
     * - A location's span is not always a subset of its parent's span.  For
     *   example, the "extendee" of an extension declaration appears at the
     *   beginning of the "extend" block and is shared by all extensions within
     *   the block.
     * - Just because a location's span is a subset of some other location's span
     *   does not mean that it is a descendent.  For example, a "group" defines
     *   both a type and a field in a single declaration.  Thus, the locations
     *   corresponding to the type and field and their components will overlap.
     * - Code which tries to interpret locations should probably be designed to
     *   ignore those that it doesn't understand, as more types of locations could
     *   be recorded in the future.
     * </pre>
     *
     * <code>repeated .google.protobuf.SourceCodeInfo.Location location = 1;</code>
     */
    com.google.protobuf.DescriptorProtos.SourceCodeInfo.Location getLocation(int index);
    /**
     * <pre>
     * A Location identifies a piece of source code in a .proto file which
     * corresponds to a particular definition.  This information is intended
     * to be useful to IDEs, code indexers, documentation generators, and similar
     * tools.
     * For example, say we have a file like:
     *   message Foo {
     *     optional string foo = 1;
     *   }
     * Let's look at just the field definition:
     *   optional string foo = 1;
     *   ^       ^^     ^^  ^  ^^^
     *   a       bc     de  f  ghi
     * We have the following locations:
     *   span   path               represents
     *   [a,i)  [ 4, 0, 2, 0 ]     The whole field definition.
     *   [a,b)  [ 4, 0, 2, 0, 4 ]  The label (optional).
     *   [c,d)  [ 4, 0, 2, 0, 5 ]  The type (string).
     *   [e,f)  [ 4, 0, 2, 0, 1 ]  The name (foo).
     *   [g,h)  [ 4, 0, 2, 0, 3 ]  The number (1).
     * Notes:
     * - A location may refer to a repeated field itself (i.e. not to any
     *   particular index within it).  This is used whenever a set of elements are
     *   logically enclosed in a single code segment.  For example, an entire
     *   extend block (possibly containing multiple extension definitions) will
     *   have an outer location whose path refers to the "extensions" repeated
     *   field without an index.
     * - Multiple locations may have the same path.  This happens when a single
     *   logical declaration is spread out across multiple places.  The most
     *   obvious example is the "extend" block again -- there may be multiple
     *   extend blocks in the same scope, each of which will have the same path.
     * - A location's span is not always a subset of its parent's span.  For
     *   example, the "extendee" of an extension declaration appears at the
     *   beginning of the "extend" block and is shared by all extensions within
     *   the block.
     * - Just because a location's span is a subset of some other location's span
     *   does not mean that it is a descendent.  For example, a "group" defines
     *   both a type and a field in a single declaration.  Thus, the locations
     *   corresponding to the type and field and their components will overlap.
     * - Code which tries to interpret locations should probably be designed to
     *   ignore those that it doesn't understand, as more types of locations could
     *   be recorded in the future.
     * </pre>
     *
     * <code>repeated .google.protobuf.SourceCodeInfo.Location location = 1;</code>
     */
    int getLocationCount();
  }
  /**
   * <pre>
   * Encapsulates information about the original source file from which a
   * FileDescriptorProto was generated.
   * </pre>
   *
   * Protobuf type {@code google.protobuf.SourceCodeInfo}
   */
  public  static final class SourceCodeInfo extends
      com.google.protobuf.GeneratedMessageLite<
          SourceCodeInfo, SourceCodeInfo.Builder> implements
      // @@protoc_insertion_point(message_implements:google.protobuf.SourceCodeInfo)
      SourceCodeInfoOrBuilder {
    private SourceCodeInfo() {
      location_ = emptyProtobufList();
    }
    public interface LocationOrBuilder extends
        // @@protoc_insertion_point(interface_extends:google.protobuf.SourceCodeInfo.Location)
        com.google.protobuf.MessageLiteOrBuilder {

      /**
       * <pre>
       * Identifies which part of the FileDescriptorProto was defined at this
       * location.
       * Each element is a field number or an index.  They form a path from
       * the root FileDescriptorProto to the place where the definition.  For
       * example, this path:
       *   [ 4, 3, 2, 7, 1 ]
       * refers to:
       *   file.message_type(3)  // 4, 3
       *       .field(7)         // 2, 7
       *       .name()           // 1
       * This is because FileDescriptorProto.message_type has field number 4:
       *   repeated DescriptorProto message_type = 4;
       * and DescriptorProto.field has field number 2:
       *   repeated FieldDescriptorProto field = 2;
       * and FieldDescriptorProto.name has field number 1:
       *   optional string name = 1;
       * Thus, the above path gives the location of a field name.  If we removed
       * the last element:
       *   [ 4, 3, 2, 7 ]
       * this path refers to the whole field declaration (from the beginning
       * of the label to the terminating semicolon).
       * </pre>
       *
       * <code>repeated int32 path = 1 [packed = true];</code>
       */
      java.util.List<java.lang.Integer> getPathList();
      /**
       * <pre>
       * Identifies which part of the FileDescriptorProto was defined at this
       * location.
       * Each element is a field number or an index.  They form a path from
       * the root FileDescriptorProto to the place where the definition.  For
       * example, this path:
       *   [ 4, 3, 2, 7, 1 ]
       * refers to:
       *   file.message_type(3)  // 4, 3
       *       .field(7)         // 2, 7
       *       .name()           // 1
       * This is because FileDescriptorProto.message_type has field number 4:
       *   repeated DescriptorProto message_type = 4;
       * and DescriptorProto.field has field number 2:
       *   repeated FieldDescriptorProto field = 2;
       * and FieldDescriptorProto.name has field number 1:
       *   optional string name = 1;
       * Thus, the above path gives the location of a field name.  If we removed
       * the last element:
       *   [ 4, 3, 2, 7 ]
       * this path refers to the whole field declaration (from the beginning
       * of the label to the terminating semicolon).
       * </pre>
       *
       * <code>repeated int32 path = 1 [packed = true];</code>
       */
      int getPathCount();
      /**
       * <pre>
       * Identifies which part of the FileDescriptorProto was defined at this
       * location.
       * Each element is a field number or an index.  They form a path from
       * the root FileDescriptorProto to the place where the definition.  For
       * example, this path:
       *   [ 4, 3, 2, 7, 1 ]
       * refers to:
       *   file.message_type(3)  // 4, 3
       *       .field(7)         // 2, 7
       *       .name()           // 1
       * This is because FileDescriptorProto.message_type has field number 4:
       *   repeated DescriptorProto message_type = 4;
       * and DescriptorProto.field has field number 2:
       *   repeated FieldDescriptorProto field = 2;
       * and FieldDescriptorProto.name has field number 1:
       *   optional string name = 1;
       * Thus, the above path gives the location of a field name.  If we removed
       * the last element:
       *   [ 4, 3, 2, 7 ]
       * this path refers to the whole field declaration (from the beginning
       * of the label to the terminating semicolon).
       * </pre>
       *
       * <code>repeated int32 path = 1 [packed = true];</code>
       */
      int getPath(int index);

      /**
       * <pre>
       * Always has exactly three or four elements: start line, start column,
       * end line (optional, otherwise assumed same as start line), end column.
       * These are packed into a single field for efficiency.  Note that line
       * and column numbers are zero-based -- typically you will want to add
       * 1 to each before displaying to a user.
       * </pre>
       *
       * <code>repeated int32 span = 2 [packed = true];</code>
       */
      java.util.List<java.lang.Integer> getSpanList();
      /**
       * <pre>
       * Always has exactly three or four elements: start line, start column,
       * end line (optional, otherwise assumed same as start line), end column.
       * These are packed into a single field for efficiency.  Note that line
       * and column numbers are zero-based -- typically you will want to add
       * 1 to each before displaying to a user.
       * </pre>
       *
       * <code>repeated int32 span = 2 [packed = true];</code>
       */
      int getSpanCount();
      /**
       * <pre>
       * Always has exactly three or four elements: start line, start column,
       * end line (optional, otherwise assumed same as start line), end column.
       * These are packed into a single field for efficiency.  Note that line
       * and column numbers are zero-based -- typically you will want to add
       * 1 to each before displaying to a user.
       * </pre>
       *
       * <code>repeated int32 span = 2 [packed = true];</code>
       */
      int getSpan(int index);

      /**
       * <pre>
       * If this SourceCodeInfo represents a complete declaration, these are any
       * comments appearing before and after the declaration which appear to be
       * attached to the declaration.
       * A series of line comments appearing on consecutive lines, with no other
       * tokens appearing on those lines, will be treated as a single comment.
       * leading_detached_comments will keep paragraphs of comments that appear
       * before (but not connected to) the current element. Each paragraph,
       * separated by empty lines, will be one comment element in the repeated
       * field.
       * Only the comment content is provided; comment markers (e.g. //) are
       * stripped out.  For block comments, leading whitespace and an asterisk
       * will be stripped from the beginning of each line other than the first.
       * Newlines are included in the output.
       * Examples:
       *   optional int32 foo = 1;  // Comment attached to foo.
       *   // Comment attached to bar.
       *   optional int32 bar = 2;
       *   optional string baz = 3;
       *   // Comment attached to baz.
       *   // Another line attached to baz.
       *   // Comment attached to qux.
       *   //
       *   // Another line attached to qux.
       *   optional double qux = 4;
       *   // Detached comment for corge. This is not leading or trailing comments
       *   // to qux or corge because there are blank lines separating it from
       *   // both.
       *   // Detached comment for corge paragraph 2.
       *   optional string corge = 5;
       *   /&#42; Block comment attached
       *    * to corge.  Leading asterisks
       *    * will be removed. *&#47;
       *   /&#42; Block comment attached to
       *    * grault. *&#47;
       *   optional int32 grault = 6;
       *   // ignored detached comments.
       * </pre>
       *
       * <code>optional string leading_comments = 3;</code>
       */
      boolean hasLeadingComments();
      /**
       * <pre>
       * If this SourceCodeInfo represents a complete declaration, these are any
       * comments appearing before and after the declaration which appear to be
       * attached to the declaration.
       * A series of line comments appearing on consecutive lines, with no other
       * tokens appearing on those lines, will be treated as a single comment.
       * leading_detached_comments will keep paragraphs of comments that appear
       * before (but not connected to) the current element. Each paragraph,
       * separated by empty lines, will be one comment element in the repeated
       * field.
       * Only the comment content is provided; comment markers (e.g. //) are
       * stripped out.  For block comments, leading whitespace and an asterisk
       * will be stripped from the beginning of each line other than the first.
       * Newlines are included in the output.
       * Examples:
       *   optional int32 foo = 1;  // Comment attached to foo.
       *   // Comment attached to bar.
       *   optional int32 bar = 2;
       *   optional string baz = 3;
       *   // Comment attached to baz.
       *   // Another line attached to baz.
       *   // Comment attached to qux.
       *   //
       *   // Another line attached to qux.
       *   optional double qux = 4;
       *   // Detached comment for corge. This is not leading or trailing comments
       *   // to qux or corge because there are blank lines separating it from
       *   // both.
       *   // Detached comment for corge paragraph 2.
       *   optional string corge = 5;
       *   /&#42; Block comment attached
       *    * to corge.  Leading asterisks
       *    * will be removed. *&#47;
       *   /&#42; Block comment attached to
       *    * grault. *&#47;
       *   optional int32 grault = 6;
       *   // ignored detached comments.
       * </pre>
       *
       * <code>optional string leading_comments = 3;</code>
       */
      java.lang.String getLeadingComments();
      /**
       * <pre>
       * If this SourceCodeInfo represents a complete declaration, these are any
       * comments appearing before and after the declaration which appear to be
       * attached to the declaration.
       * A series of line comments appearing on consecutive lines, with no other
       * tokens appearing on those lines, will be treated as a single comment.
       * leading_detached_comments will keep paragraphs of comments that appear
       * before (but not connected to) the current element. Each paragraph,
       * separated by empty lines, will be one comment element in the repeated
       * field.
       * Only the comment content is provided; comment markers (e.g. //) are
       * stripped out.  For block comments, leading whitespace and an asterisk
       * will be stripped from the beginning of each line other than the first.
       * Newlines are included in the output.
       * Examples:
       *   optional int32 foo = 1;  // Comment attached to foo.
       *   // Comment attached to bar.
       *   optional int32 bar = 2;
       *   optional string baz = 3;
       *   // Comment attached to baz.
       *   // Another line attached to baz.
       *   // Comment attached to qux.
       *   //
       *   // Another line attached to qux.
       *   optional double qux = 4;
       *   // Detached comment for corge. This is not leading or trailing comments
       *   // to qux or corge because there are blank lines separating it from
       *   // both.
       *   // Detached comment for corge paragraph 2.
       *   optional string corge = 5;
       *   /&#42; Block comment attached
       *    * to corge.  Leading asterisks
       *    * will be removed. *&#47;
       *   /&#42; Block comment attached to
       *    * grault. *&#47;
       *   optional int32 grault = 6;
       *   // ignored detached comments.
       * </pre>
       *
       * <code>optional string leading_comments = 3;</code>
       */
      com.google.protobuf.ByteString
          getLeadingCommentsBytes();

      /**
       * <code>optional string trailing_comments = 4;</code>
       */
      boolean hasTrailingComments();
      /**
       * <code>optional string trailing_comments = 4;</code>
       */
      java.lang.String getTrailingComments();
      /**
       * <code>optional string trailing_comments = 4;</code>
       */
      com.google.protobuf.ByteString
          getTrailingCommentsBytes();

      /**
       * <code>repeated string leading_detached_comments = 6;</code>
       */
      java.util.List<String>
          getLeadingDetachedCommentsList();
      /**
       * <code>repeated string leading_detached_comments = 6;</code>
       */
      int getLeadingDetachedCommentsCount();
      /**
       * <code>repeated string leading_detached_comments = 6;</code>
       */
      java.lang.String getLeadingDetachedComments(int index);
      /**
       * <code>repeated string leading_detached_comments = 6;</code>
       */
      com.google.protobuf.ByteString
          getLeadingDetachedCommentsBytes(int index);
    }
    /**
     * Protobuf type {@code google.protobuf.SourceCodeInfo.Location}
     */
    public  static final class Location extends
        com.google.protobuf.GeneratedMessageLite<
            Location, Location.Builder> implements
        // @@protoc_insertion_point(message_implements:google.protobuf.SourceCodeInfo.Location)
        LocationOrBuilder {
      private Location() {
        path_ = emptyIntList();
        span_ = emptyIntList();
        leadingComments_ = "";
        trailingComments_ = "";
        leadingDetachedComments_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
      }
      private int bitField0_;
      public static final int PATH_FIELD_NUMBER = 1;
      private com.google.protobuf.Internal.IntList path_;
      /**
       * <pre>
       * Identifies which part of the FileDescriptorProto was defined at this
       * location.
       * Each element is a field number or an index.  They form a path from
       * the root FileDescriptorProto to the place where the definition.  For
       * example, this path:
       *   [ 4, 3, 2, 7, 1 ]
       * refers to:
       *   file.message_type(3)  // 4, 3
       *       .field(7)         // 2, 7
       *       .name()           // 1
       * This is because FileDescriptorProto.message_type has field number 4:
       *   repeated DescriptorProto message_type = 4;
       * and DescriptorProto.field has field number 2:
       *   repeated FieldDescriptorProto field = 2;
       * and FieldDescriptorProto.name has field number 1:
       *   optional string name = 1;
       * Thus, the above path gives the location of a field name.  If we removed
       * the last element:
       *   [ 4, 3, 2, 7 ]
       * this path refers to the whole field declaration (from the beginning
       * of the label to the terminating semicolon).
       * </pre>
       *
       * <code>repeated int32 path = 1 [packed = true];</code>
       */
      public java.util.List<java.lang.Integer>
          getPathList() {
        return path_;
      }
      /**
       * <pre>
       * Identifies which part of the FileDescriptorProto was defined at this
       * location.
       * Each element is a field number or an index.  They form a path from
       * the root FileDescriptorProto to the place where the definition.  For
       * example, this path:
       *   [ 4, 3, 2, 7, 1 ]
       * refers to:
       *   file.message_type(3)  // 4, 3
       *       .field(7)         // 2, 7
       *       .name()           // 1
       * This is because FileDescriptorProto.message_type has field number 4:
       *   repeated DescriptorProto message_type = 4;
       * and DescriptorProto.field has field number 2:
       *   repeated FieldDescriptorProto field = 2;
       * and FieldDescriptorProto.name has field number 1:
       *   optional string name = 1;
       * Thus, the above path gives the location of a field name.  If we removed
       * the last element:
       *   [ 4, 3, 2, 7 ]
       * this path refers to the whole field declaration (from the beginning
       * of the label to the terminating semicolon).
       * </pre>
       *
       * <code>repeated int32 path = 1 [packed = true];</code>
       */
      public int getPathCount() {
        return path_.size();
      }
      /**
       * <pre>
       * Identifies which part of the FileDescriptorProto was defined at this
       * location.
       * Each element is a field number or an index.  They form a path from
       * the root FileDescriptorProto to the place where the definition.  For
       * example, this path:
       *   [ 4, 3, 2, 7, 1 ]
       * refers to:
       *   file.message_type(3)  // 4, 3
       *       .field(7)         // 2, 7
       *       .name()           // 1
       * This is because FileDescriptorProto.message_type has field number 4:
       *   repeated DescriptorProto message_type = 4;
       * and DescriptorProto.field has field number 2:
       *   repeated FieldDescriptorProto field = 2;
       * and FieldDescriptorProto.name has field number 1:
       *   optional string name = 1;
       * Thus, the above path gives the location of a field name.  If we removed
       * the last element:
       *   [ 4, 3, 2, 7 ]
       * this path refers to the whole field declaration (from the beginning
       * of the label to the terminating semicolon).
       * </pre>
       *
       * <code>repeated int32 path = 1 [packed = true];</code>
       */
      public int getPath(int index) {
        return path_.getInt(index);
      }
      private int pathMemoizedSerializedSize = -1;
      private void ensurePathIsMutable() {
        if (!path_.isModifiable()) {
          path_ =
              com.google.protobuf.GeneratedMessageLite.mutableCopy(path_);
         }
      }
      /**
       * <pre>
       * Identifies which part of the FileDescriptorProto was defined at this
       * location.
       * Each element is a field number or an index.  They form a path from
       * the root FileDescriptorProto to the place where the definition.  For
       * example, this path:
       *   [ 4, 3, 2, 7, 1 ]
       * refers to:
       *   file.message_type(3)  // 4, 3
       *       .field(7)         // 2, 7
       *       .name()           // 1
       * This is because FileDescriptorProto.message_type has field number 4:
       *   repeated DescriptorProto message_type = 4;
       * and DescriptorProto.field has field number 2:
       *   repeated FieldDescriptorProto field = 2;
       * and FieldDescriptorProto.name has field number 1:
       *   optional string name = 1;
       * Thus, the above path gives the location of a field name.  If we removed
       * the last element:
       *   [ 4, 3, 2, 7 ]
       * this path refers to the whole field declaration (from the beginning
       * of the label to the terminating semicolon).
       * </pre>
       *
       * <code>repeated int32 path = 1 [packed = true];</code>
       */
      private void setPath(
          int index, int value) {
        ensurePathIsMutable();
        path_.setInt(index, value);
      }
      /**
       * <pre>
       * Identifies which part of the FileDescriptorProto was defined at this
       * location.
       * Each element is a field number or an index.  They form a path from
       * the root FileDescriptorProto to the place where the definition.  For
       * example, this path:
       *   [ 4, 3, 2, 7, 1 ]
       * refers to:
       *   file.message_type(3)  // 4, 3
       *       .field(7)         // 2, 7
       *       .name()           // 1
       * This is because FileDescriptorProto.message_type has field number 4:
       *   repeated DescriptorProto message_type = 4;
       * and DescriptorProto.field has field number 2:
       *   repeated FieldDescriptorProto field = 2;
       * and FieldDescriptorProto.name has field number 1:
       *   optional string name = 1;
       * Thus, the above path gives the location of a field name.  If we removed
       * the last element:
       *   [ 4, 3, 2, 7 ]
       * this path refers to the whole field declaration (from the beginning
       * of the label to the terminating semicolon).
       * </pre>
       *
       * <code>repeated int32 path = 1 [packed = true];</code>
       */
      private void addPath(int value) {
        ensurePathIsMutable();
        path_.addInt(value);
      }
      /**
       * <pre>
       * Identifies which part of the FileDescriptorProto was defined at this
       * location.
       * Each element is a field number or an index.  They form a path from
       * the root FileDescriptorProto to the place where the definition.  For
       * example, this path:
       *   [ 4, 3, 2, 7, 1 ]
       * refers to:
       *   file.message_type(3)  // 4, 3
       *       .field(7)         // 2, 7
       *       .name()           // 1
       * This is because FileDescriptorProto.message_type has field number 4:
       *   repeated DescriptorProto message_type = 4;
       * and DescriptorProto.field has field number 2:
       *   repeated FieldDescriptorProto field = 2;
       * and FieldDescriptorProto.name has field number 1:
       *   optional string name = 1;
       * Thus, the above path gives the location of a field name.  If we removed
       * the last element:
       *   [ 4, 3, 2, 7 ]
       * this path refers to the whole field declaration (from the beginning
       * of the label to the terminating semicolon).
       * </pre>
       *
       * <code>repeated int32 path = 1 [packed = true];</code>
       */
      private void addAllPath(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensurePathIsMutable();
        com.google.protobuf.AbstractMessageLite.addAll(
            values, path_);
      }
      /**
       * <pre>
       * Identifies which part of the FileDescriptorProto was defined at this
       * location.
       * Each element is a field number or an index.  They form a path from
       * the root FileDescriptorProto to the place where the definition.  For
       * example, this path:
       *   [ 4, 3, 2, 7, 1 ]
       * refers to:
       *   file.message_type(3)  // 4, 3
       *       .field(7)         // 2, 7
       *       .name()           // 1
       * This is because FileDescriptorProto.message_type has field number 4:
       *   repeated DescriptorProto message_type = 4;
       * and DescriptorProto.field has field number 2:
       *   repeated FieldDescriptorProto field = 2;
       * and FieldDescriptorProto.name has field number 1:
       *   optional string name = 1;
       * Thus, the above path gives the location of a field name.  If we removed
       * the last element:
       *   [ 4, 3, 2, 7 ]
       * this path refers to the whole field declaration (from the beginning
       * of the label to the terminating semicolon).
       * </pre>
       *
       * <code>repeated int32 path = 1 [packed = true];</code>
       */
      private void clearPath() {
        path_ = emptyIntList();
      }

      public static final int SPAN_FIELD_NUMBER = 2;
      private com.google.protobuf.Internal.IntList span_;
      /**
       * <pre>
       * Always has exactly three or four elements: start line, start column,
       * end line (optional, otherwise assumed same as start line), end column.
       * These are packed into a single field for efficiency.  Note that line
       * and column numbers are zero-based -- typically you will want to add
       * 1 to each before displaying to a user.
       * </pre>
       *
       * <code>repeated int32 span = 2 [packed = true];</code>
       */
      public java.util.List<java.lang.Integer>
          getSpanList() {
        return span_;
      }
      /**
       * <pre>
       * Always has exactly three or four elements: start line, start column,
       * end line (optional, otherwise assumed same as start line), end column.
       * These are packed into a single field for efficiency.  Note that line
       * and column numbers are zero-based -- typically you will want to add
       * 1 to each before displaying to a user.
       * </pre>
       *
       * <code>repeated int32 span = 2 [packed = true];</code>
       */
      public int getSpanCount() {
        return span_.size();
      }
      /**
       * <pre>
       * Always has exactly three or four elements: start line, start column,
       * end line (optional, otherwise assumed same as start line), end column.
       * These are packed into a single field for efficiency.  Note that line
       * and column numbers are zero-based -- typically you will want to add
       * 1 to each before displaying to a user.
       * </pre>
       *
       * <code>repeated int32 span = 2 [packed = true];</code>
       */
      public int getSpan(int index) {
        return span_.getInt(index);
      }
      private int spanMemoizedSerializedSize = -1;
      private void ensureSpanIsMutable() {
        if (!span_.isModifiable()) {
          span_ =
              com.google.protobuf.GeneratedMessageLite.mutableCopy(span_);
         }
      }
      /**
       * <pre>
       * Always has exactly three or four elements: start line, start column,
       * end line (optional, otherwise assumed same as start line), end column.
       * These are packed into a single field for efficiency.  Note that line
       * and column numbers are zero-based -- typically you will want to add
       * 1 to each before displaying to a user.
       * </pre>
       *
       * <code>repeated int32 span = 2 [packed = true];</code>
       */
      private void setSpan(
          int index, int value) {
        ensureSpanIsMutable();
        span_.setInt(index, value);
      }
      /**
       * <pre>
       * Always has exactly three or four elements: start line, start column,
       * end line (optional, otherwise assumed same as start line), end column.
       * These are packed into a single field for efficiency.  Note that line
       * and column numbers are zero-based -- typically you will want to add
       * 1 to each before displaying to a user.
       * </pre>
       *
       * <code>repeated int32 span = 2 [packed = true];</code>
       */
      private void addSpan(int value) {
        ensureSpanIsMutable();
        span_.addInt(value);
      }
      /**
       * <pre>
       * Always has exactly three or four elements: start line, start column,
       * end line (optional, otherwise assumed same as start line), end column.
       * These are packed into a single field for efficiency.  Note that line
       * and column numbers are zero-based -- typically you will want to add
       * 1 to each before displaying to a user.
       * </pre>
       *
       * <code>repeated int32 span = 2 [packed = true];</code>
       */
      private void addAllSpan(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureSpanIsMutable();
        com.google.protobuf.AbstractMessageLite.addAll(
            values, span_);
      }
      /**
       * <pre>
       * Always has exactly three or four elements: start line, start column,
       * end line (optional, otherwise assumed same as start line), end column.
       * These are packed into a single field for efficiency.  Note that line
       * and column numbers are zero-based -- typically you will want to add
       * 1 to each before displaying to a user.
       * </pre>
       *
       * <code>repeated int32 span = 2 [packed = true];</code>
       */
      private void clearSpan() {
        span_ = emptyIntList();
      }

      public static final int LEADING_COMMENTS_FIELD_NUMBER = 3;
      private java.lang.String leadingComments_;
      /**
       * <pre>
       * If this SourceCodeInfo represents a complete declaration, these are any
       * comments appearing before and after the declaration which appear to be
       * attached to the declaration.
       * A series of line comments appearing on consecutive lines, with no other
       * tokens appearing on those lines, will be treated as a single comment.
       * leading_detached_comments will keep paragraphs of comments that appear
       * before (but not connected to) the current element. Each paragraph,
       * separated by empty lines, will be one comment element in the repeated
       * field.
       * Only the comment content is provided; comment markers (e.g. //) are
       * stripped out.  For block comments, leading whitespace and an asterisk
       * will be stripped from the beginning of each line other than the first.
       * Newlines are included in the output.
       * Examples:
       *   optional int32 foo = 1;  // Comment attached to foo.
       *   // Comment attached to bar.
       *   optional int32 bar = 2;
       *   optional string baz = 3;
       *   // Comment attached to baz.
       *   // Another line attached to baz.
       *   // Comment attached to qux.
       *   //
       *   // Another line attached to qux.
       *   optional double qux = 4;
       *   // Detached comment for corge. This is not leading or trailing comments
       *   // to qux or corge because there are blank lines separating it from
       *   // both.
       *   // Detached comment for corge paragraph 2.
       *   optional string corge = 5;
       *   /&#42; Block comment attached
       *    * to corge.  Leading asterisks
       *    * will be removed. *&#47;
       *   /&#42; Block comment attached to
       *    * grault. *&#47;
       *   optional int32 grault = 6;
       *   // ignored detached comments.
       * </pre>
       *
       * <code>optional string leading_comments = 3;</code>
       */
      public boolean hasLeadingComments() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * If this SourceCodeInfo represents a complete declaration, these are any
       * comments appearing before and after the declaration which appear to be
       * attached to the declaration.
       * A series of line comments appearing on consecutive lines, with no other
       * tokens appearing on those lines, will be treated as a single comment.
       * leading_detached_comments will keep paragraphs of comments that appear
       * before (but not connected to) the current element. Each paragraph,
       * separated by empty lines, will be one comment element in the repeated
       * field.
       * Only the comment content is provided; comment markers (e.g. //) are
       * stripped out.  For block comments, leading whitespace and an asterisk
       * will be stripped from the beginning of each line other than the first.
       * Newlines are included in the output.
       * Examples:
       *   optional int32 foo = 1;  // Comment attached to foo.
       *   // Comment attached to bar.
       *   optional int32 bar = 2;
       *   optional string baz = 3;
       *   // Comment attached to baz.
       *   // Another line attached to baz.
       *   // Comment attached to qux.
       *   //
       *   // Another line attached to qux.
       *   optional double qux = 4;
       *   // Detached comment for corge. This is not leading or trailing comments
       *   // to qux or corge because there are blank lines separating it from
       *   // both.
       *   // Detached comment for corge paragraph 2.
       *   optional string corge = 5;
       *   /&#42; Block comment attached
       *    * to corge.  Leading asterisks
       *    * will be removed. *&#47;
       *   /&#42; Block comment attached to
       *    * grault. *&#47;
       *   optional int32 grault = 6;
       *   // ignored detached comments.
       * </pre>
       *
       * <code>optional string leading_comments = 3;</code>
       */
      public java.lang.String getLeadingComments() {
        return leadingComments_;
      }
      /**
       * <pre>
       * If this SourceCodeInfo represents a complete declaration, these are any
       * comments appearing before and after the declaration which appear to be
       * attached to the declaration.
       * A series of line comments appearing on consecutive lines, with no other
       * tokens appearing on those lines, will be treated as a single comment.
       * leading_detached_comments will keep paragraphs of comments that appear
       * before (but not connected to) the current element. Each paragraph,
       * separated by empty lines, will be one comment element in the repeated
       * field.
       * Only the comment content is provided; comment markers (e.g. //) are
       * stripped out.  For block comments, leading whitespace and an asterisk
       * will be stripped from the beginning of each line other than the first.
       * Newlines are included in the output.
       * Examples:
       *   optional int32 foo = 1;  // Comment attached to foo.
       *   // Comment attached to bar.
       *   optional int32 bar = 2;
       *   optional string baz = 3;
       *   // Comment attached to baz.
       *   // Another line attached to baz.
       *   // Comment attached to qux.
       *   //
       *   // Another line attached to qux.
       *   optional double qux = 4;
       *   // Detached comment for corge. This is not leading or trailing comments
       *   // to qux or corge because there are blank lines separating it from
       *   // both.
       *   // Detached comment for corge paragraph 2.
       *   optional string corge = 5;
       *   /&#42; Block comment attached
       *    * to corge.  Leading asterisks
       *    * will be removed. *&#47;
       *   /&#42; Block comment attached to
       *    * grault. *&#47;
       *   optional int32 grault = 6;
       *   // ignored detached comments.
       * </pre>
       *
       * <code>optional string leading_comments = 3;</code>
       */
      public com.google.protobuf.ByteString
          getLeadingCommentsBytes() {
        return com.google.protobuf.ByteString.copyFromUtf8(leadingComments_);
      }
      /**
       * <pre>
       * If this SourceCodeInfo represents a complete declaration, these are any
       * comments appearing before and after the declaration which appear to be
       * attached to the declaration.
       * A series of line comments appearing on consecutive lines, with no other
       * tokens appearing on those lines, will be treated as a single comment.
       * leading_detached_comments will keep paragraphs of comments that appear
       * before (but not connected to) the current element. Each paragraph,
       * separated by empty lines, will be one comment element in the repeated
       * field.
       * Only the comment content is provided; comment markers (e.g. //) are
       * stripped out.  For block comments, leading whitespace and an asterisk
       * will be stripped from the beginning of each line other than the first.
       * Newlines are included in the output.
       * Examples:
       *   optional int32 foo = 1;  // Comment attached to foo.
       *   // Comment attached to bar.
       *   optional int32 bar = 2;
       *   optional string baz = 3;
       *   // Comment attached to baz.
       *   // Another line attached to baz.
       *   // Comment attached to qux.
       *   //
       *   // Another line attached to qux.
       *   optional double qux = 4;
       *   // Detached comment for corge. This is not leading or trailing comments
       *   // to qux or corge because there are blank lines separating it from
       *   // both.
       *   // Detached comment for corge paragraph 2.
       *   optional string corge = 5;
       *   /&#42; Block comment attached
       *    * to corge.  Leading asterisks
       *    * will be removed. *&#47;
       *   /&#42; Block comment attached to
       *    * grault. *&#47;
       *   optional int32 grault = 6;
       *   // ignored detached comments.
       * </pre>
       *
       * <code>optional string leading_comments = 3;</code>
       */
      private void setLeadingComments(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        leadingComments_ = value;
      }
      /**
       * <pre>
       * If this SourceCodeInfo represents a complete declaration, these are any
       * comments appearing before and after the declaration which appear to be
       * attached to the declaration.
       * A series of line comments appearing on consecutive lines, with no other
       * tokens appearing on those lines, will be treated as a single comment.
       * leading_detached_comments will keep paragraphs of comments that appear
       * before (but not connected to) the current element. Each paragraph,
       * separated by empty lines, will be one comment element in the repeated
       * field.
       * Only the comment content is provided; comment markers (e.g. //) are
       * stripped out.  For block comments, leading whitespace and an asterisk
       * will be stripped from the beginning of each line other than the first.
       * Newlines are included in the output.
       * Examples:
       *   optional int32 foo = 1;  // Comment attached to foo.
       *   // Comment attached to bar.
       *   optional int32 bar = 2;
       *   optional string baz = 3;
       *   // Comment attached to baz.
       *   // Another line attached to baz.
       *   // Comment attached to qux.
       *   //
       *   // Another line attached to qux.
       *   optional double qux = 4;
       *   // Detached comment for corge. This is not leading or trailing comments
       *   // to qux or corge because there are blank lines separating it from
       *   // both.
       *   // Detached comment for corge paragraph 2.
       *   optional string corge = 5;
       *   /&#42; Block comment attached
       *    * to corge.  Leading asterisks
       *    * will be removed. *&#47;
       *   /&#42; Block comment attached to
       *    * grault. *&#47;
       *   optional int32 grault = 6;
       *   // ignored detached comments.
       * </pre>
       *
       * <code>optional string leading_comments = 3;</code>
       */
      private void clearLeadingComments() {
        bitField0_ = (bitField0_ & ~0x00000001);
        leadingComments_ = getDefaultInstance().getLeadingComments();
      }
      /**
       * <pre>
       * If this SourceCodeInfo represents a complete declaration, these are any
       * comments appearing before and after the declaration which appear to be
       * attached to the declaration.
       * A series of line comments appearing on consecutive lines, with no other
       * tokens appearing on those lines, will be treated as a single comment.
       * leading_detached_comments will keep paragraphs of comments that appear
       * before (but not connected to) the current element. Each paragraph,
       * separated by empty lines, will be one comment element in the repeated
       * field.
       * Only the comment content is provided; comment markers (e.g. //) are
       * stripped out.  For block comments, leading whitespace and an asterisk
       * will be stripped from the beginning of each line other than the first.
       * Newlines are included in the output.
       * Examples:
       *   optional int32 foo = 1;  // Comment attached to foo.
       *   // Comment attached to bar.
       *   optional int32 bar = 2;
       *   optional string baz = 3;
       *   // Comment attached to baz.
       *   // Another line attached to baz.
       *   // Comment attached to qux.
       *   //
       *   // Another line attached to qux.
       *   optional double qux = 4;
       *   // Detached comment for corge. This is not leading or trailing comments
       *   // to qux or corge because there are blank lines separating it from
       *   // both.
       *   // Detached comment for corge paragraph 2.
       *   optional string corge = 5;
       *   /&#42; Block comment attached
       *    * to corge.  Leading asterisks
       *    * will be removed. *&#47;
       *   /&#42; Block comment attached to
       *    * grault. *&#47;
       *   optional int32 grault = 6;
       *   // ignored detached comments.
       * </pre>
       *
       * <code>optional string leading_comments = 3;</code>
       */
      private void setLeadingCommentsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        leadingComments_ = value.toStringUtf8();
      }

      public static final int TRAILING_COMMENTS_FIELD_NUMBER = 4;
      private java.lang.String trailingComments_;
      /**
       * <code>optional string trailing_comments = 4;</code>
       */
      public boolean hasTrailingComments() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string trailing_comments = 4;</code>
       */
      public java.lang.String getTrailingComments() {
        return trailingComments_;
      }
      /**
       * <code>optional string trailing_comments = 4;</code>
       */
      public com.google.protobuf.ByteString
          getTrailingCommentsBytes() {
        return com.google.protobuf.ByteString.copyFromUtf8(trailingComments_);
      }
      /**
       * <code>optional string trailing_comments = 4;</code>
       */
      private void setTrailingComments(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        trailingComments_ = value;
      }
      /**
       * <code>optional string trailing_comments = 4;</code>
       */
      private void clearTrailingComments() {
        bitField0_ = (bitField0_ & ~0x00000002);
        trailingComments_ = getDefaultInstance().getTrailingComments();
      }
      /**
       * <code>optional string trailing_comments = 4;</code>
       */
      private void setTrailingCommentsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        trailingComments_ = value.toStringUtf8();
      }

      public static final int LEADING_DETACHED_COMMENTS_FIELD_NUMBER = 6;
      private com.google.protobuf.Internal.ProtobufList<String> leadingDetachedComments_;
      /**
       * <code>repeated string leading_detached_comments = 6;</code>
       */
      public java.util.List<String> getLeadingDetachedCommentsList() {
        return leadingDetachedComments_;
      }
      /**
       * <code>repeated string leading_detached_comments = 6;</code>
       */
      public int getLeadingDetachedCommentsCount() {
        return leadingDetachedComments_.size();
      }
      /**
       * <code>repeated string leading_detached_comments = 6;</code>
       */
      public java.lang.String getLeadingDetachedComments(int index) {
        return leadingDetachedComments_.get(index);
      }
      /**
       * <code>repeated string leading_detached_comments = 6;</code>
       */
      public com.google.protobuf.ByteString
          getLeadingDetachedCommentsBytes(int index) {
        return com.google.protobuf.ByteString.copyFromUtf8(
            leadingDetachedComments_.get(index));
      }
      private void ensureLeadingDetachedCommentsIsMutable() {
        if (!leadingDetachedComments_.isModifiable()) {
          leadingDetachedComments_ =
              com.google.protobuf.GeneratedMessageLite.mutableCopy(leadingDetachedComments_);
         }
      }
      /**
       * <code>repeated string leading_detached_comments = 6;</code>
       */
      private void setLeadingDetachedComments(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureLeadingDetachedCommentsIsMutable();
        leadingDetachedComments_.set(index, value);
      }
      /**
       * <code>repeated string leading_detached_comments = 6;</code>
       */
      private void addLeadingDetachedComments(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureLeadingDetachedCommentsIsMutable();
        leadingDetachedComments_.add(value);
      }
      /**
       * <code>repeated string leading_detached_comments = 6;</code>
       */
      private void addAllLeadingDetachedComments(
          java.lang.Iterable<java.lang.String> values) {
        ensureLeadingDetachedCommentsIsMutable();
        com.google.protobuf.AbstractMessageLite.addAll(
            values, leadingDetachedComments_);
      }
      /**
       * <code>repeated string leading_detached_comments = 6;</code>
       */
      private void clearLeadingDetachedComments() {
        leadingDetachedComments_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
      }
      /**
       * <code>repeated string leading_detached_comments = 6;</code>
       */
      private void addLeadingDetachedCommentsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureLeadingDetachedCommentsIsMutable();
        leadingDetachedComments_.add(value.toStringUtf8());
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (getPathList().size() > 0) {
          output.writeUInt32NoTag(10);
          output.writeUInt32NoTag(pathMemoizedSerializedSize);
        }
        for (int i = 0; i < path_.size(); i++) {
          output.writeInt32NoTag(path_.getInt(i));
        }
        if (getSpanList().size() > 0) {
          output.writeUInt32NoTag(18);
          output.writeUInt32NoTag(spanMemoizedSerializedSize);
        }
        for (int i = 0; i < span_.size(); i++) {
          output.writeInt32NoTag(span_.getInt(i));
        }
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeString(3, getLeadingComments());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeString(4, getTrailingComments());
        }
        for (int i = 0; i < leadingDetachedComments_.size(); i++) {
          output.writeString(6, leadingDetachedComments_.get(i));
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        {
          int dataSize = 0;
          for (int i = 0; i < path_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(path_.getInt(i));
          }
          size += dataSize;
          if (!getPathList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          pathMemoizedSerializedSize = dataSize;
        }
        {
          int dataSize = 0;
          for (int i = 0; i < span_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(span_.getInt(i));
          }
          size += dataSize;
          if (!getSpanList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          spanMemoizedSerializedSize = dataSize;
        }
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(3, getLeadingComments());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(4, getTrailingComments());
        }
        {
          int dataSize = 0;
          for (int i = 0; i < leadingDetachedComments_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeStringSizeNoTag(leadingDetachedComments_.get(i));
          }
          size += dataSize;
          size += 1 * getLeadingDetachedCommentsList().size();
        }
        size += unknownFields.getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      public static com.google.protobuf.DescriptorProtos.SourceCodeInfo.Location parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static com.google.protobuf.DescriptorProtos.SourceCodeInfo.Location parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static com.google.protobuf.DescriptorProtos.SourceCodeInfo.Location parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static com.google.protobuf.DescriptorProtos.SourceCodeInfo.Location parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static com.google.protobuf.DescriptorProtos.SourceCodeInfo.Location parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static com.google.protobuf.DescriptorProtos.SourceCodeInfo.Location parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static com.google.protobuf.DescriptorProtos.SourceCodeInfo.Location parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input);
      }
      public static com.google.protobuf.DescriptorProtos.SourceCodeInfo.Location parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static com.google.protobuf.DescriptorProtos.SourceCodeInfo.Location parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static com.google.protobuf.DescriptorProtos.SourceCodeInfo.Location parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }

      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.google.protobuf.DescriptorProtos.SourceCodeInfo.Location prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      /**
       * Protobuf type {@code google.protobuf.SourceCodeInfo.Location}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            com.google.protobuf.DescriptorProtos.SourceCodeInfo.Location, Builder> implements
          // @@protoc_insertion_point(builder_implements:google.protobuf.SourceCodeInfo.Location)
          com.google.protobuf.DescriptorProtos.SourceCodeInfo.LocationOrBuilder {
        // Construct using com.google.protobuf.DescriptorProtos.SourceCodeInfo.Location.newBuilder()
        private Builder() {
          super(DEFAULT_INSTANCE);
        }


        /**
         * <pre>
         * Identifies which part of the FileDescriptorProto was defined at this
         * location.
         * Each element is a field number or an index.  They form a path from
         * the root FileDescriptorProto to the place where the definition.  For
         * example, this path:
         *   [ 4, 3, 2, 7, 1 ]
         * refers to:
         *   file.message_type(3)  // 4, 3
         *       .field(7)         // 2, 7
         *       .name()           // 1
         * This is because FileDescriptorProto.message_type has field number 4:
         *   repeated DescriptorProto message_type = 4;
         * and DescriptorProto.field has field number 2:
         *   repeated FieldDescriptorProto field = 2;
         * and FieldDescriptorProto.name has field number 1:
         *   optional string name = 1;
         * Thus, the above path gives the location of a field name.  If we removed
         * the last element:
         *   [ 4, 3, 2, 7 ]
         * this path refers to the whole field declaration (from the beginning
         * of the label to the terminating semicolon).
         * </pre>
         *
         * <code>repeated int32 path = 1 [packed = true];</code>
         */
        public java.util.List<java.lang.Integer>
            getPathList() {
          return java.util.Collections.unmodifiableList(
              instance.getPathList());
        }
        /**
         * <pre>
         * Identifies which part of the FileDescriptorProto was defined at this
         * location.
         * Each element is a field number or an index.  They form a path from
         * the root FileDescriptorProto to the place where the definition.  For
         * example, this path:
         *   [ 4, 3, 2, 7, 1 ]
         * refers to:
         *   file.message_type(3)  // 4, 3
         *       .field(7)         // 2, 7
         *       .name()           // 1
         * This is because FileDescriptorProto.message_type has field number 4:
         *   repeated DescriptorProto message_type = 4;
         * and DescriptorProto.field has field number 2:
         *   repeated FieldDescriptorProto field = 2;
         * and FieldDescriptorProto.name has field number 1:
         *   optional string name = 1;
         * Thus, the above path gives the location of a field name.  If we removed
         * the last element:
         *   [ 4, 3, 2, 7 ]
         * this path refers to the whole field declaration (from the beginning
         * of the label to the terminating semicolon).
         * </pre>
         *
         * <code>repeated int32 path = 1 [packed = true];</code>
         */
        public int getPathCount() {
          return instance.getPathCount();
        }
        /**
         * <pre>
         * Identifies which part of the FileDescriptorProto was defined at this
         * location.
         * Each element is a field number or an index.  They form a path from
         * the root FileDescriptorProto to the place where the definition.  For
         * example, this path:
         *   [ 4, 3, 2, 7, 1 ]
         * refers to:
         *   file.message_type(3)  // 4, 3
         *       .field(7)         // 2, 7
         *       .name()           // 1
         * This is because FileDescriptorProto.message_type has field number 4:
         *   repeated DescriptorProto message_type = 4;
         * and DescriptorProto.field has field number 2:
         *   repeated FieldDescriptorProto field = 2;
         * and FieldDescriptorProto.name has field number 1:
         *   optional string name = 1;
         * Thus, the above path gives the location of a field name.  If we removed
         * the last element:
         *   [ 4, 3, 2, 7 ]
         * this path refers to the whole field declaration (from the beginning
         * of the label to the terminating semicolon).
         * </pre>
         *
         * <code>repeated int32 path = 1 [packed = true];</code>
         */
        public int getPath(int index) {
          return instance.getPath(index);
        }
        /**
         * <pre>
         * Identifies which part of the FileDescriptorProto was defined at this
         * location.
         * Each element is a field number or an index.  They form a path from
         * the root FileDescriptorProto to the place where the definition.  For
         * example, this path:
         *   [ 4, 3, 2, 7, 1 ]
         * refers to:
         *   file.message_type(3)  // 4, 3
         *       .field(7)         // 2, 7
         *       .name()           // 1
         * This is because FileDescriptorProto.message_type has field number 4:
         *   repeated DescriptorProto message_type = 4;
         * and DescriptorProto.field has field number 2:
         *   repeated FieldDescriptorProto field = 2;
         * and FieldDescriptorProto.name has field number 1:
         *   optional string name = 1;
         * Thus, the above path gives the location of a field name.  If we removed
         * the last element:
         *   [ 4, 3, 2, 7 ]
         * this path refers to the whole field declaration (from the beginning
         * of the label to the terminating semicolon).
         * </pre>
         *
         * <code>repeated int32 path = 1 [packed = true];</code>
         */
        public Builder setPath(
            int index, int value) {
          copyOnWrite();
          instance.setPath(index, value);
          return this;
        }
        /**
         * <pre>
         * Identifies which part of the FileDescriptorProto was defined at this
         * location.
         * Each element is a field number or an index.  They form a path from
         * the root FileDescriptorProto to the place where the definition.  For
         * example, this path:
         *   [ 4, 3, 2, 7, 1 ]
         * refers to:
         *   file.message_type(3)  // 4, 3
         *       .field(7)         // 2, 7
         *       .name()           // 1
         * This is because FileDescriptorProto.message_type has field number 4:
         *   repeated DescriptorProto message_type = 4;
         * and DescriptorProto.field has field number 2:
         *   repeated FieldDescriptorProto field = 2;
         * and FieldDescriptorProto.name has field number 1:
         *   optional string name = 1;
         * Thus, the above path gives the location of a field name.  If we removed
         * the last element:
         *   [ 4, 3, 2, 7 ]
         * this path refers to the whole field declaration (from the beginning
         * of the label to the terminating semicolon).
         * </pre>
         *
         * <code>repeated int32 path = 1 [packed = true];</code>
         */
        public Builder addPath(int value) {
          copyOnWrite();
          instance.addPath(value);
          return this;
        }
        /**
         * <pre>
         * Identifies which part of the FileDescriptorProto was defined at this
         * location.
         * Each element is a field number or an index.  They form a path from
         * the root FileDescriptorProto to the place where the definition.  For
         * example, this path:
         *   [ 4, 3, 2, 7, 1 ]
         * refers to:
         *   file.message_type(3)  // 4, 3
         *       .field(7)         // 2, 7
         *       .name()           // 1
         * This is because FileDescriptorProto.message_type has field number 4:
         *   repeated DescriptorProto message_type = 4;
         * and DescriptorProto.field has field number 2:
         *   repeated FieldDescriptorProto field = 2;
         * and FieldDescriptorProto.name has field number 1:
         *   optional string name = 1;
         * Thus, the above path gives the location of a field name.  If we removed
         * the last element:
         *   [ 4, 3, 2, 7 ]
         * this path refers to the whole field declaration (from the beginning
         * of the label to the terminating semicolon).
         * </pre>
         *
         * <code>repeated int32 path = 1 [packed = true];</code>
         */
        public Builder addAllPath(
            java.lang.Iterable<? extends java.lang.Integer> values) {
          copyOnWrite();
          instance.addAllPath(values);
          return this;
        }
        /**
         * <pre>
         * Identifies which part of the FileDescriptorProto was defined at this
         * location.
         * Each element is a field number or an index.  They form a path from
         * the root FileDescriptorProto to the place where the definition.  For
         * example, this path:
         *   [ 4, 3, 2, 7, 1 ]
         * refers to:
         *   file.message_type(3)  // 4, 3
         *       .field(7)         // 2, 7
         *       .name()           // 1
         * This is because FileDescriptorProto.message_type has field number 4:
         *   repeated DescriptorProto message_type = 4;
         * and DescriptorProto.field has field number 2:
         *   repeated FieldDescriptorProto field = 2;
         * and FieldDescriptorProto.name has field number 1:
         *   optional string name = 1;
         * Thus, the above path gives the location of a field name.  If we removed
         * the last element:
         *   [ 4, 3, 2, 7 ]
         * this path refers to the whole field declaration (from the beginning
         * of the label to the terminating semicolon).
         * </pre>
         *
         * <code>repeated int32 path = 1 [packed = true];</code>
         */
        public Builder clearPath() {
          copyOnWrite();
          instance.clearPath();
          return this;
        }

        /**
         * <pre>
         * Always has exactly three or four elements: start line, start column,
         * end line (optional, otherwise assumed same as start line), end column.
         * These are packed into a single field for efficiency.  Note that line
         * and column numbers are zero-based -- typically you will want to add
         * 1 to each before displaying to a user.
         * </pre>
         *
         * <code>repeated int32 span = 2 [packed = true];</code>
         */
        public java.util.List<java.lang.Integer>
            getSpanList() {
          return java.util.Collections.unmodifiableList(
              instance.getSpanList());
        }
        /**
         * <pre>
         * Always has exactly three or four elements: start line, start column,
         * end line (optional, otherwise assumed same as start line), end column.
         * These are packed into a single field for efficiency.  Note that line
         * and column numbers are zero-based -- typically you will want to add
         * 1 to each before displaying to a user.
         * </pre>
         *
         * <code>repeated int32 span = 2 [packed = true];</code>
         */
        public int getSpanCount() {
          return instance.getSpanCount();
        }
        /**
         * <pre>
         * Always has exactly three or four elements: start line, start column,
         * end line (optional, otherwise assumed same as start line), end column.
         * These are packed into a single field for efficiency.  Note that line
         * and column numbers are zero-based -- typically you will want to add
         * 1 to each before displaying to a user.
         * </pre>
         *
         * <code>repeated int32 span = 2 [packed = true];</code>
         */
        public int getSpan(int index) {
          return instance.getSpan(index);
        }
        /**
         * <pre>
         * Always has exactly three or four elements: start line, start column,
         * end line (optional, otherwise assumed same as start line), end column.
         * These are packed into a single field for efficiency.  Note that line
         * and column numbers are zero-based -- typically you will want to add
         * 1 to each before displaying to a user.
         * </pre>
         *
         * <code>repeated int32 span = 2 [packed = true];</code>
         */
        public Builder setSpan(
            int index, int value) {
          copyOnWrite();
          instance.setSpan(index, value);
          return this;
        }
        /**
         * <pre>
         * Always has exactly three or four elements: start line, start column,
         * end line (optional, otherwise assumed same as start line), end column.
         * These are packed into a single field for efficiency.  Note that line
         * and column numbers are zero-based -- typically you will want to add
         * 1 to each before displaying to a user.
         * </pre>
         *
         * <code>repeated int32 span = 2 [packed = true];</code>
         */
        public Builder addSpan(int value) {
          copyOnWrite();
          instance.addSpan(value);
          return this;
        }
        /**
         * <pre>
         * Always has exactly three or four elements: start line, start column,
         * end line (optional, otherwise assumed same as start line), end column.
         * These are packed into a single field for efficiency.  Note that line
         * and column numbers are zero-based -- typically you will want to add
         * 1 to each before displaying to a user.
         * </pre>
         *
         * <code>repeated int32 span = 2 [packed = true];</code>
         */
        public Builder addAllSpan(
            java.lang.Iterable<? extends java.lang.Integer> values) {
          copyOnWrite();
          instance.addAllSpan(values);
          return this;
        }
        /**
         * <pre>
         * Always has exactly three or four elements: start line, start column,
         * end line (optional, otherwise assumed same as start line), end column.
         * These are packed into a single field for efficiency.  Note that line
         * and column numbers are zero-based -- typically you will want to add
         * 1 to each before displaying to a user.
         * </pre>
         *
         * <code>repeated int32 span = 2 [packed = true];</code>
         */
        public Builder clearSpan() {
          copyOnWrite();
          instance.clearSpan();
          return this;
        }

        /**
         * <pre>
         * If this SourceCodeInfo represents a complete declaration, these are any
         * comments appearing before and after the declaration which appear to be
         * attached to the declaration.
         * A series of line comments appearing on consecutive lines, with no other
         * tokens appearing on those lines, will be treated as a single comment.
         * leading_detached_comments will keep paragraphs of comments that appear
         * before (but not connected to) the current element. Each paragraph,
         * separated by empty lines, will be one comment element in the repeated
         * field.
         * Only the comment content is provided; comment markers (e.g. //) are
         * stripped out.  For block comments, leading whitespace and an asterisk
         * will be stripped from the beginning of each line other than the first.
         * Newlines are included in the output.
         * Examples:
         *   optional int32 foo = 1;  // Comment attached to foo.
         *   // Comment attached to bar.
         *   optional int32 bar = 2;
         *   optional string baz = 3;
         *   // Comment attached to baz.
         *   // Another line attached to baz.
         *   // Comment attached to qux.
         *   //
         *   // Another line attached to qux.
         *   optional double qux = 4;
         *   // Detached comment for corge. This is not leading or trailing comments
         *   // to qux or corge because there are blank lines separating it from
         *   // both.
         *   // Detached comment for corge paragraph 2.
         *   optional string corge = 5;
         *   /&#42; Block comment attached
         *    * to corge.  Leading asterisks
         *    * will be removed. *&#47;
         *   /&#42; Block comment attached to
         *    * grault. *&#47;
         *   optional int32 grault = 6;
         *   // ignored detached comments.
         * </pre>
         *
         * <code>optional string leading_comments = 3;</code>
         */
        public boolean hasLeadingComments() {
          return instance.hasLeadingComments();
        }
        /**
         * <pre>
         * If this SourceCodeInfo represents a complete declaration, these are any
         * comments appearing before and after the declaration which appear to be
         * attached to the declaration.
         * A series of line comments appearing on consecutive lines, with no other
         * tokens appearing on those lines, will be treated as a single comment.
         * leading_detached_comments will keep paragraphs of comments that appear
         * before (but not connected to) the current element. Each paragraph,
         * separated by empty lines, will be one comment element in the repeated
         * field.
         * Only the comment content is provided; comment markers (e.g. //) are
         * stripped out.  For block comments, leading whitespace and an asterisk
         * will be stripped from the beginning of each line other than the first.
         * Newlines are included in the output.
         * Examples:
         *   optional int32 foo = 1;  // Comment attached to foo.
         *   // Comment attached to bar.
         *   optional int32 bar = 2;
         *   optional string baz = 3;
         *   // Comment attached to baz.
         *   // Another line attached to baz.
         *   // Comment attached to qux.
         *   //
         *   // Another line attached to qux.
         *   optional double qux = 4;
         *   // Detached comment for corge. This is not leading or trailing comments
         *   // to qux or corge because there are blank lines separating it from
         *   // both.
         *   // Detached comment for corge paragraph 2.
         *   optional string corge = 5;
         *   /&#42; Block comment attached
         *    * to corge.  Leading asterisks
         *    * will be removed. *&#47;
         *   /&#42; Block comment attached to
         *    * grault. *&#47;
         *   optional int32 grault = 6;
         *   // ignored detached comments.
         * </pre>
         *
         * <code>optional string leading_comments = 3;</code>
         */
        public java.lang.String getLeadingComments() {
          return instance.getLeadingComments();
        }
        /**
         * <pre>
         * If this SourceCodeInfo represents a complete declaration, these are any
         * comments appearing before and after the declaration which appear to be
         * attached to the declaration.
         * A series of line comments appearing on consecutive lines, with no other
         * tokens appearing on those lines, will be treated as a single comment.
         * leading_detached_comments will keep paragraphs of comments that appear
         * before (but not connected to) the current element. Each paragraph,
         * separated by empty lines, will be one comment element in the repeated
         * field.
         * Only the comment content is provided; comment markers (e.g. //) are
         * stripped out.  For block comments, leading whitespace and an asterisk
         * will be stripped from the beginning of each line other than the first.
         * Newlines are included in the output.
         * Examples:
         *   optional int32 foo = 1;  // Comment attached to foo.
         *   // Comment attached to bar.
         *   optional int32 bar = 2;
         *   optional string baz = 3;
         *   // Comment attached to baz.
         *   // Another line attached to baz.
         *   // Comment attached to qux.
         *   //
         *   // Another line attached to qux.
         *   optional double qux = 4;
         *   // Detached comment for corge. This is not leading or trailing comments
         *   // to qux or corge because there are blank lines separating it from
         *   // both.
         *   // Detached comment for corge paragraph 2.
         *   optional string corge = 5;
         *   /&#42; Block comment attached
         *    * to corge.  Leading asterisks
         *    * will be removed. *&#47;
         *   /&#42; Block comment attached to
         *    * grault. *&#47;
         *   optional int32 grault = 6;
         *   // ignored detached comments.
         * </pre>
         *
         * <code>optional string leading_comments = 3;</code>
         */
        public com.google.protobuf.ByteString
            getLeadingCommentsBytes() {
          return instance.getLeadingCommentsBytes();
        }
        /**
         * <pre>
         * If this SourceCodeInfo represents a complete declaration, these are any
         * comments appearing before and after the declaration which appear to be
         * attached to the declaration.
         * A series of line comments appearing on consecutive lines, with no other
         * tokens appearing on those lines, will be treated as a single comment.
         * leading_detached_comments will keep paragraphs of comments that appear
         * before (but not connected to) the current element. Each paragraph,
         * separated by empty lines, will be one comment element in the repeated
         * field.
         * Only the comment content is provided; comment markers (e.g. //) are
         * stripped out.  For block comments, leading whitespace and an asterisk
         * will be stripped from the beginning of each line other than the first.
         * Newlines are included in the output.
         * Examples:
         *   optional int32 foo = 1;  // Comment attached to foo.
         *   // Comment attached to bar.
         *   optional int32 bar = 2;
         *   optional string baz = 3;
         *   // Comment attached to baz.
         *   // Another line attached to baz.
         *   // Comment attached to qux.
         *   //
         *   // Another line attached to qux.
         *   optional double qux = 4;
         *   // Detached comment for corge. This is not leading or trailing comments
         *   // to qux or corge because there are blank lines separating it from
         *   // both.
         *   // Detached comment for corge paragraph 2.
         *   optional string corge = 5;
         *   /&#42; Block comment attached
         *    * to corge.  Leading asterisks
         *    * will be removed. *&#47;
         *   /&#42; Block comment attached to
         *    * grault. *&#47;
         *   optional int32 grault = 6;
         *   // ignored detached comments.
         * </pre>
         *
         * <code>optional string leading_comments = 3;</code>
         */
        public Builder setLeadingComments(
            java.lang.String value) {
          copyOnWrite();
          instance.setLeadingComments(value);
          return this;
        }
        /**
         * <pre>
         * If this SourceCodeInfo represents a complete declaration, these are any
         * comments appearing before and after the declaration which appear to be
         * attached to the declaration.
         * A series of line comments appearing on consecutive lines, with no other
         * tokens appearing on those lines, will be treated as a single comment.
         * leading_detached_comments will keep paragraphs of comments that appear
         * before (but not connected to) the current element. Each paragraph,
         * separated by empty lines, will be one comment element in the repeated
         * field.
         * Only the comment content is provided; comment markers (e.g. //) are
         * stripped out.  For block comments, leading whitespace and an asterisk
         * will be stripped from the beginning of each line other than the first.
         * Newlines are included in the output.
         * Examples:
         *   optional int32 foo = 1;  // Comment attached to foo.
         *   // Comment attached to bar.
         *   optional int32 bar = 2;
         *   optional string baz = 3;
         *   // Comment attached to baz.
         *   // Another line attached to baz.
         *   // Comment attached to qux.
         *   //
         *   // Another line attached to qux.
         *   optional double qux = 4;
         *   // Detached comment for corge. This is not leading or trailing comments
         *   // to qux or corge because there are blank lines separating it from
         *   // both.
         *   // Detached comment for corge paragraph 2.
         *   optional string corge = 5;
         *   /&#42; Block comment attached
         *    * to corge.  Leading asterisks
         *    * will be removed. *&#47;
         *   /&#42; Block comment attached to
         *    * grault. *&#47;
         *   optional int32 grault = 6;
         *   // ignored detached comments.
         * </pre>
         *
         * <code>optional string leading_comments = 3;</code>
         */
        public Builder clearLeadingComments() {
          copyOnWrite();
          instance.clearLeadingComments();
          return this;
        }
        /**
         * <pre>
         * If this SourceCodeInfo represents a complete declaration, these are any
         * comments appearing before and after the declaration which appear to be
         * attached to the declaration.
         * A series of line comments appearing on consecutive lines, with no other
         * tokens appearing on those lines, will be treated as a single comment.
         * leading_detached_comments will keep paragraphs of comments that appear
         * before (but not connected to) the current element. Each paragraph,
         * separated by empty lines, will be one comment element in the repeated
         * field.
         * Only the comment content is provided; comment markers (e.g. //) are
         * stripped out.  For block comments, leading whitespace and an asterisk
         * will be stripped from the beginning of each line other than the first.
         * Newlines are included in the output.
         * Examples:
         *   optional int32 foo = 1;  // Comment attached to foo.
         *   // Comment attached to bar.
         *   optional int32 bar = 2;
         *   optional string baz = 3;
         *   // Comment attached to baz.
         *   // Another line attached to baz.
         *   // Comment attached to qux.
         *   //
         *   // Another line attached to qux.
         *   optional double qux = 4;
         *   // Detached comment for corge. This is not leading or trailing comments
         *   // to qux or corge because there are blank lines separating it from
         *   // both.
         *   // Detached comment for corge paragraph 2.
         *   optional string corge = 5;
         *   /&#42; Block comment attached
         *    * to corge.  Leading asterisks
         *    * will be removed. *&#47;
         *   /&#42; Block comment attached to
         *    * grault. *&#47;
         *   optional int32 grault = 6;
         *   // ignored detached comments.
         * </pre>
         *
         * <code>optional string leading_comments = 3;</code>
         */
        public Builder setLeadingCommentsBytes(
            com.google.protobuf.ByteString value) {
          copyOnWrite();
          instance.setLeadingCommentsBytes(value);
          return this;
        }

        /**
         * <code>optional string trailing_comments = 4;</code>
         */
        public boolean hasTrailingComments() {
          return instance.hasTrailingComments();
        }
        /**
         * <code>optional string trailing_comments = 4;</code>
         */
        public java.lang.String getTrailingComments() {
          return instance.getTrailingComments();
        }
        /**
         * <code>optional string trailing_comments = 4;</code>
         */
        public com.google.protobuf.ByteString
            getTrailingCommentsBytes() {
          return instance.getTrailingCommentsBytes();
        }
        /**
         * <code>optional string trailing_comments = 4;</code>
         */
        public Builder setTrailingComments(
            java.lang.String value) {
          copyOnWrite();
          instance.setTrailingComments(value);
          return this;
        }
        /**
         * <code>optional string trailing_comments = 4;</code>
         */
        public Builder clearTrailingComments() {
          copyOnWrite();
          instance.clearTrailingComments();
          return this;
        }
        /**
         * <code>optional string trailing_comments = 4;</code>
         */
        public Builder setTrailingCommentsBytes(
            com.google.protobuf.ByteString value) {
          copyOnWrite();
          instance.setTrailingCommentsBytes(value);
          return this;
        }

        /**
         * <code>repeated string leading_detached_comments = 6;</code>
         */
        public java.util.List<String>
            getLeadingDetachedCommentsList() {
          return java.util.Collections.unmodifiableList(
              instance.getLeadingDetachedCommentsList());
        }
        /**
         * <code>repeated string leading_detached_comments = 6;</code>
         */
        public int getLeadingDetachedCommentsCount() {
          return instance.getLeadingDetachedCommentsCount();
        }
        /**
         * <code>repeated string leading_detached_comments = 6;</code>
         */
        public java.lang.String getLeadingDetachedComments(int index) {
          return instance.getLeadingDetachedComments(index);
        }
        /**
         * <code>repeated string leading_detached_comments = 6;</code>
         */
        public com.google.protobuf.ByteString
            getLeadingDetachedCommentsBytes(int index) {
          return instance.getLeadingDetachedCommentsBytes(index);
        }
        /**
         * <code>repeated string leading_detached_comments = 6;</code>
         */
        public Builder setLeadingDetachedComments(
            int index, java.lang.String value) {
          copyOnWrite();
          instance.setLeadingDetachedComments(index, value);
          return this;
        }
        /**
         * <code>repeated string leading_detached_comments = 6;</code>
         */
        public Builder addLeadingDetachedComments(
            java.lang.String value) {
          copyOnWrite();
          instance.addLeadingDetachedComments(value);
          return this;
        }
        /**
         * <code>repeated string leading_detached_comments = 6;</code>
         */
        public Builder addAllLeadingDetachedComments(
            java.lang.Iterable<java.lang.String> values) {
          copyOnWrite();
          instance.addAllLeadingDetachedComments(values);
          return this;
        }
        /**
         * <code>repeated string leading_detached_comments = 6;</code>
         */
        public Builder clearLeadingDetachedComments() {
          copyOnWrite();
          instance.clearLeadingDetachedComments();
          return this;
        }
        /**
         * <code>repeated string leading_detached_comments = 6;</code>
         */
        public Builder addLeadingDetachedCommentsBytes(
            com.google.protobuf.ByteString value) {
          copyOnWrite();
          instance.addLeadingDetachedCommentsBytes(value);
          return this;
        }

        // @@protoc_insertion_point(builder_scope:google.protobuf.SourceCodeInfo.Location)
      }
      protected final Object dynamicMethod(
          com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
          Object arg0, Object arg1) {
        switch (method) {
          case NEW_MUTABLE_INSTANCE: {
            return new com.google.protobuf.DescriptorProtos.SourceCodeInfo.Location();
          }
          case IS_INITIALIZED: {
            return DEFAULT_INSTANCE;
          }
          case MAKE_IMMUTABLE: {
            path_.makeImmutable();
            span_.makeImmutable();
            leadingDetachedComments_.makeImmutable();
            return null;
          }
          case NEW_BUILDER: {
            return new Builder();
          }
          case VISIT: {
            Visitor visitor = (Visitor) arg0;
            com.google.protobuf.DescriptorProtos.SourceCodeInfo.Location other = (com.google.protobuf.DescriptorProtos.SourceCodeInfo.Location) arg1;
            path_= visitor.visitIntList(path_, other.path_);
            span_= visitor.visitIntList(span_, other.span_);
            leadingComments_ = visitor.visitString(
                hasLeadingComments(), leadingComments_,
                other.hasLeadingComments(), other.leadingComments_);
            trailingComments_ = visitor.visitString(
                hasTrailingComments(), trailingComments_,
                other.hasTrailingComments(), other.trailingComments_);
            leadingDetachedComments_= visitor.visitList(leadingDetachedComments_, other.leadingDetachedComments_);
            if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                .INSTANCE) {
              bitField0_ |= other.bitField0_;
            }
            return this;
          }
          case MERGE_FROM_STREAM: {
            com.google.protobuf.CodedInputStream input =
                (com.google.protobuf.CodedInputStream) arg0;
            com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                (com.google.protobuf.ExtensionRegistryLite) arg1;
            try {
              boolean done = false;
              while (!done) {
                int tag = input.readTag();
                switch (tag) {
                  case 0:
                    done = true;
                    break;
                  default: {
                    if (!parseUnknownField(tag, input)) {
                      done = true;
                    }
                    break;
                  }
                  case 8: {
                    if (!path_.isModifiable()) {
                      path_ =
                          com.google.protobuf.GeneratedMessageLite.mutableCopy(path_);
                    }
                    path_.addInt(input.readInt32());
                    break;
                  }
                  case 10: {
                    int length = input.readRawVarint32();
                    int limit = input.pushLimit(length);
                    if (!path_.isModifiable() && input.getBytesUntilLimit() > 0) {
                      path_ =
                          com.google.protobuf.GeneratedMessageLite.mutableCopy(path_);
                    }
                    while (input.getBytesUntilLimit() > 0) {
                      path_.addInt(input.readInt32());
                    }
                    input.popLimit(limit);
                    break;
                  }
                  case 16: {
                    if (!span_.isModifiable()) {
                      span_ =
                          com.google.protobuf.GeneratedMessageLite.mutableCopy(span_);
                    }
                    span_.addInt(input.readInt32());
                    break;
                  }
                  case 18: {
                    int length = input.readRawVarint32();
                    int limit = input.pushLimit(length);
                    if (!span_.isModifiable() && input.getBytesUntilLimit() > 0) {
                      span_ =
                          com.google.protobuf.GeneratedMessageLite.mutableCopy(span_);
                    }
                    while (input.getBytesUntilLimit() > 0) {
                      span_.addInt(input.readInt32());
                    }
                    input.popLimit(limit);
                    break;
                  }
                  case 26: {
                    String s = input.readString();
                    bitField0_ |= 0x00000001;
                    leadingComments_ = s;
                    break;
                  }
                  case 34: {
                    String s = input.readString();
                    bitField0_ |= 0x00000002;
                    trailingComments_ = s;
                    break;
                  }
                  case 50: {
                    String s = input.readString();
                    if (!leadingDetachedComments_.isModifiable()) {
                      leadingDetachedComments_ =
                          com.google.protobuf.GeneratedMessageLite.mutableCopy(leadingDetachedComments_);
                    }
                    leadingDetachedComments_.add(s);
                    break;
                  }
                }
              }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw new RuntimeException(e.setUnfinishedMessage(this));
            } catch (java.io.IOException e) {
              throw new RuntimeException(
                  new com.google.protobuf.InvalidProtocolBufferException(
                      e.getMessage()).setUnfinishedMessage(this));
            } finally {
            }
          }
          case GET_DEFAULT_INSTANCE: {
            return DEFAULT_INSTANCE;
          }
          case GET_PARSER: {
            if (PARSER == null) {    synchronized (com.google.protobuf.DescriptorProtos.SourceCodeInfo.Location.class) {
                if (PARSER == null) {
                  PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                }
              }
            }
            return PARSER;
          }
        }
        throw new UnsupportedOperationException();
      }


      // @@protoc_insertion_point(class_scope:google.protobuf.SourceCodeInfo.Location)
      private static final com.google.protobuf.DescriptorProtos.SourceCodeInfo.Location DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new Location();
        DEFAULT_INSTANCE.makeImmutable();
      }

      public static com.google.protobuf.DescriptorProtos.SourceCodeInfo.Location getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static volatile com.google.protobuf.Parser<Location> PARSER;

      public static com.google.protobuf.Parser<Location> parser() {
        return DEFAULT_INSTANCE.getParserForType();
      }
    }

    public static final int LOCATION_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.ProtobufList<com.google.protobuf.DescriptorProtos.SourceCodeInfo.Location> location_;
    /**
     * <pre>
     * A Location identifies a piece of source code in a .proto file which
     * corresponds to a particular definition.  This information is intended
     * to be useful to IDEs, code indexers, documentation generators, and similar
     * tools.
     * For example, say we have a file like:
     *   message Foo {
     *     optional string foo = 1;
     *   }
     * Let's look at just the field definition:
     *   optional string foo = 1;
     *   ^       ^^     ^^  ^  ^^^
     *   a       bc     de  f  ghi
     * We have the following locations:
     *   span   path               represents
     *   [a,i)  [ 4, 0, 2, 0 ]     The whole field definition.
     *   [a,b)  [ 4, 0, 2, 0, 4 ]  The label (optional).
     *   [c,d)  [ 4, 0, 2, 0, 5 ]  The type (string).
     *   [e,f)  [ 4, 0, 2, 0, 1 ]  The name (foo).
     *   [g,h)  [ 4, 0, 2, 0, 3 ]  The number (1).
     * Notes:
     * - A location may refer to a repeated field itself (i.e. not to any
     *   particular index within it).  This is used whenever a set of elements are
     *   logically enclosed in a single code segment.  For example, an entire
     *   extend block (possibly containing multiple extension definitions) will
     *   have an outer location whose path refers to the "extensions" repeated
     *   field without an index.
     * - Multiple locations may have the same path.  This happens when a single
     *   logical declaration is spread out across multiple places.  The most
     *   obvious example is the "extend" block again -- there may be multiple
     *   extend blocks in the same scope, each of which will have the same path.
     * - A location's span is not always a subset of its parent's span.  For
     *   example, the "extendee" of an extension declaration appears at the
     *   beginning of the "extend" block and is shared by all extensions within
     *   the block.
     * - Just because a location's span is a subset of some other location's span
     *   does not mean that it is a descendent.  For example, a "group" defines
     *   both a type and a field in a single declaration.  Thus, the locations
     *   corresponding to the type and field and their components will overlap.
     * - Code which tries to interpret locations should probably be designed to
     *   ignore those that it doesn't understand, as more types of locations could
     *   be recorded in the future.
     * </pre>
     *
     * <code>repeated .google.protobuf.SourceCodeInfo.Location location = 1;</code>
     */
    public java.util.List<com.google.protobuf.DescriptorProtos.SourceCodeInfo.Location> getLocationList() {
      return location_;
    }
    /**
     * <pre>
     * A Location identifies a piece of source code in a .proto file which
     * corresponds to a particular definition.  This information is intended
     * to be useful to IDEs, code indexers, documentation generators, and similar
     * tools.
     * For example, say we have a file like:
     *   message Foo {
     *     optional string foo = 1;
     *   }
     * Let's look at just the field definition:
     *   optional string foo = 1;
     *   ^       ^^     ^^  ^  ^^^
     *   a       bc     de  f  ghi
     * We have the following locations:
     *   span   path               represents
     *   [a,i)  [ 4, 0, 2, 0 ]     The whole field definition.
     *   [a,b)  [ 4, 0, 2, 0, 4 ]  The label (optional).
     *   [c,d)  [ 4, 0, 2, 0, 5 ]  The type (string).
     *   [e,f)  [ 4, 0, 2, 0, 1 ]  The name (foo).
     *   [g,h)  [ 4, 0, 2, 0, 3 ]  The number (1).
     * Notes:
     * - A location may refer to a repeated field itself (i.e. not to any
     *   particular index within it).  This is used whenever a set of elements are
     *   logically enclosed in a single code segment.  For example, an entire
     *   extend block (possibly containing multiple extension definitions) will
     *   have an outer location whose path refers to the "extensions" repeated
     *   field without an index.
     * - Multiple locations may have the same path.  This happens when a single
     *   logical declaration is spread out across multiple places.  The most
     *   obvious example is the "extend" block again -- there may be multiple
     *   extend blocks in the same scope, each of which will have the same path.
     * - A location's span is not always a subset of its parent's span.  For
     *   example, the "extendee" of an extension declaration appears at the
     *   beginning of the "extend" block and is shared by all extensions within
     *   the block.
     * - Just because a location's span is a subset of some other location's span
     *   does not mean that it is a descendent.  For example, a "group" defines
     *   both a type and a field in a single declaration.  Thus, the locations
     *   corresponding to the type and field and their components will overlap.
     * - Code which tries to interpret locations should probably be designed to
     *   ignore those that it doesn't understand, as more types of locations could
     *   be recorded in the future.
     * </pre>
     *
     * <code>repeated .google.protobuf.SourceCodeInfo.Location location = 1;</code>
     */
    public java.util.List<? extends com.google.protobuf.DescriptorProtos.SourceCodeInfo.LocationOrBuilder>
        getLocationOrBuilderList() {
      return location_;
    }
    /**
     * <pre>
     * A Location identifies a piece of source code in a .proto file which
     * corresponds to a particular definition.  This information is intended
     * to be useful to IDEs, code indexers, documentation generators, and similar
     * tools.
     * For example, say we have a file like:
     *   message Foo {
     *     optional string foo = 1;
     *   }
     * Let's look at just the field definition:
     *   optional string foo = 1;
     *   ^       ^^     ^^  ^  ^^^
     *   a       bc     de  f  ghi
     * We have the following locations:
     *   span   path               represents
     *   [a,i)  [ 4, 0, 2, 0 ]     The whole field definition.
     *   [a,b)  [ 4, 0, 2, 0, 4 ]  The label (optional).
     *   [c,d)  [ 4, 0, 2, 0, 5 ]  The type (string).
     *   [e,f)  [ 4, 0, 2, 0, 1 ]  The name (foo).
     *   [g,h)  [ 4, 0, 2, 0, 3 ]  The number (1).
     * Notes:
     * - A location may refer to a repeated field itself (i.e. not to any
     *   particular index within it).  This is used whenever a set of elements are
     *   logically enclosed in a single code segment.  For example, an entire
     *   extend block (possibly containing multiple extension definitions) will
     *   have an outer location whose path refers to the "extensions" repeated
     *   field without an index.
     * - Multiple locations may have the same path.  This happens when a single
     *   logical declaration is spread out across multiple places.  The most
     *   obvious example is the "extend" block again -- there may be multiple
     *   extend blocks in the same scope, each of which will have the same path.
     * - A location's span is not always a subset of its parent's span.  For
     *   example, the "extendee" of an extension declaration appears at the
     *   beginning of the "extend" block and is shared by all extensions within
     *   the block.
     * - Just because a location's span is a subset of some other location's span
     *   does not mean that it is a descendent.  For example, a "group" defines
     *   both a type and a field in a single declaration.  Thus, the locations
     *   corresponding to the type and field and their components will overlap.
     * - Code which tries to interpret locations should probably be designed to
     *   ignore those that it doesn't understand, as more types of locations could
     *   be recorded in the future.
     * </pre>
     *
     * <code>repeated .google.protobuf.SourceCodeInfo.Location location = 1;</code>
     */
    public int getLocationCount() {
      return location_.size();
    }
    /**
     * <pre>
     * A Location identifies a piece of source code in a .proto file which
     * corresponds to a particular definition.  This information is intended
     * to be useful to IDEs, code indexers, documentation generators, and similar
     * tools.
     * For example, say we have a file like:
     *   message Foo {
     *     optional string foo = 1;
     *   }
     * Let's look at just the field definition:
     *   optional string foo = 1;
     *   ^       ^^     ^^  ^  ^^^
     *   a       bc     de  f  ghi
     * We have the following locations:
     *   span   path               represents
     *   [a,i)  [ 4, 0, 2, 0 ]     The whole field definition.
     *   [a,b)  [ 4, 0, 2, 0, 4 ]  The label (optional).
     *   [c,d)  [ 4, 0, 2, 0, 5 ]  The type (string).
     *   [e,f)  [ 4, 0, 2, 0, 1 ]  The name (foo).
     *   [g,h)  [ 4, 0, 2, 0, 3 ]  The number (1).
     * Notes:
     * - A location may refer to a repeated field itself (i.e. not to any
     *   particular index within it).  This is used whenever a set of elements are
     *   logically enclosed in a single code segment.  For example, an entire
     *   extend block (possibly containing multiple extension definitions) will
     *   have an outer location whose path refers to the "extensions" repeated
     *   field without an index.
     * - Multiple locations may have the same path.  This happens when a single
     *   logical declaration is spread out across multiple places.  The most
     *   obvious example is the "extend" block again -- there may be multiple
     *   extend blocks in the same scope, each of which will have the same path.
     * - A location's span is not always a subset of its parent's span.  For
     *   example, the "extendee" of an extension declaration appears at the
     *   beginning of the "extend" block and is shared by all extensions within
     *   the block.
     * - Just because a location's span is a subset of some other location's span
     *   does not mean that it is a descendent.  For example, a "group" defines
     *   both a type and a field in a single declaration.  Thus, the locations
     *   corresponding to the type and field and their components will overlap.
     * - Code which tries to interpret locations should probably be designed to
     *   ignore those that it doesn't understand, as more types of locations could
     *   be recorded in the future.
     * </pre>
     *
     * <code>repeated .google.protobuf.SourceCodeInfo.Location location = 1;</code>
     */
    public com.google.protobuf.DescriptorProtos.SourceCodeInfo.Location getLocation(int index) {
      return location_.get(index);
    }
    /**
     * <pre>
     * A Location identifies a piece of source code in a .proto file which
     * corresponds to a particular definition.  This information is intended
     * to be useful to IDEs, code indexers, documentation generators, and similar
     * tools.
     * For example, say we have a file like:
     *   message Foo {
     *     optional string foo = 1;
     *   }
     * Let's look at just the field definition:
     *   optional string foo = 1;
     *   ^       ^^     ^^  ^  ^^^
     *   a       bc     de  f  ghi
     * We have the following locations:
     *   span   path               represents
     *   [a,i)  [ 4, 0, 2, 0 ]     The whole field definition.
     *   [a,b)  [ 4, 0, 2, 0, 4 ]  The label (optional).
     *   [c,d)  [ 4, 0, 2, 0, 5 ]  The type (string).
     *   [e,f)  [ 4, 0, 2, 0, 1 ]  The name (foo).
     *   [g,h)  [ 4, 0, 2, 0, 3 ]  The number (1).
     * Notes:
     * - A location may refer to a repeated field itself (i.e. not to any
     *   particular index within it).  This is used whenever a set of elements are
     *   logically enclosed in a single code segment.  For example, an entire
     *   extend block (possibly containing multiple extension definitions) will
     *   have an outer location whose path refers to the "extensions" repeated
     *   field without an index.
     * - Multiple locations may have the same path.  This happens when a single
     *   logical declaration is spread out across multiple places.  The most
     *   obvious example is the "extend" block again -- there may be multiple
     *   extend blocks in the same scope, each of which will have the same path.
     * - A location's span is not always a subset of its parent's span.  For
     *   example, the "extendee" of an extension declaration appears at the
     *   beginning of the "extend" block and is shared by all extensions within
     *   the block.
     * - Just because a location's span is a subset of some other location's span
     *   does not mean that it is a descendent.  For example, a "group" defines
     *   both a type and a field in a single declaration.  Thus, the locations
     *   corresponding to the type and field and their components will overlap.
     * - Code which tries to interpret locations should probably be designed to
     *   ignore those that it doesn't understand, as more types of locations could
     *   be recorded in the future.
     * </pre>
     *
     * <code>repeated .google.protobuf.SourceCodeInfo.Location location = 1;</code>
     */
    public com.google.protobuf.DescriptorProtos.SourceCodeInfo.LocationOrBuilder getLocationOrBuilder(
        int index) {
      return location_.get(index);
    }
    private void ensureLocationIsMutable() {
      if (!location_.isModifiable()) {
        location_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(location_);
       }
    }

    /**
     * <pre>
     * A Location identifies a piece of source code in a .proto file which
     * corresponds to a particular definition.  This information is intended
     * to be useful to IDEs, code indexers, documentation generators, and similar
     * tools.
     * For example, say we have a file like:
     *   message Foo {
     *     optional string foo = 1;
     *   }
     * Let's look at just the field definition:
     *   optional string foo = 1;
     *   ^       ^^     ^^  ^  ^^^
     *   a       bc     de  f  ghi
     * We have the following locations:
     *   span   path               represents
     *   [a,i)  [ 4, 0, 2, 0 ]     The whole field definition.
     *   [a,b)  [ 4, 0, 2, 0, 4 ]  The label (optional).
     *   [c,d)  [ 4, 0, 2, 0, 5 ]  The type (string).
     *   [e,f)  [ 4, 0, 2, 0, 1 ]  The name (foo).
     *   [g,h)  [ 4, 0, 2, 0, 3 ]  The number (1).
     * Notes:
     * - A location may refer to a repeated field itself (i.e. not to any
     *   particular index within it).  This is used whenever a set of elements are
     *   logically enclosed in a single code segment.  For example, an entire
     *   extend block (possibly containing multiple extension definitions) will
     *   have an outer location whose path refers to the "extensions" repeated
     *   field without an index.
     * - Multiple locations may have the same path.  This happens when a single
     *   logical declaration is spread out across multiple places.  The most
     *   obvious example is the "extend" block again -- there may be multiple
     *   extend blocks in the same scope, each of which will have the same path.
     * - A location's span is not always a subset of its parent's span.  For
     *   example, the "extendee" of an extension declaration appears at the
     *   beginning of the "extend" block and is shared by all extensions within
     *   the block.
     * - Just because a location's span is a subset of some other location's span
     *   does not mean that it is a descendent.  For example, a "group" defines
     *   both a type and a field in a single declaration.  Thus, the locations
     *   corresponding to the type and field and their components will overlap.
     * - Code which tries to interpret locations should probably be designed to
     *   ignore those that it doesn't understand, as more types of locations could
     *   be recorded in the future.
     * </pre>
     *
     * <code>repeated .google.protobuf.SourceCodeInfo.Location location = 1;</code>
     */
    private void setLocation(
        int index, com.google.protobuf.DescriptorProtos.SourceCodeInfo.Location value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureLocationIsMutable();
      location_.set(index, value);
    }
    /**
     * <pre>
     * A Location identifies a piece of source code in a .proto file which
     * corresponds to a particular definition.  This information is intended
     * to be useful to IDEs, code indexers, documentation generators, and similar
     * tools.
     * For example, say we have a file like:
     *   message Foo {
     *     optional string foo = 1;
     *   }
     * Let's look at just the field definition:
     *   optional string foo = 1;
     *   ^       ^^     ^^  ^  ^^^
     *   a       bc     de  f  ghi
     * We have the following locations:
     *   span   path               represents
     *   [a,i)  [ 4, 0, 2, 0 ]     The whole field definition.
     *   [a,b)  [ 4, 0, 2, 0, 4 ]  The label (optional).
     *   [c,d)  [ 4, 0, 2, 0, 5 ]  The type (string).
     *   [e,f)  [ 4, 0, 2, 0, 1 ]  The name (foo).
     *   [g,h)  [ 4, 0, 2, 0, 3 ]  The number (1).
     * Notes:
     * - A location may refer to a repeated field itself (i.e. not to any
     *   particular index within it).  This is used whenever a set of elements are
     *   logically enclosed in a single code segment.  For example, an entire
     *   extend block (possibly containing multiple extension definitions) will
     *   have an outer location whose path refers to the "extensions" repeated
     *   field without an index.
     * - Multiple locations may have the same path.  This happens when a single
     *   logical declaration is spread out across multiple places.  The most
     *   obvious example is the "extend" block again -- there may be multiple
     *   extend blocks in the same scope, each of which will have the same path.
     * - A location's span is not always a subset of its parent's span.  For
     *   example, the "extendee" of an extension declaration appears at the
     *   beginning of the "extend" block and is shared by all extensions within
     *   the block.
     * - Just because a location's span is a subset of some other location's span
     *   does not mean that it is a descendent.  For example, a "group" defines
     *   both a type and a field in a single declaration.  Thus, the locations
     *   corresponding to the type and field and their components will overlap.
     * - Code which tries to interpret locations should probably be designed to
     *   ignore those that it doesn't understand, as more types of locations could
     *   be recorded in the future.
     * </pre>
     *
     * <code>repeated .google.protobuf.SourceCodeInfo.Location location = 1;</code>
     */
    private void setLocation(
        int index, com.google.protobuf.DescriptorProtos.SourceCodeInfo.Location.Builder builderForValue) {
      ensureLocationIsMutable();
      location_.set(index, builderForValue.build());
    }
    /**
     * <pre>
     * A Location identifies a piece of source code in a .proto file which
     * corresponds to a particular definition.  This information is intended
     * to be useful to IDEs, code indexers, documentation generators, and similar
     * tools.
     * For example, say we have a file like:
     *   message Foo {
     *     optional string foo = 1;
     *   }
     * Let's look at just the field definition:
     *   optional string foo = 1;
     *   ^       ^^     ^^  ^  ^^^
     *   a       bc     de  f  ghi
     * We have the following locations:
     *   span   path               represents
     *   [a,i)  [ 4, 0, 2, 0 ]     The whole field definition.
     *   [a,b)  [ 4, 0, 2, 0, 4 ]  The label (optional).
     *   [c,d)  [ 4, 0, 2, 0, 5 ]  The type (string).
     *   [e,f)  [ 4, 0, 2, 0, 1 ]  The name (foo).
     *   [g,h)  [ 4, 0, 2, 0, 3 ]  The number (1).
     * Notes:
     * - A location may refer to a repeated field itself (i.e. not to any
     *   particular index within it).  This is used whenever a set of elements are
     *   logically enclosed in a single code segment.  For example, an entire
     *   extend block (possibly containing multiple extension definitions) will
     *   have an outer location whose path refers to the "extensions" repeated
     *   field without an index.
     * - Multiple locations may have the same path.  This happens when a single
     *   logical declaration is spread out across multiple places.  The most
     *   obvious example is the "extend" block again -- there may be multiple
     *   extend blocks in the same scope, each of which will have the same path.
     * - A location's span is not always a subset of its parent's span.  For
     *   example, the "extendee" of an extension declaration appears at the
     *   beginning of the "extend" block and is shared by all extensions within
     *   the block.
     * - Just because a location's span is a subset of some other location's span
     *   does not mean that it is a descendent.  For example, a "group" defines
     *   both a type and a field in a single declaration.  Thus, the locations
     *   corresponding to the type and field and their components will overlap.
     * - Code which tries to interpret locations should probably be designed to
     *   ignore those that it doesn't understand, as more types of locations could
     *   be recorded in the future.
     * </pre>
     *
     * <code>repeated .google.protobuf.SourceCodeInfo.Location location = 1;</code>
     */
    private void addLocation(com.google.protobuf.DescriptorProtos.SourceCodeInfo.Location value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureLocationIsMutable();
      location_.add(value);
    }
    /**
     * <pre>
     * A Location identifies a piece of source code in a .proto file which
     * corresponds to a particular definition.  This information is intended
     * to be useful to IDEs, code indexers, documentation generators, and similar
     * tools.
     * For example, say we have a file like:
     *   message Foo {
     *     optional string foo = 1;
     *   }
     * Let's look at just the field definition:
     *   optional string foo = 1;
     *   ^       ^^     ^^  ^  ^^^
     *   a       bc     de  f  ghi
     * We have the following locations:
     *   span   path               represents
     *   [a,i)  [ 4, 0, 2, 0 ]     The whole field definition.
     *   [a,b)  [ 4, 0, 2, 0, 4 ]  The label (optional).
     *   [c,d)  [ 4, 0, 2, 0, 5 ]  The type (string).
     *   [e,f)  [ 4, 0, 2, 0, 1 ]  The name (foo).
     *   [g,h)  [ 4, 0, 2, 0, 3 ]  The number (1).
     * Notes:
     * - A location may refer to a repeated field itself (i.e. not to any
     *   particular index within it).  This is used whenever a set of elements are
     *   logically enclosed in a single code segment.  For example, an entire
     *   extend block (possibly containing multiple extension definitions) will
     *   have an outer location whose path refers to the "extensions" repeated
     *   field without an index.
     * - Multiple locations may have the same path.  This happens when a single
     *   logical declaration is spread out across multiple places.  The most
     *   obvious example is the "extend" block again -- there may be multiple
     *   extend blocks in the same scope, each of which will have the same path.
     * - A location's span is not always a subset of its parent's span.  For
     *   example, the "extendee" of an extension declaration appears at the
     *   beginning of the "extend" block and is shared by all extensions within
     *   the block.
     * - Just because a location's span is a subset of some other location's span
     *   does not mean that it is a descendent.  For example, a "group" defines
     *   both a type and a field in a single declaration.  Thus, the locations
     *   corresponding to the type and field and their components will overlap.
     * - Code which tries to interpret locations should probably be designed to
     *   ignore those that it doesn't understand, as more types of locations could
     *   be recorded in the future.
     * </pre>
     *
     * <code>repeated .google.protobuf.SourceCodeInfo.Location location = 1;</code>
     */
    private void addLocation(
        int index, com.google.protobuf.DescriptorProtos.SourceCodeInfo.Location value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureLocationIsMutable();
      location_.add(index, value);
    }
    /**
     * <pre>
     * A Location identifies a piece of source code in a .proto file which
     * corresponds to a particular definition.  This information is intended
     * to be useful to IDEs, code indexers, documentation generators, and similar
     * tools.
     * For example, say we have a file like:
     *   message Foo {
     *     optional string foo = 1;
     *   }
     * Let's look at just the field definition:
     *   optional string foo = 1;
     *   ^       ^^     ^^  ^  ^^^
     *   a       bc     de  f  ghi
     * We have the following locations:
     *   span   path               represents
     *   [a,i)  [ 4, 0, 2, 0 ]     The whole field definition.
     *   [a,b)  [ 4, 0, 2, 0, 4 ]  The label (optional).
     *   [c,d)  [ 4, 0, 2, 0, 5 ]  The type (string).
     *   [e,f)  [ 4, 0, 2, 0, 1 ]  The name (foo).
     *   [g,h)  [ 4, 0, 2, 0, 3 ]  The number (1).
     * Notes:
     * - A location may refer to a repeated field itself (i.e. not to any
     *   particular index within it).  This is used whenever a set of elements are
     *   logically enclosed in a single code segment.  For example, an entire
     *   extend block (possibly containing multiple extension definitions) will
     *   have an outer location whose path refers to the "extensions" repeated
     *   field without an index.
     * - Multiple locations may have the same path.  This happens when a single
     *   logical declaration is spread out across multiple places.  The most
     *   obvious example is the "extend" block again -- there may be multiple
     *   extend blocks in the same scope, each of which will have the same path.
     * - A location's span is not always a subset of its parent's span.  For
     *   example, the "extendee" of an extension declaration appears at the
     *   beginning of the "extend" block and is shared by all extensions within
     *   the block.
     * - Just because a location's span is a subset of some other location's span
     *   does not mean that it is a descendent.  For example, a "group" defines
     *   both a type and a field in a single declaration.  Thus, the locations
     *   corresponding to the type and field and their components will overlap.
     * - Code which tries to interpret locations should probably be designed to
     *   ignore those that it doesn't understand, as more types of locations could
     *   be recorded in the future.
     * </pre>
     *
     * <code>repeated .google.protobuf.SourceCodeInfo.Location location = 1;</code>
     */
    private void addLocation(
        com.google.protobuf.DescriptorProtos.SourceCodeInfo.Location.Builder builderForValue) {
      ensureLocationIsMutable();
      location_.add(builderForValue.build());
    }
    /**
     * <pre>
     * A Location identifies a piece of source code in a .proto file which
     * corresponds to a particular definition.  This information is intended
     * to be useful to IDEs, code indexers, documentation generators, and similar
     * tools.
     * For example, say we have a file like:
     *   message Foo {
     *     optional string foo = 1;
     *   }
     * Let's look at just the field definition:
     *   optional string foo = 1;
     *   ^       ^^     ^^  ^  ^^^
     *   a       bc     de  f  ghi
     * We have the following locations:
     *   span   path               represents
     *   [a,i)  [ 4, 0, 2, 0 ]     The whole field definition.
     *   [a,b)  [ 4, 0, 2, 0, 4 ]  The label (optional).
     *   [c,d)  [ 4, 0, 2, 0, 5 ]  The type (string).
     *   [e,f)  [ 4, 0, 2, 0, 1 ]  The name (foo).
     *   [g,h)  [ 4, 0, 2, 0, 3 ]  The number (1).
     * Notes:
     * - A location may refer to a repeated field itself (i.e. not to any
     *   particular index within it).  This is used whenever a set of elements are
     *   logically enclosed in a single code segment.  For example, an entire
     *   extend block (possibly containing multiple extension definitions) will
     *   have an outer location whose path refers to the "extensions" repeated
     *   field without an index.
     * - Multiple locations may have the same path.  This happens when a single
     *   logical declaration is spread out across multiple places.  The most
     *   obvious example is the "extend" block again -- there may be multiple
     *   extend blocks in the same scope, each of which will have the same path.
     * - A location's span is not always a subset of its parent's span.  For
     *   example, the "extendee" of an extension declaration appears at the
     *   beginning of the "extend" block and is shared by all extensions within
     *   the block.
     * - Just because a location's span is a subset of some other location's span
     *   does not mean that it is a descendent.  For example, a "group" defines
     *   both a type and a field in a single declaration.  Thus, the locations
     *   corresponding to the type and field and their components will overlap.
     * - Code which tries to interpret locations should probably be designed to
     *   ignore those that it doesn't understand, as more types of locations could
     *   be recorded in the future.
     * </pre>
     *
     * <code>repeated .google.protobuf.SourceCodeInfo.Location location = 1;</code>
     */
    private void addLocation(
        int index, com.google.protobuf.DescriptorProtos.SourceCodeInfo.Location.Builder builderForValue) {
      ensureLocationIsMutable();
      location_.add(index, builderForValue.build());
    }
    /**
     * <pre>
     * A Location identifies a piece of source code in a .proto file which
     * corresponds to a particular definition.  This information is intended
     * to be useful to IDEs, code indexers, documentation generators, and similar
     * tools.
     * For example, say we have a file like:
     *   message Foo {
     *     optional string foo = 1;
     *   }
     * Let's look at just the field definition:
     *   optional string foo = 1;
     *   ^       ^^     ^^  ^  ^^^
     *   a       bc     de  f  ghi
     * We have the following locations:
     *   span   path               represents
     *   [a,i)  [ 4, 0, 2, 0 ]     The whole field definition.
     *   [a,b)  [ 4, 0, 2, 0, 4 ]  The label (optional).
     *   [c,d)  [ 4, 0, 2, 0, 5 ]  The type (string).
     *   [e,f)  [ 4, 0, 2, 0, 1 ]  The name (foo).
     *   [g,h)  [ 4, 0, 2, 0, 3 ]  The number (1).
     * Notes:
     * - A location may refer to a repeated field itself (i.e. not to any
     *   particular index within it).  This is used whenever a set of elements are
     *   logically enclosed in a single code segment.  For example, an entire
     *   extend block (possibly containing multiple extension definitions) will
     *   have an outer location whose path refers to the "extensions" repeated
     *   field without an index.
     * - Multiple locations may have the same path.  This happens when a single
     *   logical declaration is spread out across multiple places.  The most
     *   obvious example is the "extend" block again -- there may be multiple
     *   extend blocks in the same scope, each of which will have the same path.
     * - A location's span is not always a subset of its parent's span.  For
     *   example, the "extendee" of an extension declaration appears at the
     *   beginning of the "extend" block and is shared by all extensions within
     *   the block.
     * - Just because a location's span is a subset of some other location's span
     *   does not mean that it is a descendent.  For example, a "group" defines
     *   both a type and a field in a single declaration.  Thus, the locations
     *   corresponding to the type and field and their components will overlap.
     * - Code which tries to interpret locations should probably be designed to
     *   ignore those that it doesn't understand, as more types of locations could
     *   be recorded in the future.
     * </pre>
     *
     * <code>repeated .google.protobuf.SourceCodeInfo.Location location = 1;</code>
     */
    private void addAllLocation(
        java.lang.Iterable<? extends com.google.protobuf.DescriptorProtos.SourceCodeInfo.Location> values) {
      ensureLocationIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, location_);
    }
    /**
     * <pre>
     * A Location identifies a piece of source code in a .proto file which
     * corresponds to a particular definition.  This information is intended
     * to be useful to IDEs, code indexers, documentation generators, and similar
     * tools.
     * For example, say we have a file like:
     *   message Foo {
     *     optional string foo = 1;
     *   }
     * Let's look at just the field definition:
     *   optional string foo = 1;
     *   ^       ^^     ^^  ^  ^^^
     *   a       bc     de  f  ghi
     * We have the following locations:
     *   span   path               represents
     *   [a,i)  [ 4, 0, 2, 0 ]     The whole field definition.
     *   [a,b)  [ 4, 0, 2, 0, 4 ]  The label (optional).
     *   [c,d)  [ 4, 0, 2, 0, 5 ]  The type (string).
     *   [e,f)  [ 4, 0, 2, 0, 1 ]  The name (foo).
     *   [g,h)  [ 4, 0, 2, 0, 3 ]  The number (1).
     * Notes:
     * - A location may refer to a repeated field itself (i.e. not to any
     *   particular index within it).  This is used whenever a set of elements are
     *   logically enclosed in a single code segment.  For example, an entire
     *   extend block (possibly containing multiple extension definitions) will
     *   have an outer location whose path refers to the "extensions" repeated
     *   field without an index.
     * - Multiple locations may have the same path.  This happens when a single
     *   logical declaration is spread out across multiple places.  The most
     *   obvious example is the "extend" block again -- there may be multiple
     *   extend blocks in the same scope, each of which will have the same path.
     * - A location's span is not always a subset of its parent's span.  For
     *   example, the "extendee" of an extension declaration appears at the
     *   beginning of the "extend" block and is shared by all extensions within
     *   the block.
     * - Just because a location's span is a subset of some other location's span
     *   does not mean that it is a descendent.  For example, a "group" defines
     *   both a type and a field in a single declaration.  Thus, the locations
     *   corresponding to the type and field and their components will overlap.
     * - Code which tries to interpret locations should probably be designed to
     *   ignore those that it doesn't understand, as more types of locations could
     *   be recorded in the future.
     * </pre>
     *
     * <code>repeated .google.protobuf.SourceCodeInfo.Location location = 1;</code>
     */
    private void clearLocation() {
      location_ = emptyProtobufList();
    }
    /**
     * <pre>
     * A Location identifies a piece of source code in a .proto file which
     * corresponds to a particular definition.  This information is intended
     * to be useful to IDEs, code indexers, documentation generators, and similar
     * tools.
     * For example, say we have a file like:
     *   message Foo {
     *     optional string foo = 1;
     *   }
     * Let's look at just the field definition:
     *   optional string foo = 1;
     *   ^       ^^     ^^  ^  ^^^
     *   a       bc     de  f  ghi
     * We have the following locations:
     *   span   path               represents
     *   [a,i)  [ 4, 0, 2, 0 ]     The whole field definition.
     *   [a,b)  [ 4, 0, 2, 0, 4 ]  The label (optional).
     *   [c,d)  [ 4, 0, 2, 0, 5 ]  The type (string).
     *   [e,f)  [ 4, 0, 2, 0, 1 ]  The name (foo).
     *   [g,h)  [ 4, 0, 2, 0, 3 ]  The number (1).
     * Notes:
     * - A location may refer to a repeated field itself (i.e. not to any
     *   particular index within it).  This is used whenever a set of elements are
     *   logically enclosed in a single code segment.  For example, an entire
     *   extend block (possibly containing multiple extension definitions) will
     *   have an outer location whose path refers to the "extensions" repeated
     *   field without an index.
     * - Multiple locations may have the same path.  This happens when a single
     *   logical declaration is spread out across multiple places.  The most
     *   obvious example is the "extend" block again -- there may be multiple
     *   extend blocks in the same scope, each of which will have the same path.
     * - A location's span is not always a subset of its parent's span.  For
     *   example, the "extendee" of an extension declaration appears at the
     *   beginning of the "extend" block and is shared by all extensions within
     *   the block.
     * - Just because a location's span is a subset of some other location's span
     *   does not mean that it is a descendent.  For example, a "group" defines
     *   both a type and a field in a single declaration.  Thus, the locations
     *   corresponding to the type and field and their components will overlap.
     * - Code which tries to interpret locations should probably be designed to
     *   ignore those that it doesn't understand, as more types of locations could
     *   be recorded in the future.
     * </pre>
     *
     * <code>repeated .google.protobuf.SourceCodeInfo.Location location = 1;</code>
     */
    private void removeLocation(int index) {
      ensureLocationIsMutable();
      location_.remove(index);
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < location_.size(); i++) {
        output.writeMessage(1, location_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < location_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, location_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.google.protobuf.DescriptorProtos.SourceCodeInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.google.protobuf.DescriptorProtos.SourceCodeInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.google.protobuf.DescriptorProtos.SourceCodeInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.google.protobuf.DescriptorProtos.SourceCodeInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.google.protobuf.DescriptorProtos.SourceCodeInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.google.protobuf.DescriptorProtos.SourceCodeInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.google.protobuf.DescriptorProtos.SourceCodeInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.google.protobuf.DescriptorProtos.SourceCodeInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.google.protobuf.DescriptorProtos.SourceCodeInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.google.protobuf.DescriptorProtos.SourceCodeInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.protobuf.DescriptorProtos.SourceCodeInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * Encapsulates information about the original source file from which a
     * FileDescriptorProto was generated.
     * </pre>
     *
     * Protobuf type {@code google.protobuf.SourceCodeInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.google.protobuf.DescriptorProtos.SourceCodeInfo, Builder> implements
        // @@protoc_insertion_point(builder_implements:google.protobuf.SourceCodeInfo)
        com.google.protobuf.DescriptorProtos.SourceCodeInfoOrBuilder {
      // Construct using com.google.protobuf.DescriptorProtos.SourceCodeInfo.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * A Location identifies a piece of source code in a .proto file which
       * corresponds to a particular definition.  This information is intended
       * to be useful to IDEs, code indexers, documentation generators, and similar
       * tools.
       * For example, say we have a file like:
       *   message Foo {
       *     optional string foo = 1;
       *   }
       * Let's look at just the field definition:
       *   optional string foo = 1;
       *   ^       ^^     ^^  ^  ^^^
       *   a       bc     de  f  ghi
       * We have the following locations:
       *   span   path               represents
       *   [a,i)  [ 4, 0, 2, 0 ]     The whole field definition.
       *   [a,b)  [ 4, 0, 2, 0, 4 ]  The label (optional).
       *   [c,d)  [ 4, 0, 2, 0, 5 ]  The type (string).
       *   [e,f)  [ 4, 0, 2, 0, 1 ]  The name (foo).
       *   [g,h)  [ 4, 0, 2, 0, 3 ]  The number (1).
       * Notes:
       * - A location may refer to a repeated field itself (i.e. not to any
       *   particular index within it).  This is used whenever a set of elements are
       *   logically enclosed in a single code segment.  For example, an entire
       *   extend block (possibly containing multiple extension definitions) will
       *   have an outer location whose path refers to the "extensions" repeated
       *   field without an index.
       * - Multiple locations may have the same path.  This happens when a single
       *   logical declaration is spread out across multiple places.  The most
       *   obvious example is the "extend" block again -- there may be multiple
       *   extend blocks in the same scope, each of which will have the same path.
       * - A location's span is not always a subset of its parent's span.  For
       *   example, the "extendee" of an extension declaration appears at the
       *   beginning of the "extend" block and is shared by all extensions within
       *   the block.
       * - Just because a location's span is a subset of some other location's span
       *   does not mean that it is a descendent.  For example, a "group" defines
       *   both a type and a field in a single declaration.  Thus, the locations
       *   corresponding to the type and field and their components will overlap.
       * - Code which tries to interpret locations should probably be designed to
       *   ignore those that it doesn't understand, as more types of locations could
       *   be recorded in the future.
       * </pre>
       *
       * <code>repeated .google.protobuf.SourceCodeInfo.Location location = 1;</code>
       */
      public java.util.List<com.google.protobuf.DescriptorProtos.SourceCodeInfo.Location> getLocationList() {
        return java.util.Collections.unmodifiableList(
            instance.getLocationList());
      }
      /**
       * <pre>
       * A Location identifies a piece of source code in a .proto file which
       * corresponds to a particular definition.  This information is intended
       * to be useful to IDEs, code indexers, documentation generators, and similar
       * tools.
       * For example, say we have a file like:
       *   message Foo {
       *     optional string foo = 1;
       *   }
       * Let's look at just the field definition:
       *   optional string foo = 1;
       *   ^       ^^     ^^  ^  ^^^
       *   a       bc     de  f  ghi
       * We have the following locations:
       *   span   path               represents
       *   [a,i)  [ 4, 0, 2, 0 ]     The whole field definition.
       *   [a,b)  [ 4, 0, 2, 0, 4 ]  The label (optional).
       *   [c,d)  [ 4, 0, 2, 0, 5 ]  The type (string).
       *   [e,f)  [ 4, 0, 2, 0, 1 ]  The name (foo).
       *   [g,h)  [ 4, 0, 2, 0, 3 ]  The number (1).
       * Notes:
       * - A location may refer to a repeated field itself (i.e. not to any
       *   particular index within it).  This is used whenever a set of elements are
       *   logically enclosed in a single code segment.  For example, an entire
       *   extend block (possibly containing multiple extension definitions) will
       *   have an outer location whose path refers to the "extensions" repeated
       *   field without an index.
       * - Multiple locations may have the same path.  This happens when a single
       *   logical declaration is spread out across multiple places.  The most
       *   obvious example is the "extend" block again -- there may be multiple
       *   extend blocks in the same scope, each of which will have the same path.
       * - A location's span is not always a subset of its parent's span.  For
       *   example, the "extendee" of an extension declaration appears at the
       *   beginning of the "extend" block and is shared by all extensions within
       *   the block.
       * - Just because a location's span is a subset of some other location's span
       *   does not mean that it is a descendent.  For example, a "group" defines
       *   both a type and a field in a single declaration.  Thus, the locations
       *   corresponding to the type and field and their components will overlap.
       * - Code which tries to interpret locations should probably be designed to
       *   ignore those that it doesn't understand, as more types of locations could
       *   be recorded in the future.
       * </pre>
       *
       * <code>repeated .google.protobuf.SourceCodeInfo.Location location = 1;</code>
       */
      public int getLocationCount() {
        return instance.getLocationCount();
      }/**
       * <pre>
       * A Location identifies a piece of source code in a .proto file which
       * corresponds to a particular definition.  This information is intended
       * to be useful to IDEs, code indexers, documentation generators, and similar
       * tools.
       * For example, say we have a file like:
       *   message Foo {
       *     optional string foo = 1;
       *   }
       * Let's look at just the field definition:
       *   optional string foo = 1;
       *   ^       ^^     ^^  ^  ^^^
       *   a       bc     de  f  ghi
       * We have the following locations:
       *   span   path               represents
       *   [a,i)  [ 4, 0, 2, 0 ]     The whole field definition.
       *   [a,b)  [ 4, 0, 2, 0, 4 ]  The label (optional).
       *   [c,d)  [ 4, 0, 2, 0, 5 ]  The type (string).
       *   [e,f)  [ 4, 0, 2, 0, 1 ]  The name (foo).
       *   [g,h)  [ 4, 0, 2, 0, 3 ]  The number (1).
       * Notes:
       * - A location may refer to a repeated field itself (i.e. not to any
       *   particular index within it).  This is used whenever a set of elements are
       *   logically enclosed in a single code segment.  For example, an entire
       *   extend block (possibly containing multiple extension definitions) will
       *   have an outer location whose path refers to the "extensions" repeated
       *   field without an index.
       * - Multiple locations may have the same path.  This happens when a single
       *   logical declaration is spread out across multiple places.  The most
       *   obvious example is the "extend" block again -- there may be multiple
       *   extend blocks in the same scope, each of which will have the same path.
       * - A location's span is not always a subset of its parent's span.  For
       *   example, the "extendee" of an extension declaration appears at the
       *   beginning of the "extend" block and is shared by all extensions within
       *   the block.
       * - Just because a location's span is a subset of some other location's span
       *   does not mean that it is a descendent.  For example, a "group" defines
       *   both a type and a field in a single declaration.  Thus, the locations
       *   corresponding to the type and field and their components will overlap.
       * - Code which tries to interpret locations should probably be designed to
       *   ignore those that it doesn't understand, as more types of locations could
       *   be recorded in the future.
       * </pre>
       *
       * <code>repeated .google.protobuf.SourceCodeInfo.Location location = 1;</code>
       */
      public com.google.protobuf.DescriptorProtos.SourceCodeInfo.Location getLocation(int index) {
        return instance.getLocation(index);
      }
      /**
       * <pre>
       * A Location identifies a piece of source code in a .proto file which
       * corresponds to a particular definition.  This information is intended
       * to be useful to IDEs, code indexers, documentation generators, and similar
       * tools.
       * For example, say we have a file like:
       *   message Foo {
       *     optional string foo = 1;
       *   }
       * Let's look at just the field definition:
       *   optional string foo = 1;
       *   ^       ^^     ^^  ^  ^^^
       *   a       bc     de  f  ghi
       * We have the following locations:
       *   span   path               represents
       *   [a,i)  [ 4, 0, 2, 0 ]     The whole field definition.
       *   [a,b)  [ 4, 0, 2, 0, 4 ]  The label (optional).
       *   [c,d)  [ 4, 0, 2, 0, 5 ]  The type (string).
       *   [e,f)  [ 4, 0, 2, 0, 1 ]  The name (foo).
       *   [g,h)  [ 4, 0, 2, 0, 3 ]  The number (1).
       * Notes:
       * - A location may refer to a repeated field itself (i.e. not to any
       *   particular index within it).  This is used whenever a set of elements are
       *   logically enclosed in a single code segment.  For example, an entire
       *   extend block (possibly containing multiple extension definitions) will
       *   have an outer location whose path refers to the "extensions" repeated
       *   field without an index.
       * - Multiple locations may have the same path.  This happens when a single
       *   logical declaration is spread out across multiple places.  The most
       *   obvious example is the "extend" block again -- there may be multiple
       *   extend blocks in the same scope, each of which will have the same path.
       * - A location's span is not always a subset of its parent's span.  For
       *   example, the "extendee" of an extension declaration appears at the
       *   beginning of the "extend" block and is shared by all extensions within
       *   the block.
       * - Just because a location's span is a subset of some other location's span
       *   does not mean that it is a descendent.  For example, a "group" defines
       *   both a type and a field in a single declaration.  Thus, the locations
       *   corresponding to the type and field and their components will overlap.
       * - Code which tries to interpret locations should probably be designed to
       *   ignore those that it doesn't understand, as more types of locations could
       *   be recorded in the future.
       * </pre>
       *
       * <code>repeated .google.protobuf.SourceCodeInfo.Location location = 1;</code>
       */
      public Builder setLocation(
          int index, com.google.protobuf.DescriptorProtos.SourceCodeInfo.Location value) {
        copyOnWrite();
        instance.setLocation(index, value);
        return this;
      }
      /**
       * <pre>
       * A Location identifies a piece of source code in a .proto file which
       * corresponds to a particular definition.  This information is intended
       * to be useful to IDEs, code indexers, documentation generators, and similar
       * tools.
       * For example, say we have a file like:
       *   message Foo {
       *     optional string foo = 1;
       *   }
       * Let's look at just the field definition:
       *   optional string foo = 1;
       *   ^       ^^     ^^  ^  ^^^
       *   a       bc     de  f  ghi
       * We have the following locations:
       *   span   path               represents
       *   [a,i)  [ 4, 0, 2, 0 ]     The whole field definition.
       *   [a,b)  [ 4, 0, 2, 0, 4 ]  The label (optional).
       *   [c,d)  [ 4, 0, 2, 0, 5 ]  The type (string).
       *   [e,f)  [ 4, 0, 2, 0, 1 ]  The name (foo).
       *   [g,h)  [ 4, 0, 2, 0, 3 ]  The number (1).
       * Notes:
       * - A location may refer to a repeated field itself (i.e. not to any
       *   particular index within it).  This is used whenever a set of elements are
       *   logically enclosed in a single code segment.  For example, an entire
       *   extend block (possibly containing multiple extension definitions) will
       *   have an outer location whose path refers to the "extensions" repeated
       *   field without an index.
       * - Multiple locations may have the same path.  This happens when a single
       *   logical declaration is spread out across multiple places.  The most
       *   obvious example is the "extend" block again -- there may be multiple
       *   extend blocks in the same scope, each of which will have the same path.
       * - A location's span is not always a subset of its parent's span.  For
       *   example, the "extendee" of an extension declaration appears at the
       *   beginning of the "extend" block and is shared by all extensions within
       *   the block.
       * - Just because a location's span is a subset of some other location's span
       *   does not mean that it is a descendent.  For example, a "group" defines
       *   both a type and a field in a single declaration.  Thus, the locations
       *   corresponding to the type and field and their components will overlap.
       * - Code which tries to interpret locations should probably be designed to
       *   ignore those that it doesn't understand, as more types of locations could
       *   be recorded in the future.
       * </pre>
       *
       * <code>repeated .google.protobuf.SourceCodeInfo.Location location = 1;</code>
       */
      public Builder setLocation(
          int index, com.google.protobuf.DescriptorProtos.SourceCodeInfo.Location.Builder builderForValue) {
        copyOnWrite();
        instance.setLocation(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       * A Location identifies a piece of source code in a .proto file which
       * corresponds to a particular definition.  This information is intended
       * to be useful to IDEs, code indexers, documentation generators, and similar
       * tools.
       * For example, say we have a file like:
       *   message Foo {
       *     optional string foo = 1;
       *   }
       * Let's look at just the field definition:
       *   optional string foo = 1;
       *   ^       ^^     ^^  ^  ^^^
       *   a       bc     de  f  ghi
       * We have the following locations:
       *   span   path               represents
       *   [a,i)  [ 4, 0, 2, 0 ]     The whole field definition.
       *   [a,b)  [ 4, 0, 2, 0, 4 ]  The label (optional).
       *   [c,d)  [ 4, 0, 2, 0, 5 ]  The type (string).
       *   [e,f)  [ 4, 0, 2, 0, 1 ]  The name (foo).
       *   [g,h)  [ 4, 0, 2, 0, 3 ]  The number (1).
       * Notes:
       * - A location may refer to a repeated field itself (i.e. not to any
       *   particular index within it).  This is used whenever a set of elements are
       *   logically enclosed in a single code segment.  For example, an entire
       *   extend block (possibly containing multiple extension definitions) will
       *   have an outer location whose path refers to the "extensions" repeated
       *   field without an index.
       * - Multiple locations may have the same path.  This happens when a single
       *   logical declaration is spread out across multiple places.  The most
       *   obvious example is the "extend" block again -- there may be multiple
       *   extend blocks in the same scope, each of which will have the same path.
       * - A location's span is not always a subset of its parent's span.  For
       *   example, the "extendee" of an extension declaration appears at the
       *   beginning of the "extend" block and is shared by all extensions within
       *   the block.
       * - Just because a location's span is a subset of some other location's span
       *   does not mean that it is a descendent.  For example, a "group" defines
       *   both a type and a field in a single declaration.  Thus, the locations
       *   corresponding to the type and field and their components will overlap.
       * - Code which tries to interpret locations should probably be designed to
       *   ignore those that it doesn't understand, as more types of locations could
       *   be recorded in the future.
       * </pre>
       *
       * <code>repeated .google.protobuf.SourceCodeInfo.Location location = 1;</code>
       */
      public Builder addLocation(com.google.protobuf.DescriptorProtos.SourceCodeInfo.Location value) {
        copyOnWrite();
        instance.addLocation(value);
        return this;
      }
      /**
       * <pre>
       * A Location identifies a piece of source code in a .proto file which
       * corresponds to a particular definition.  This information is intended
       * to be useful to IDEs, code indexers, documentation generators, and similar
       * tools.
       * For example, say we have a file like:
       *   message Foo {
       *     optional string foo = 1;
       *   }
       * Let's look at just the field definition:
       *   optional string foo = 1;
       *   ^       ^^     ^^  ^  ^^^
       *   a       bc     de  f  ghi
       * We have the following locations:
       *   span   path               represents
       *   [a,i)  [ 4, 0, 2, 0 ]     The whole field definition.
       *   [a,b)  [ 4, 0, 2, 0, 4 ]  The label (optional).
       *   [c,d)  [ 4, 0, 2, 0, 5 ]  The type (string).
       *   [e,f)  [ 4, 0, 2, 0, 1 ]  The name (foo).
       *   [g,h)  [ 4, 0, 2, 0, 3 ]  The number (1).
       * Notes:
       * - A location may refer to a repeated field itself (i.e. not to any
       *   particular index within it).  This is used whenever a set of elements are
       *   logically enclosed in a single code segment.  For example, an entire
       *   extend block (possibly containing multiple extension definitions) will
       *   have an outer location whose path refers to the "extensions" repeated
       *   field without an index.
       * - Multiple locations may have the same path.  This happens when a single
       *   logical declaration is spread out across multiple places.  The most
       *   obvious example is the "extend" block again -- there may be multiple
       *   extend blocks in the same scope, each of which will have the same path.
       * - A location's span is not always a subset of its parent's span.  For
       *   example, the "extendee" of an extension declaration appears at the
       *   beginning of the "extend" block and is shared by all extensions within
       *   the block.
       * - Just because a location's span is a subset of some other location's span
       *   does not mean that it is a descendent.  For example, a "group" defines
       *   both a type and a field in a single declaration.  Thus, the locations
       *   corresponding to the type and field and their components will overlap.
       * - Code which tries to interpret locations should probably be designed to
       *   ignore those that it doesn't understand, as more types of locations could
       *   be recorded in the future.
       * </pre>
       *
       * <code>repeated .google.protobuf.SourceCodeInfo.Location location = 1;</code>
       */
      public Builder addLocation(
          int index, com.google.protobuf.DescriptorProtos.SourceCodeInfo.Location value) {
        copyOnWrite();
        instance.addLocation(index, value);
        return this;
      }
      /**
       * <pre>
       * A Location identifies a piece of source code in a .proto file which
       * corresponds to a particular definition.  This information is intended
       * to be useful to IDEs, code indexers, documentation generators, and similar
       * tools.
       * For example, say we have a file like:
       *   message Foo {
       *     optional string foo = 1;
       *   }
       * Let's look at just the field definition:
       *   optional string foo = 1;
       *   ^       ^^     ^^  ^  ^^^
       *   a       bc     de  f  ghi
       * We have the following locations:
       *   span   path               represents
       *   [a,i)  [ 4, 0, 2, 0 ]     The whole field definition.
       *   [a,b)  [ 4, 0, 2, 0, 4 ]  The label (optional).
       *   [c,d)  [ 4, 0, 2, 0, 5 ]  The type (string).
       *   [e,f)  [ 4, 0, 2, 0, 1 ]  The name (foo).
       *   [g,h)  [ 4, 0, 2, 0, 3 ]  The number (1).
       * Notes:
       * - A location may refer to a repeated field itself (i.e. not to any
       *   particular index within it).  This is used whenever a set of elements are
       *   logically enclosed in a single code segment.  For example, an entire
       *   extend block (possibly containing multiple extension definitions) will
       *   have an outer location whose path refers to the "extensions" repeated
       *   field without an index.
       * - Multiple locations may have the same path.  This happens when a single
       *   logical declaration is spread out across multiple places.  The most
       *   obvious example is the "extend" block again -- there may be multiple
       *   extend blocks in the same scope, each of which will have the same path.
       * - A location's span is not always a subset of its parent's span.  For
       *   example, the "extendee" of an extension declaration appears at the
       *   beginning of the "extend" block and is shared by all extensions within
       *   the block.
       * - Just because a location's span is a subset of some other location's span
       *   does not mean that it is a descendent.  For example, a "group" defines
       *   both a type and a field in a single declaration.  Thus, the locations
       *   corresponding to the type and field and their components will overlap.
       * - Code which tries to interpret locations should probably be designed to
       *   ignore those that it doesn't understand, as more types of locations could
       *   be recorded in the future.
       * </pre>
       *
       * <code>repeated .google.protobuf.SourceCodeInfo.Location location = 1;</code>
       */
      public Builder addLocation(
          com.google.protobuf.DescriptorProtos.SourceCodeInfo.Location.Builder builderForValue) {
        copyOnWrite();
        instance.addLocation(builderForValue);
        return this;
      }
      /**
       * <pre>
       * A Location identifies a piece of source code in a .proto file which
       * corresponds to a particular definition.  This information is intended
       * to be useful to IDEs, code indexers, documentation generators, and similar
       * tools.
       * For example, say we have a file like:
       *   message Foo {
       *     optional string foo = 1;
       *   }
       * Let's look at just the field definition:
       *   optional string foo = 1;
       *   ^       ^^     ^^  ^  ^^^
       *   a       bc     de  f  ghi
       * We have the following locations:
       *   span   path               represents
       *   [a,i)  [ 4, 0, 2, 0 ]     The whole field definition.
       *   [a,b)  [ 4, 0, 2, 0, 4 ]  The label (optional).
       *   [c,d)  [ 4, 0, 2, 0, 5 ]  The type (string).
       *   [e,f)  [ 4, 0, 2, 0, 1 ]  The name (foo).
       *   [g,h)  [ 4, 0, 2, 0, 3 ]  The number (1).
       * Notes:
       * - A location may refer to a repeated field itself (i.e. not to any
       *   particular index within it).  This is used whenever a set of elements are
       *   logically enclosed in a single code segment.  For example, an entire
       *   extend block (possibly containing multiple extension definitions) will
       *   have an outer location whose path refers to the "extensions" repeated
       *   field without an index.
       * - Multiple locations may have the same path.  This happens when a single
       *   logical declaration is spread out across multiple places.  The most
       *   obvious example is the "extend" block again -- there may be multiple
       *   extend blocks in the same scope, each of which will have the same path.
       * - A location's span is not always a subset of its parent's span.  For
       *   example, the "extendee" of an extension declaration appears at the
       *   beginning of the "extend" block and is shared by all extensions within
       *   the block.
       * - Just because a location's span is a subset of some other location's span
       *   does not mean that it is a descendent.  For example, a "group" defines
       *   both a type and a field in a single declaration.  Thus, the locations
       *   corresponding to the type and field and their components will overlap.
       * - Code which tries to interpret locations should probably be designed to
       *   ignore those that it doesn't understand, as more types of locations could
       *   be recorded in the future.
       * </pre>
       *
       * <code>repeated .google.protobuf.SourceCodeInfo.Location location = 1;</code>
       */
      public Builder addLocation(
          int index, com.google.protobuf.DescriptorProtos.SourceCodeInfo.Location.Builder builderForValue) {
        copyOnWrite();
        instance.addLocation(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       * A Location identifies a piece of source code in a .proto file which
       * corresponds to a particular definition.  This information is intended
       * to be useful to IDEs, code indexers, documentation generators, and similar
       * tools.
       * For example, say we have a file like:
       *   message Foo {
       *     optional string foo = 1;
       *   }
       * Let's look at just the field definition:
       *   optional string foo = 1;
       *   ^       ^^     ^^  ^  ^^^
       *   a       bc     de  f  ghi
       * We have the following locations:
       *   span   path               represents
       *   [a,i)  [ 4, 0, 2, 0 ]     The whole field definition.
       *   [a,b)  [ 4, 0, 2, 0, 4 ]  The label (optional).
       *   [c,d)  [ 4, 0, 2, 0, 5 ]  The type (string).
       *   [e,f)  [ 4, 0, 2, 0, 1 ]  The name (foo).
       *   [g,h)  [ 4, 0, 2, 0, 3 ]  The number (1).
       * Notes:
       * - A location may refer to a repeated field itself (i.e. not to any
       *   particular index within it).  This is used whenever a set of elements are
       *   logically enclosed in a single code segment.  For example, an entire
       *   extend block (possibly containing multiple extension definitions) will
       *   have an outer location whose path refers to the "extensions" repeated
       *   field without an index.
       * - Multiple locations may have the same path.  This happens when a single
       *   logical declaration is spread out across multiple places.  The most
       *   obvious example is the "extend" block again -- there may be multiple
       *   extend blocks in the same scope, each of which will have the same path.
       * - A location's span is not always a subset of its parent's span.  For
       *   example, the "extendee" of an extension declaration appears at the
       *   beginning of the "extend" block and is shared by all extensions within
       *   the block.
       * - Just because a location's span is a subset of some other location's span
       *   does not mean that it is a descendent.  For example, a "group" defines
       *   both a type and a field in a single declaration.  Thus, the locations
       *   corresponding to the type and field and their components will overlap.
       * - Code which tries to interpret locations should probably be designed to
       *   ignore those that it doesn't understand, as more types of locations could
       *   be recorded in the future.
       * </pre>
       *
       * <code>repeated .google.protobuf.SourceCodeInfo.Location location = 1;</code>
       */
      public Builder addAllLocation(
          java.lang.Iterable<? extends com.google.protobuf.DescriptorProtos.SourceCodeInfo.Location> values) {
        copyOnWrite();
        instance.addAllLocation(values);
        return this;
      }
      /**
       * <pre>
       * A Location identifies a piece of source code in a .proto file which
       * corresponds to a particular definition.  This information is intended
       * to be useful to IDEs, code indexers, documentation generators, and similar
       * tools.
       * For example, say we have a file like:
       *   message Foo {
       *     optional string foo = 1;
       *   }
       * Let's look at just the field definition:
       *   optional string foo = 1;
       *   ^       ^^     ^^  ^  ^^^
       *   a       bc     de  f  ghi
       * We have the following locations:
       *   span   path               represents
       *   [a,i)  [ 4, 0, 2, 0 ]     The whole field definition.
       *   [a,b)  [ 4, 0, 2, 0, 4 ]  The label (optional).
       *   [c,d)  [ 4, 0, 2, 0, 5 ]  The type (string).
       *   [e,f)  [ 4, 0, 2, 0, 1 ]  The name (foo).
       *   [g,h)  [ 4, 0, 2, 0, 3 ]  The number (1).
       * Notes:
       * - A location may refer to a repeated field itself (i.e. not to any
       *   particular index within it).  This is used whenever a set of elements are
       *   logically enclosed in a single code segment.  For example, an entire
       *   extend block (possibly containing multiple extension definitions) will
       *   have an outer location whose path refers to the "extensions" repeated
       *   field without an index.
       * - Multiple locations may have the same path.  This happens when a single
       *   logical declaration is spread out across multiple places.  The most
       *   obvious example is the "extend" block again -- there may be multiple
       *   extend blocks in the same scope, each of which will have the same path.
       * - A location's span is not always a subset of its parent's span.  For
       *   example, the "extendee" of an extension declaration appears at the
       *   beginning of the "extend" block and is shared by all extensions within
       *   the block.
       * - Just because a location's span is a subset of some other location's span
       *   does not mean that it is a descendent.  For example, a "group" defines
       *   both a type and a field in a single declaration.  Thus, the locations
       *   corresponding to the type and field and their components will overlap.
       * - Code which tries to interpret locations should probably be designed to
       *   ignore those that it doesn't understand, as more types of locations could
       *   be recorded in the future.
       * </pre>
       *
       * <code>repeated .google.protobuf.SourceCodeInfo.Location location = 1;</code>
       */
      public Builder clearLocation() {
        copyOnWrite();
        instance.clearLocation();
        return this;
      }
      /**
       * <pre>
       * A Location identifies a piece of source code in a .proto file which
       * corresponds to a particular definition.  This information is intended
       * to be useful to IDEs, code indexers, documentation generators, and similar
       * tools.
       * For example, say we have a file like:
       *   message Foo {
       *     optional string foo = 1;
       *   }
       * Let's look at just the field definition:
       *   optional string foo = 1;
       *   ^       ^^     ^^  ^  ^^^
       *   a       bc     de  f  ghi
       * We have the following locations:
       *   span   path               represents
       *   [a,i)  [ 4, 0, 2, 0 ]     The whole field definition.
       *   [a,b)  [ 4, 0, 2, 0, 4 ]  The label (optional).
       *   [c,d)  [ 4, 0, 2, 0, 5 ]  The type (string).
       *   [e,f)  [ 4, 0, 2, 0, 1 ]  The name (foo).
       *   [g,h)  [ 4, 0, 2, 0, 3 ]  The number (1).
       * Notes:
       * - A location may refer to a repeated field itself (i.e. not to any
       *   particular index within it).  This is used whenever a set of elements are
       *   logically enclosed in a single code segment.  For example, an entire
       *   extend block (possibly containing multiple extension definitions) will
       *   have an outer location whose path refers to the "extensions" repeated
       *   field without an index.
       * - Multiple locations may have the same path.  This happens when a single
       *   logical declaration is spread out across multiple places.  The most
       *   obvious example is the "extend" block again -- there may be multiple
       *   extend blocks in the same scope, each of which will have the same path.
       * - A location's span is not always a subset of its parent's span.  For
       *   example, the "extendee" of an extension declaration appears at the
       *   beginning of the "extend" block and is shared by all extensions within
       *   the block.
       * - Just because a location's span is a subset of some other location's span
       *   does not mean that it is a descendent.  For example, a "group" defines
       *   both a type and a field in a single declaration.  Thus, the locations
       *   corresponding to the type and field and their components will overlap.
       * - Code which tries to interpret locations should probably be designed to
       *   ignore those that it doesn't understand, as more types of locations could
       *   be recorded in the future.
       * </pre>
       *
       * <code>repeated .google.protobuf.SourceCodeInfo.Location location = 1;</code>
       */
      public Builder removeLocation(int index) {
        copyOnWrite();
        instance.removeLocation(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:google.protobuf.SourceCodeInfo)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.google.protobuf.DescriptorProtos.SourceCodeInfo();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          location_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.google.protobuf.DescriptorProtos.SourceCodeInfo other = (com.google.protobuf.DescriptorProtos.SourceCodeInfo) arg1;
          location_= visitor.visitList(location_, other.location_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  if (!location_.isModifiable()) {
                    location_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(location_);
                  }
                  location_.add(
                      input.readMessage(com.google.protobuf.DescriptorProtos.SourceCodeInfo.Location.parser(), extensionRegistry));
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.google.protobuf.DescriptorProtos.SourceCodeInfo.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:google.protobuf.SourceCodeInfo)
    private static final com.google.protobuf.DescriptorProtos.SourceCodeInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SourceCodeInfo();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.google.protobuf.DescriptorProtos.SourceCodeInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<SourceCodeInfo> PARSER;

    public static com.google.protobuf.Parser<SourceCodeInfo> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface GeneratedCodeInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.protobuf.GeneratedCodeInfo)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * An Annotation connects some span of text in generated code to an element
     * of its generating .proto file.
     * </pre>
     *
     * <code>repeated .google.protobuf.GeneratedCodeInfo.Annotation annotation = 1;</code>
     */
    java.util.List<com.google.protobuf.DescriptorProtos.GeneratedCodeInfo.Annotation>
        getAnnotationList();
    /**
     * <pre>
     * An Annotation connects some span of text in generated code to an element
     * of its generating .proto file.
     * </pre>
     *
     * <code>repeated .google.protobuf.GeneratedCodeInfo.Annotation annotation = 1;</code>
     */
    com.google.protobuf.DescriptorProtos.GeneratedCodeInfo.Annotation getAnnotation(int index);
    /**
     * <pre>
     * An Annotation connects some span of text in generated code to an element
     * of its generating .proto file.
     * </pre>
     *
     * <code>repeated .google.protobuf.GeneratedCodeInfo.Annotation annotation = 1;</code>
     */
    int getAnnotationCount();
  }
  /**
   * <pre>
   * Describes the relationship between generated code and its original source
   * file. A GeneratedCodeInfo message is associated with only one generated
   * source file, but may contain references to different source .proto files.
   * </pre>
   *
   * Protobuf type {@code google.protobuf.GeneratedCodeInfo}
   */
  public  static final class GeneratedCodeInfo extends
      com.google.protobuf.GeneratedMessageLite<
          GeneratedCodeInfo, GeneratedCodeInfo.Builder> implements
      // @@protoc_insertion_point(message_implements:google.protobuf.GeneratedCodeInfo)
      GeneratedCodeInfoOrBuilder {
    private GeneratedCodeInfo() {
      annotation_ = emptyProtobufList();
    }
    public interface AnnotationOrBuilder extends
        // @@protoc_insertion_point(interface_extends:google.protobuf.GeneratedCodeInfo.Annotation)
        com.google.protobuf.MessageLiteOrBuilder {

      /**
       * <pre>
       * Identifies the element in the original source .proto file. This field
       * is formatted the same as SourceCodeInfo.Location.path.
       * </pre>
       *
       * <code>repeated int32 path = 1 [packed = true];</code>
       */
      java.util.List<java.lang.Integer> getPathList();
      /**
       * <pre>
       * Identifies the element in the original source .proto file. This field
       * is formatted the same as SourceCodeInfo.Location.path.
       * </pre>
       *
       * <code>repeated int32 path = 1 [packed = true];</code>
       */
      int getPathCount();
      /**
       * <pre>
       * Identifies the element in the original source .proto file. This field
       * is formatted the same as SourceCodeInfo.Location.path.
       * </pre>
       *
       * <code>repeated int32 path = 1 [packed = true];</code>
       */
      int getPath(int index);

      /**
       * <pre>
       * Identifies the filesystem path to the original source .proto.
       * </pre>
       *
       * <code>optional string source_file = 2;</code>
       */
      boolean hasSourceFile();
      /**
       * <pre>
       * Identifies the filesystem path to the original source .proto.
       * </pre>
       *
       * <code>optional string source_file = 2;</code>
       */
      java.lang.String getSourceFile();
      /**
       * <pre>
       * Identifies the filesystem path to the original source .proto.
       * </pre>
       *
       * <code>optional string source_file = 2;</code>
       */
      com.google.protobuf.ByteString
          getSourceFileBytes();

      /**
       * <pre>
       * Identifies the starting offset in bytes in the generated code
       * that relates to the identified object.
       * </pre>
       *
       * <code>optional int32 begin = 3;</code>
       */
      boolean hasBegin();
      /**
       * <pre>
       * Identifies the starting offset in bytes in the generated code
       * that relates to the identified object.
       * </pre>
       *
       * <code>optional int32 begin = 3;</code>
       */
      int getBegin();

      /**
       * <pre>
       * Identifies the ending offset in bytes in the generated code that
       * relates to the identified offset. The end offset should be one past
       * the last relevant byte (so the length of the text = end - begin).
       * </pre>
       *
       * <code>optional int32 end = 4;</code>
       */
      boolean hasEnd();
      /**
       * <pre>
       * Identifies the ending offset in bytes in the generated code that
       * relates to the identified offset. The end offset should be one past
       * the last relevant byte (so the length of the text = end - begin).
       * </pre>
       *
       * <code>optional int32 end = 4;</code>
       */
      int getEnd();
    }
    /**
     * Protobuf type {@code google.protobuf.GeneratedCodeInfo.Annotation}
     */
    public  static final class Annotation extends
        com.google.protobuf.GeneratedMessageLite<
            Annotation, Annotation.Builder> implements
        // @@protoc_insertion_point(message_implements:google.protobuf.GeneratedCodeInfo.Annotation)
        AnnotationOrBuilder {
      private Annotation() {
        path_ = emptyIntList();
        sourceFile_ = "";
      }
      private int bitField0_;
      public static final int PATH_FIELD_NUMBER = 1;
      private com.google.protobuf.Internal.IntList path_;
      /**
       * <pre>
       * Identifies the element in the original source .proto file. This field
       * is formatted the same as SourceCodeInfo.Location.path.
       * </pre>
       *
       * <code>repeated int32 path = 1 [packed = true];</code>
       */
      public java.util.List<java.lang.Integer>
          getPathList() {
        return path_;
      }
      /**
       * <pre>
       * Identifies the element in the original source .proto file. This field
       * is formatted the same as SourceCodeInfo.Location.path.
       * </pre>
       *
       * <code>repeated int32 path = 1 [packed = true];</code>
       */
      public int getPathCount() {
        return path_.size();
      }
      /**
       * <pre>
       * Identifies the element in the original source .proto file. This field
       * is formatted the same as SourceCodeInfo.Location.path.
       * </pre>
       *
       * <code>repeated int32 path = 1 [packed = true];</code>
       */
      public int getPath(int index) {
        return path_.getInt(index);
      }
      private int pathMemoizedSerializedSize = -1;
      private void ensurePathIsMutable() {
        if (!path_.isModifiable()) {
          path_ =
              com.google.protobuf.GeneratedMessageLite.mutableCopy(path_);
         }
      }
      /**
       * <pre>
       * Identifies the element in the original source .proto file. This field
       * is formatted the same as SourceCodeInfo.Location.path.
       * </pre>
       *
       * <code>repeated int32 path = 1 [packed = true];</code>
       */
      private void setPath(
          int index, int value) {
        ensurePathIsMutable();
        path_.setInt(index, value);
      }
      /**
       * <pre>
       * Identifies the element in the original source .proto file. This field
       * is formatted the same as SourceCodeInfo.Location.path.
       * </pre>
       *
       * <code>repeated int32 path = 1 [packed = true];</code>
       */
      private void addPath(int value) {
        ensurePathIsMutable();
        path_.addInt(value);
      }
      /**
       * <pre>
       * Identifies the element in the original source .proto file. This field
       * is formatted the same as SourceCodeInfo.Location.path.
       * </pre>
       *
       * <code>repeated int32 path = 1 [packed = true];</code>
       */
      private void addAllPath(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensurePathIsMutable();
        com.google.protobuf.AbstractMessageLite.addAll(
            values, path_);
      }
      /**
       * <pre>
       * Identifies the element in the original source .proto file. This field
       * is formatted the same as SourceCodeInfo.Location.path.
       * </pre>
       *
       * <code>repeated int32 path = 1 [packed = true];</code>
       */
      private void clearPath() {
        path_ = emptyIntList();
      }

      public static final int SOURCE_FILE_FIELD_NUMBER = 2;
      private java.lang.String sourceFile_;
      /**
       * <pre>
       * Identifies the filesystem path to the original source .proto.
       * </pre>
       *
       * <code>optional string source_file = 2;</code>
       */
      public boolean hasSourceFile() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * Identifies the filesystem path to the original source .proto.
       * </pre>
       *
       * <code>optional string source_file = 2;</code>
       */
      public java.lang.String getSourceFile() {
        return sourceFile_;
      }
      /**
       * <pre>
       * Identifies the filesystem path to the original source .proto.
       * </pre>
       *
       * <code>optional string source_file = 2;</code>
       */
      public com.google.protobuf.ByteString
          getSourceFileBytes() {
        return com.google.protobuf.ByteString.copyFromUtf8(sourceFile_);
      }
      /**
       * <pre>
       * Identifies the filesystem path to the original source .proto.
       * </pre>
       *
       * <code>optional string source_file = 2;</code>
       */
      private void setSourceFile(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        sourceFile_ = value;
      }
      /**
       * <pre>
       * Identifies the filesystem path to the original source .proto.
       * </pre>
       *
       * <code>optional string source_file = 2;</code>
       */
      private void clearSourceFile() {
        bitField0_ = (bitField0_ & ~0x00000001);
        sourceFile_ = getDefaultInstance().getSourceFile();
      }
      /**
       * <pre>
       * Identifies the filesystem path to the original source .proto.
       * </pre>
       *
       * <code>optional string source_file = 2;</code>
       */
      private void setSourceFileBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        sourceFile_ = value.toStringUtf8();
      }

      public static final int BEGIN_FIELD_NUMBER = 3;
      private int begin_;
      /**
       * <pre>
       * Identifies the starting offset in bytes in the generated code
       * that relates to the identified object.
       * </pre>
       *
       * <code>optional int32 begin = 3;</code>
       */
      public boolean hasBegin() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * Identifies the starting offset in bytes in the generated code
       * that relates to the identified object.
       * </pre>
       *
       * <code>optional int32 begin = 3;</code>
       */
      public int getBegin() {
        return begin_;
      }
      /**
       * <pre>
       * Identifies the starting offset in bytes in the generated code
       * that relates to the identified object.
       * </pre>
       *
       * <code>optional int32 begin = 3;</code>
       */
      private void setBegin(int value) {
        bitField0_ |= 0x00000002;
        begin_ = value;
      }
      /**
       * <pre>
       * Identifies the starting offset in bytes in the generated code
       * that relates to the identified object.
       * </pre>
       *
       * <code>optional int32 begin = 3;</code>
       */
      private void clearBegin() {
        bitField0_ = (bitField0_ & ~0x00000002);
        begin_ = 0;
      }

      public static final int END_FIELD_NUMBER = 4;
      private int end_;
      /**
       * <pre>
       * Identifies the ending offset in bytes in the generated code that
       * relates to the identified offset. The end offset should be one past
       * the last relevant byte (so the length of the text = end - begin).
       * </pre>
       *
       * <code>optional int32 end = 4;</code>
       */
      public boolean hasEnd() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       * Identifies the ending offset in bytes in the generated code that
       * relates to the identified offset. The end offset should be one past
       * the last relevant byte (so the length of the text = end - begin).
       * </pre>
       *
       * <code>optional int32 end = 4;</code>
       */
      public int getEnd() {
        return end_;
      }
      /**
       * <pre>
       * Identifies the ending offset in bytes in the generated code that
       * relates to the identified offset. The end offset should be one past
       * the last relevant byte (so the length of the text = end - begin).
       * </pre>
       *
       * <code>optional int32 end = 4;</code>
       */
      private void setEnd(int value) {
        bitField0_ |= 0x00000004;
        end_ = value;
      }
      /**
       * <pre>
       * Identifies the ending offset in bytes in the generated code that
       * relates to the identified offset. The end offset should be one past
       * the last relevant byte (so the length of the text = end - begin).
       * </pre>
       *
       * <code>optional int32 end = 4;</code>
       */
      private void clearEnd() {
        bitField0_ = (bitField0_ & ~0x00000004);
        end_ = 0;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (getPathList().size() > 0) {
          output.writeUInt32NoTag(10);
          output.writeUInt32NoTag(pathMemoizedSerializedSize);
        }
        for (int i = 0; i < path_.size(); i++) {
          output.writeInt32NoTag(path_.getInt(i));
        }
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeString(2, getSourceFile());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeInt32(3, begin_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeInt32(4, end_);
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        {
          int dataSize = 0;
          for (int i = 0; i < path_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(path_.getInt(i));
          }
          size += dataSize;
          if (!getPathList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          pathMemoizedSerializedSize = dataSize;
        }
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(2, getSourceFile());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, begin_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(4, end_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      public static com.google.protobuf.DescriptorProtos.GeneratedCodeInfo.Annotation parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static com.google.protobuf.DescriptorProtos.GeneratedCodeInfo.Annotation parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static com.google.protobuf.DescriptorProtos.GeneratedCodeInfo.Annotation parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static com.google.protobuf.DescriptorProtos.GeneratedCodeInfo.Annotation parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static com.google.protobuf.DescriptorProtos.GeneratedCodeInfo.Annotation parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static com.google.protobuf.DescriptorProtos.GeneratedCodeInfo.Annotation parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static com.google.protobuf.DescriptorProtos.GeneratedCodeInfo.Annotation parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input);
      }
      public static com.google.protobuf.DescriptorProtos.GeneratedCodeInfo.Annotation parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static com.google.protobuf.DescriptorProtos.GeneratedCodeInfo.Annotation parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static com.google.protobuf.DescriptorProtos.GeneratedCodeInfo.Annotation parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }

      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.google.protobuf.DescriptorProtos.GeneratedCodeInfo.Annotation prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      /**
       * Protobuf type {@code google.protobuf.GeneratedCodeInfo.Annotation}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            com.google.protobuf.DescriptorProtos.GeneratedCodeInfo.Annotation, Builder> implements
          // @@protoc_insertion_point(builder_implements:google.protobuf.GeneratedCodeInfo.Annotation)
          com.google.protobuf.DescriptorProtos.GeneratedCodeInfo.AnnotationOrBuilder {
        // Construct using com.google.protobuf.DescriptorProtos.GeneratedCodeInfo.Annotation.newBuilder()
        private Builder() {
          super(DEFAULT_INSTANCE);
        }


        /**
         * <pre>
         * Identifies the element in the original source .proto file. This field
         * is formatted the same as SourceCodeInfo.Location.path.
         * </pre>
         *
         * <code>repeated int32 path = 1 [packed = true];</code>
         */
        public java.util.List<java.lang.Integer>
            getPathList() {
          return java.util.Collections.unmodifiableList(
              instance.getPathList());
        }
        /**
         * <pre>
         * Identifies the element in the original source .proto file. This field
         * is formatted the same as SourceCodeInfo.Location.path.
         * </pre>
         *
         * <code>repeated int32 path = 1 [packed = true];</code>
         */
        public int getPathCount() {
          return instance.getPathCount();
        }
        /**
         * <pre>
         * Identifies the element in the original source .proto file. This field
         * is formatted the same as SourceCodeInfo.Location.path.
         * </pre>
         *
         * <code>repeated int32 path = 1 [packed = true];</code>
         */
        public int getPath(int index) {
          return instance.getPath(index);
        }
        /**
         * <pre>
         * Identifies the element in the original source .proto file. This field
         * is formatted the same as SourceCodeInfo.Location.path.
         * </pre>
         *
         * <code>repeated int32 path = 1 [packed = true];</code>
         */
        public Builder setPath(
            int index, int value) {
          copyOnWrite();
          instance.setPath(index, value);
          return this;
        }
        /**
         * <pre>
         * Identifies the element in the original source .proto file. This field
         * is formatted the same as SourceCodeInfo.Location.path.
         * </pre>
         *
         * <code>repeated int32 path = 1 [packed = true];</code>
         */
        public Builder addPath(int value) {
          copyOnWrite();
          instance.addPath(value);
          return this;
        }
        /**
         * <pre>
         * Identifies the element in the original source .proto file. This field
         * is formatted the same as SourceCodeInfo.Location.path.
         * </pre>
         *
         * <code>repeated int32 path = 1 [packed = true];</code>
         */
        public Builder addAllPath(
            java.lang.Iterable<? extends java.lang.Integer> values) {
          copyOnWrite();
          instance.addAllPath(values);
          return this;
        }
        /**
         * <pre>
         * Identifies the element in the original source .proto file. This field
         * is formatted the same as SourceCodeInfo.Location.path.
         * </pre>
         *
         * <code>repeated int32 path = 1 [packed = true];</code>
         */
        public Builder clearPath() {
          copyOnWrite();
          instance.clearPath();
          return this;
        }

        /**
         * <pre>
         * Identifies the filesystem path to the original source .proto.
         * </pre>
         *
         * <code>optional string source_file = 2;</code>
         */
        public boolean hasSourceFile() {
          return instance.hasSourceFile();
        }
        /**
         * <pre>
         * Identifies the filesystem path to the original source .proto.
         * </pre>
         *
         * <code>optional string source_file = 2;</code>
         */
        public java.lang.String getSourceFile() {
          return instance.getSourceFile();
        }
        /**
         * <pre>
         * Identifies the filesystem path to the original source .proto.
         * </pre>
         *
         * <code>optional string source_file = 2;</code>
         */
        public com.google.protobuf.ByteString
            getSourceFileBytes() {
          return instance.getSourceFileBytes();
        }
        /**
         * <pre>
         * Identifies the filesystem path to the original source .proto.
         * </pre>
         *
         * <code>optional string source_file = 2;</code>
         */
        public Builder setSourceFile(
            java.lang.String value) {
          copyOnWrite();
          instance.setSourceFile(value);
          return this;
        }
        /**
         * <pre>
         * Identifies the filesystem path to the original source .proto.
         * </pre>
         *
         * <code>optional string source_file = 2;</code>
         */
        public Builder clearSourceFile() {
          copyOnWrite();
          instance.clearSourceFile();
          return this;
        }
        /**
         * <pre>
         * Identifies the filesystem path to the original source .proto.
         * </pre>
         *
         * <code>optional string source_file = 2;</code>
         */
        public Builder setSourceFileBytes(
            com.google.protobuf.ByteString value) {
          copyOnWrite();
          instance.setSourceFileBytes(value);
          return this;
        }

        /**
         * <pre>
         * Identifies the starting offset in bytes in the generated code
         * that relates to the identified object.
         * </pre>
         *
         * <code>optional int32 begin = 3;</code>
         */
        public boolean hasBegin() {
          return instance.hasBegin();
        }
        /**
         * <pre>
         * Identifies the starting offset in bytes in the generated code
         * that relates to the identified object.
         * </pre>
         *
         * <code>optional int32 begin = 3;</code>
         */
        public int getBegin() {
          return instance.getBegin();
        }
        /**
         * <pre>
         * Identifies the starting offset in bytes in the generated code
         * that relates to the identified object.
         * </pre>
         *
         * <code>optional int32 begin = 3;</code>
         */
        public Builder setBegin(int value) {
          copyOnWrite();
          instance.setBegin(value);
          return this;
        }
        /**
         * <pre>
         * Identifies the starting offset in bytes in the generated code
         * that relates to the identified object.
         * </pre>
         *
         * <code>optional int32 begin = 3;</code>
         */
        public Builder clearBegin() {
          copyOnWrite();
          instance.clearBegin();
          return this;
        }

        /**
         * <pre>
         * Identifies the ending offset in bytes in the generated code that
         * relates to the identified offset. The end offset should be one past
         * the last relevant byte (so the length of the text = end - begin).
         * </pre>
         *
         * <code>optional int32 end = 4;</code>
         */
        public boolean hasEnd() {
          return instance.hasEnd();
        }
        /**
         * <pre>
         * Identifies the ending offset in bytes in the generated code that
         * relates to the identified offset. The end offset should be one past
         * the last relevant byte (so the length of the text = end - begin).
         * </pre>
         *
         * <code>optional int32 end = 4;</code>
         */
        public int getEnd() {
          return instance.getEnd();
        }
        /**
         * <pre>
         * Identifies the ending offset in bytes in the generated code that
         * relates to the identified offset. The end offset should be one past
         * the last relevant byte (so the length of the text = end - begin).
         * </pre>
         *
         * <code>optional int32 end = 4;</code>
         */
        public Builder setEnd(int value) {
          copyOnWrite();
          instance.setEnd(value);
          return this;
        }
        /**
         * <pre>
         * Identifies the ending offset in bytes in the generated code that
         * relates to the identified offset. The end offset should be one past
         * the last relevant byte (so the length of the text = end - begin).
         * </pre>
         *
         * <code>optional int32 end = 4;</code>
         */
        public Builder clearEnd() {
          copyOnWrite();
          instance.clearEnd();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:google.protobuf.GeneratedCodeInfo.Annotation)
      }
      protected final Object dynamicMethod(
          com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
          Object arg0, Object arg1) {
        switch (method) {
          case NEW_MUTABLE_INSTANCE: {
            return new com.google.protobuf.DescriptorProtos.GeneratedCodeInfo.Annotation();
          }
          case IS_INITIALIZED: {
            return DEFAULT_INSTANCE;
          }
          case MAKE_IMMUTABLE: {
            path_.makeImmutable();
            return null;
          }
          case NEW_BUILDER: {
            return new Builder();
          }
          case VISIT: {
            Visitor visitor = (Visitor) arg0;
            com.google.protobuf.DescriptorProtos.GeneratedCodeInfo.Annotation other = (com.google.protobuf.DescriptorProtos.GeneratedCodeInfo.Annotation) arg1;
            path_= visitor.visitIntList(path_, other.path_);
            sourceFile_ = visitor.visitString(
                hasSourceFile(), sourceFile_,
                other.hasSourceFile(), other.sourceFile_);
            begin_ = visitor.visitInt(
                hasBegin(), begin_,
                other.hasBegin(), other.begin_);
            end_ = visitor.visitInt(
                hasEnd(), end_,
                other.hasEnd(), other.end_);
            if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                .INSTANCE) {
              bitField0_ |= other.bitField0_;
            }
            return this;
          }
          case MERGE_FROM_STREAM: {
            com.google.protobuf.CodedInputStream input =
                (com.google.protobuf.CodedInputStream) arg0;
            com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                (com.google.protobuf.ExtensionRegistryLite) arg1;
            try {
              boolean done = false;
              while (!done) {
                int tag = input.readTag();
                switch (tag) {
                  case 0:
                    done = true;
                    break;
                  default: {
                    if (!parseUnknownField(tag, input)) {
                      done = true;
                    }
                    break;
                  }
                  case 8: {
                    if (!path_.isModifiable()) {
                      path_ =
                          com.google.protobuf.GeneratedMessageLite.mutableCopy(path_);
                    }
                    path_.addInt(input.readInt32());
                    break;
                  }
                  case 10: {
                    int length = input.readRawVarint32();
                    int limit = input.pushLimit(length);
                    if (!path_.isModifiable() && input.getBytesUntilLimit() > 0) {
                      path_ =
                          com.google.protobuf.GeneratedMessageLite.mutableCopy(path_);
                    }
                    while (input.getBytesUntilLimit() > 0) {
                      path_.addInt(input.readInt32());
                    }
                    input.popLimit(limit);
                    break;
                  }
                  case 18: {
                    String s = input.readString();
                    bitField0_ |= 0x00000001;
                    sourceFile_ = s;
                    break;
                  }
                  case 24: {
                    bitField0_ |= 0x00000002;
                    begin_ = input.readInt32();
                    break;
                  }
                  case 32: {
                    bitField0_ |= 0x00000004;
                    end_ = input.readInt32();
                    break;
                  }
                }
              }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw new RuntimeException(e.setUnfinishedMessage(this));
            } catch (java.io.IOException e) {
              throw new RuntimeException(
                  new com.google.protobuf.InvalidProtocolBufferException(
                      e.getMessage()).setUnfinishedMessage(this));
            } finally {
            }
          }
          case GET_DEFAULT_INSTANCE: {
            return DEFAULT_INSTANCE;
          }
          case GET_PARSER: {
            if (PARSER == null) {    synchronized (com.google.protobuf.DescriptorProtos.GeneratedCodeInfo.Annotation.class) {
                if (PARSER == null) {
                  PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                }
              }
            }
            return PARSER;
          }
        }
        throw new UnsupportedOperationException();
      }


      // @@protoc_insertion_point(class_scope:google.protobuf.GeneratedCodeInfo.Annotation)
      private static final com.google.protobuf.DescriptorProtos.GeneratedCodeInfo.Annotation DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new Annotation();
        DEFAULT_INSTANCE.makeImmutable();
      }

      public static com.google.protobuf.DescriptorProtos.GeneratedCodeInfo.Annotation getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static volatile com.google.protobuf.Parser<Annotation> PARSER;

      public static com.google.protobuf.Parser<Annotation> parser() {
        return DEFAULT_INSTANCE.getParserForType();
      }
    }

    public static final int ANNOTATION_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.ProtobufList<com.google.protobuf.DescriptorProtos.GeneratedCodeInfo.Annotation> annotation_;
    /**
     * <pre>
     * An Annotation connects some span of text in generated code to an element
     * of its generating .proto file.
     * </pre>
     *
     * <code>repeated .google.protobuf.GeneratedCodeInfo.Annotation annotation = 1;</code>
     */
    public java.util.List<com.google.protobuf.DescriptorProtos.GeneratedCodeInfo.Annotation> getAnnotationList() {
      return annotation_;
    }
    /**
     * <pre>
     * An Annotation connects some span of text in generated code to an element
     * of its generating .proto file.
     * </pre>
     *
     * <code>repeated .google.protobuf.GeneratedCodeInfo.Annotation annotation = 1;</code>
     */
    public java.util.List<? extends com.google.protobuf.DescriptorProtos.GeneratedCodeInfo.AnnotationOrBuilder>
        getAnnotationOrBuilderList() {
      return annotation_;
    }
    /**
     * <pre>
     * An Annotation connects some span of text in generated code to an element
     * of its generating .proto file.
     * </pre>
     *
     * <code>repeated .google.protobuf.GeneratedCodeInfo.Annotation annotation = 1;</code>
     */
    public int getAnnotationCount() {
      return annotation_.size();
    }
    /**
     * <pre>
     * An Annotation connects some span of text in generated code to an element
     * of its generating .proto file.
     * </pre>
     *
     * <code>repeated .google.protobuf.GeneratedCodeInfo.Annotation annotation = 1;</code>
     */
    public com.google.protobuf.DescriptorProtos.GeneratedCodeInfo.Annotation getAnnotation(int index) {
      return annotation_.get(index);
    }
    /**
     * <pre>
     * An Annotation connects some span of text in generated code to an element
     * of its generating .proto file.
     * </pre>
     *
     * <code>repeated .google.protobuf.GeneratedCodeInfo.Annotation annotation = 1;</code>
     */
    public com.google.protobuf.DescriptorProtos.GeneratedCodeInfo.AnnotationOrBuilder getAnnotationOrBuilder(
        int index) {
      return annotation_.get(index);
    }
    private void ensureAnnotationIsMutable() {
      if (!annotation_.isModifiable()) {
        annotation_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(annotation_);
       }
    }

    /**
     * <pre>
     * An Annotation connects some span of text in generated code to an element
     * of its generating .proto file.
     * </pre>
     *
     * <code>repeated .google.protobuf.GeneratedCodeInfo.Annotation annotation = 1;</code>
     */
    private void setAnnotation(
        int index, com.google.protobuf.DescriptorProtos.GeneratedCodeInfo.Annotation value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureAnnotationIsMutable();
      annotation_.set(index, value);
    }
    /**
     * <pre>
     * An Annotation connects some span of text in generated code to an element
     * of its generating .proto file.
     * </pre>
     *
     * <code>repeated .google.protobuf.GeneratedCodeInfo.Annotation annotation = 1;</code>
     */
    private void setAnnotation(
        int index, com.google.protobuf.DescriptorProtos.GeneratedCodeInfo.Annotation.Builder builderForValue) {
      ensureAnnotationIsMutable();
      annotation_.set(index, builderForValue.build());
    }
    /**
     * <pre>
     * An Annotation connects some span of text in generated code to an element
     * of its generating .proto file.
     * </pre>
     *
     * <code>repeated .google.protobuf.GeneratedCodeInfo.Annotation annotation = 1;</code>
     */
    private void addAnnotation(com.google.protobuf.DescriptorProtos.GeneratedCodeInfo.Annotation value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureAnnotationIsMutable();
      annotation_.add(value);
    }
    /**
     * <pre>
     * An Annotation connects some span of text in generated code to an element
     * of its generating .proto file.
     * </pre>
     *
     * <code>repeated .google.protobuf.GeneratedCodeInfo.Annotation annotation = 1;</code>
     */
    private void addAnnotation(
        int index, com.google.protobuf.DescriptorProtos.GeneratedCodeInfo.Annotation value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureAnnotationIsMutable();
      annotation_.add(index, value);
    }
    /**
     * <pre>
     * An Annotation connects some span of text in generated code to an element
     * of its generating .proto file.
     * </pre>
     *
     * <code>repeated .google.protobuf.GeneratedCodeInfo.Annotation annotation = 1;</code>
     */
    private void addAnnotation(
        com.google.protobuf.DescriptorProtos.GeneratedCodeInfo.Annotation.Builder builderForValue) {
      ensureAnnotationIsMutable();
      annotation_.add(builderForValue.build());
    }
    /**
     * <pre>
     * An Annotation connects some span of text in generated code to an element
     * of its generating .proto file.
     * </pre>
     *
     * <code>repeated .google.protobuf.GeneratedCodeInfo.Annotation annotation = 1;</code>
     */
    private void addAnnotation(
        int index, com.google.protobuf.DescriptorProtos.GeneratedCodeInfo.Annotation.Builder builderForValue) {
      ensureAnnotationIsMutable();
      annotation_.add(index, builderForValue.build());
    }
    /**
     * <pre>
     * An Annotation connects some span of text in generated code to an element
     * of its generating .proto file.
     * </pre>
     *
     * <code>repeated .google.protobuf.GeneratedCodeInfo.Annotation annotation = 1;</code>
     */
    private void addAllAnnotation(
        java.lang.Iterable<? extends com.google.protobuf.DescriptorProtos.GeneratedCodeInfo.Annotation> values) {
      ensureAnnotationIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, annotation_);
    }
    /**
     * <pre>
     * An Annotation connects some span of text in generated code to an element
     * of its generating .proto file.
     * </pre>
     *
     * <code>repeated .google.protobuf.GeneratedCodeInfo.Annotation annotation = 1;</code>
     */
    private void clearAnnotation() {
      annotation_ = emptyProtobufList();
    }
    /**
     * <pre>
     * An Annotation connects some span of text in generated code to an element
     * of its generating .proto file.
     * </pre>
     *
     * <code>repeated .google.protobuf.GeneratedCodeInfo.Annotation annotation = 1;</code>
     */
    private void removeAnnotation(int index) {
      ensureAnnotationIsMutable();
      annotation_.remove(index);
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < annotation_.size(); i++) {
        output.writeMessage(1, annotation_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < annotation_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, annotation_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.google.protobuf.DescriptorProtos.GeneratedCodeInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.google.protobuf.DescriptorProtos.GeneratedCodeInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.google.protobuf.DescriptorProtos.GeneratedCodeInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.google.protobuf.DescriptorProtos.GeneratedCodeInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.google.protobuf.DescriptorProtos.GeneratedCodeInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.google.protobuf.DescriptorProtos.GeneratedCodeInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.google.protobuf.DescriptorProtos.GeneratedCodeInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.google.protobuf.DescriptorProtos.GeneratedCodeInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.google.protobuf.DescriptorProtos.GeneratedCodeInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.google.protobuf.DescriptorProtos.GeneratedCodeInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.protobuf.DescriptorProtos.GeneratedCodeInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * Describes the relationship between generated code and its original source
     * file. A GeneratedCodeInfo message is associated with only one generated
     * source file, but may contain references to different source .proto files.
     * </pre>
     *
     * Protobuf type {@code google.protobuf.GeneratedCodeInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.google.protobuf.DescriptorProtos.GeneratedCodeInfo, Builder> implements
        // @@protoc_insertion_point(builder_implements:google.protobuf.GeneratedCodeInfo)
        com.google.protobuf.DescriptorProtos.GeneratedCodeInfoOrBuilder {
      // Construct using com.google.protobuf.DescriptorProtos.GeneratedCodeInfo.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * An Annotation connects some span of text in generated code to an element
       * of its generating .proto file.
       * </pre>
       *
       * <code>repeated .google.protobuf.GeneratedCodeInfo.Annotation annotation = 1;</code>
       */
      public java.util.List<com.google.protobuf.DescriptorProtos.GeneratedCodeInfo.Annotation> getAnnotationList() {
        return java.util.Collections.unmodifiableList(
            instance.getAnnotationList());
      }
      /**
       * <pre>
       * An Annotation connects some span of text in generated code to an element
       * of its generating .proto file.
       * </pre>
       *
       * <code>repeated .google.protobuf.GeneratedCodeInfo.Annotation annotation = 1;</code>
       */
      public int getAnnotationCount() {
        return instance.getAnnotationCount();
      }/**
       * <pre>
       * An Annotation connects some span of text in generated code to an element
       * of its generating .proto file.
       * </pre>
       *
       * <code>repeated .google.protobuf.GeneratedCodeInfo.Annotation annotation = 1;</code>
       */
      public com.google.protobuf.DescriptorProtos.GeneratedCodeInfo.Annotation getAnnotation(int index) {
        return instance.getAnnotation(index);
      }
      /**
       * <pre>
       * An Annotation connects some span of text in generated code to an element
       * of its generating .proto file.
       * </pre>
       *
       * <code>repeated .google.protobuf.GeneratedCodeInfo.Annotation annotation = 1;</code>
       */
      public Builder setAnnotation(
          int index, com.google.protobuf.DescriptorProtos.GeneratedCodeInfo.Annotation value) {
        copyOnWrite();
        instance.setAnnotation(index, value);
        return this;
      }
      /**
       * <pre>
       * An Annotation connects some span of text in generated code to an element
       * of its generating .proto file.
       * </pre>
       *
       * <code>repeated .google.protobuf.GeneratedCodeInfo.Annotation annotation = 1;</code>
       */
      public Builder setAnnotation(
          int index, com.google.protobuf.DescriptorProtos.GeneratedCodeInfo.Annotation.Builder builderForValue) {
        copyOnWrite();
        instance.setAnnotation(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       * An Annotation connects some span of text in generated code to an element
       * of its generating .proto file.
       * </pre>
       *
       * <code>repeated .google.protobuf.GeneratedCodeInfo.Annotation annotation = 1;</code>
       */
      public Builder addAnnotation(com.google.protobuf.DescriptorProtos.GeneratedCodeInfo.Annotation value) {
        copyOnWrite();
        instance.addAnnotation(value);
        return this;
      }
      /**
       * <pre>
       * An Annotation connects some span of text in generated code to an element
       * of its generating .proto file.
       * </pre>
       *
       * <code>repeated .google.protobuf.GeneratedCodeInfo.Annotation annotation = 1;</code>
       */
      public Builder addAnnotation(
          int index, com.google.protobuf.DescriptorProtos.GeneratedCodeInfo.Annotation value) {
        copyOnWrite();
        instance.addAnnotation(index, value);
        return this;
      }
      /**
       * <pre>
       * An Annotation connects some span of text in generated code to an element
       * of its generating .proto file.
       * </pre>
       *
       * <code>repeated .google.protobuf.GeneratedCodeInfo.Annotation annotation = 1;</code>
       */
      public Builder addAnnotation(
          com.google.protobuf.DescriptorProtos.GeneratedCodeInfo.Annotation.Builder builderForValue) {
        copyOnWrite();
        instance.addAnnotation(builderForValue);
        return this;
      }
      /**
       * <pre>
       * An Annotation connects some span of text in generated code to an element
       * of its generating .proto file.
       * </pre>
       *
       * <code>repeated .google.protobuf.GeneratedCodeInfo.Annotation annotation = 1;</code>
       */
      public Builder addAnnotation(
          int index, com.google.protobuf.DescriptorProtos.GeneratedCodeInfo.Annotation.Builder builderForValue) {
        copyOnWrite();
        instance.addAnnotation(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       * An Annotation connects some span of text in generated code to an element
       * of its generating .proto file.
       * </pre>
       *
       * <code>repeated .google.protobuf.GeneratedCodeInfo.Annotation annotation = 1;</code>
       */
      public Builder addAllAnnotation(
          java.lang.Iterable<? extends com.google.protobuf.DescriptorProtos.GeneratedCodeInfo.Annotation> values) {
        copyOnWrite();
        instance.addAllAnnotation(values);
        return this;
      }
      /**
       * <pre>
       * An Annotation connects some span of text in generated code to an element
       * of its generating .proto file.
       * </pre>
       *
       * <code>repeated .google.protobuf.GeneratedCodeInfo.Annotation annotation = 1;</code>
       */
      public Builder clearAnnotation() {
        copyOnWrite();
        instance.clearAnnotation();
        return this;
      }
      /**
       * <pre>
       * An Annotation connects some span of text in generated code to an element
       * of its generating .proto file.
       * </pre>
       *
       * <code>repeated .google.protobuf.GeneratedCodeInfo.Annotation annotation = 1;</code>
       */
      public Builder removeAnnotation(int index) {
        copyOnWrite();
        instance.removeAnnotation(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:google.protobuf.GeneratedCodeInfo)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.google.protobuf.DescriptorProtos.GeneratedCodeInfo();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          annotation_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.google.protobuf.DescriptorProtos.GeneratedCodeInfo other = (com.google.protobuf.DescriptorProtos.GeneratedCodeInfo) arg1;
          annotation_= visitor.visitList(annotation_, other.annotation_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  if (!annotation_.isModifiable()) {
                    annotation_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(annotation_);
                  }
                  annotation_.add(
                      input.readMessage(com.google.protobuf.DescriptorProtos.GeneratedCodeInfo.Annotation.parser(), extensionRegistry));
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.google.protobuf.DescriptorProtos.GeneratedCodeInfo.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:google.protobuf.GeneratedCodeInfo)
    private static final com.google.protobuf.DescriptorProtos.GeneratedCodeInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new GeneratedCodeInfo();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.google.protobuf.DescriptorProtos.GeneratedCodeInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<GeneratedCodeInfo> PARSER;

    public static com.google.protobuf.Parser<GeneratedCodeInfo> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
