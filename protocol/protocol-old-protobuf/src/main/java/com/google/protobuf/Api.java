// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/protobuf/api.proto

package com.google.protobuf;

/**
 * <pre>
 * Api is a light-weight descriptor for an API Interface.
 * Interfaces are also described as "protocol buffer services" in some contexts,
 * such as by the "service" keyword in a .proto file, but they are different
 * from API Services, which represent a concrete implementation of an interface
 * as opposed to simply a description of methods and bindings. They are also
 * sometimes simply referred to as "APIs" in other contexts, such as the name of
 * this message itself. See https://cloud.google.com/apis/design/glossary for
 * detailed terminology.
 * </pre>
 *
 * Protobuf type {@code google.protobuf.Api}
 */
public  final class Api extends
    com.google.protobuf.GeneratedMessageLite<
        Api, Api.Builder> implements
    // @@protoc_insertion_point(message_implements:google.protobuf.Api)
    ApiOrBuilder {
  private Api() {
    name_ = "";
    methods_ = emptyProtobufList();
    options_ = emptyProtobufList();
    version_ = "";
    mixins_ = emptyProtobufList();
  }
  private int bitField0_;
  public static final int NAME_FIELD_NUMBER = 1;
  private java.lang.String name_;
  /**
   * <pre>
   * The fully qualified name of this interface, including package name
   * followed by the interface's simple name.
   * </pre>
   *
   * <code>optional string name = 1;</code>
   */
  public java.lang.String getName() {
    return name_;
  }
  /**
   * <pre>
   * The fully qualified name of this interface, including package name
   * followed by the interface's simple name.
   * </pre>
   *
   * <code>optional string name = 1;</code>
   */
  public com.google.protobuf.ByteString
      getNameBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(name_);
  }
  /**
   * <pre>
   * The fully qualified name of this interface, including package name
   * followed by the interface's simple name.
   * </pre>
   *
   * <code>optional string name = 1;</code>
   */
  private void setName(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }

    name_ = value;
  }
  /**
   * <pre>
   * The fully qualified name of this interface, including package name
   * followed by the interface's simple name.
   * </pre>
   *
   * <code>optional string name = 1;</code>
   */
  private void clearName() {

    name_ = getDefaultInstance().getName();
  }
  /**
   * <pre>
   * The fully qualified name of this interface, including package name
   * followed by the interface's simple name.
   * </pre>
   *
   * <code>optional string name = 1;</code>
   */
  private void setNameBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

    name_ = value.toStringUtf8();
  }

  public static final int METHODS_FIELD_NUMBER = 2;
  private com.google.protobuf.Internal.ProtobufList<com.google.protobuf.Method> methods_;
  /**
   * <pre>
   * The methods of this interface, in unspecified order.
   * </pre>
   *
   * <code>repeated .google.protobuf.Method methods = 2;</code>
   */
  public java.util.List<com.google.protobuf.Method> getMethodsList() {
    return methods_;
  }
  /**
   * <pre>
   * The methods of this interface, in unspecified order.
   * </pre>
   *
   * <code>repeated .google.protobuf.Method methods = 2;</code>
   */
  public java.util.List<? extends com.google.protobuf.MethodOrBuilder>
      getMethodsOrBuilderList() {
    return methods_;
  }
  /**
   * <pre>
   * The methods of this interface, in unspecified order.
   * </pre>
   *
   * <code>repeated .google.protobuf.Method methods = 2;</code>
   */
  public int getMethodsCount() {
    return methods_.size();
  }
  /**
   * <pre>
   * The methods of this interface, in unspecified order.
   * </pre>
   *
   * <code>repeated .google.protobuf.Method methods = 2;</code>
   */
  public com.google.protobuf.Method getMethods(int index) {
    return methods_.get(index);
  }
  /**
   * <pre>
   * The methods of this interface, in unspecified order.
   * </pre>
   *
   * <code>repeated .google.protobuf.Method methods = 2;</code>
   */
  public com.google.protobuf.MethodOrBuilder getMethodsOrBuilder(
      int index) {
    return methods_.get(index);
  }
  private void ensureMethodsIsMutable() {
    if (!methods_.isModifiable()) {
      methods_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(methods_);
     }
  }

  /**
   * <pre>
   * The methods of this interface, in unspecified order.
   * </pre>
   *
   * <code>repeated .google.protobuf.Method methods = 2;</code>
   */
  private void setMethods(
      int index, com.google.protobuf.Method value) {
    if (value == null) {
      throw new NullPointerException();
    }
    ensureMethodsIsMutable();
    methods_.set(index, value);
  }
  /**
   * <pre>
   * The methods of this interface, in unspecified order.
   * </pre>
   *
   * <code>repeated .google.protobuf.Method methods = 2;</code>
   */
  private void setMethods(
      int index, com.google.protobuf.Method.Builder builderForValue) {
    ensureMethodsIsMutable();
    methods_.set(index, builderForValue.build());
  }
  /**
   * <pre>
   * The methods of this interface, in unspecified order.
   * </pre>
   *
   * <code>repeated .google.protobuf.Method methods = 2;</code>
   */
  private void addMethods(com.google.protobuf.Method value) {
    if (value == null) {
      throw new NullPointerException();
    }
    ensureMethodsIsMutable();
    methods_.add(value);
  }
  /**
   * <pre>
   * The methods of this interface, in unspecified order.
   * </pre>
   *
   * <code>repeated .google.protobuf.Method methods = 2;</code>
   */
  private void addMethods(
      int index, com.google.protobuf.Method value) {
    if (value == null) {
      throw new NullPointerException();
    }
    ensureMethodsIsMutable();
    methods_.add(index, value);
  }
  /**
   * <pre>
   * The methods of this interface, in unspecified order.
   * </pre>
   *
   * <code>repeated .google.protobuf.Method methods = 2;</code>
   */
  private void addMethods(
      com.google.protobuf.Method.Builder builderForValue) {
    ensureMethodsIsMutable();
    methods_.add(builderForValue.build());
  }
  /**
   * <pre>
   * The methods of this interface, in unspecified order.
   * </pre>
   *
   * <code>repeated .google.protobuf.Method methods = 2;</code>
   */
  private void addMethods(
      int index, com.google.protobuf.Method.Builder builderForValue) {
    ensureMethodsIsMutable();
    methods_.add(index, builderForValue.build());
  }
  /**
   * <pre>
   * The methods of this interface, in unspecified order.
   * </pre>
   *
   * <code>repeated .google.protobuf.Method methods = 2;</code>
   */
  private void addAllMethods(
      java.lang.Iterable<? extends com.google.protobuf.Method> values) {
    ensureMethodsIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, methods_);
  }
  /**
   * <pre>
   * The methods of this interface, in unspecified order.
   * </pre>
   *
   * <code>repeated .google.protobuf.Method methods = 2;</code>
   */
  private void clearMethods() {
    methods_ = emptyProtobufList();
  }
  /**
   * <pre>
   * The methods of this interface, in unspecified order.
   * </pre>
   *
   * <code>repeated .google.protobuf.Method methods = 2;</code>
   */
  private void removeMethods(int index) {
    ensureMethodsIsMutable();
    methods_.remove(index);
  }

  public static final int OPTIONS_FIELD_NUMBER = 3;
  private com.google.protobuf.Internal.ProtobufList<com.google.protobuf.Option> options_;
  /**
   * <pre>
   * Any metadata attached to the interface.
   * </pre>
   *
   * <code>repeated .google.protobuf.Option options = 3;</code>
   */
  public java.util.List<com.google.protobuf.Option> getOptionsList() {
    return options_;
  }
  /**
   * <pre>
   * Any metadata attached to the interface.
   * </pre>
   *
   * <code>repeated .google.protobuf.Option options = 3;</code>
   */
  public java.util.List<? extends com.google.protobuf.OptionOrBuilder>
      getOptionsOrBuilderList() {
    return options_;
  }
  /**
   * <pre>
   * Any metadata attached to the interface.
   * </pre>
   *
   * <code>repeated .google.protobuf.Option options = 3;</code>
   */
  public int getOptionsCount() {
    return options_.size();
  }
  /**
   * <pre>
   * Any metadata attached to the interface.
   * </pre>
   *
   * <code>repeated .google.protobuf.Option options = 3;</code>
   */
  public com.google.protobuf.Option getOptions(int index) {
    return options_.get(index);
  }
  /**
   * <pre>
   * Any metadata attached to the interface.
   * </pre>
   *
   * <code>repeated .google.protobuf.Option options = 3;</code>
   */
  public com.google.protobuf.OptionOrBuilder getOptionsOrBuilder(
      int index) {
    return options_.get(index);
  }
  private void ensureOptionsIsMutable() {
    if (!options_.isModifiable()) {
      options_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(options_);
     }
  }

  /**
   * <pre>
   * Any metadata attached to the interface.
   * </pre>
   *
   * <code>repeated .google.protobuf.Option options = 3;</code>
   */
  private void setOptions(
      int index, com.google.protobuf.Option value) {
    if (value == null) {
      throw new NullPointerException();
    }
    ensureOptionsIsMutable();
    options_.set(index, value);
  }
  /**
   * <pre>
   * Any metadata attached to the interface.
   * </pre>
   *
   * <code>repeated .google.protobuf.Option options = 3;</code>
   */
  private void setOptions(
      int index, com.google.protobuf.Option.Builder builderForValue) {
    ensureOptionsIsMutable();
    options_.set(index, builderForValue.build());
  }
  /**
   * <pre>
   * Any metadata attached to the interface.
   * </pre>
   *
   * <code>repeated .google.protobuf.Option options = 3;</code>
   */
  private void addOptions(com.google.protobuf.Option value) {
    if (value == null) {
      throw new NullPointerException();
    }
    ensureOptionsIsMutable();
    options_.add(value);
  }
  /**
   * <pre>
   * Any metadata attached to the interface.
   * </pre>
   *
   * <code>repeated .google.protobuf.Option options = 3;</code>
   */
  private void addOptions(
      int index, com.google.protobuf.Option value) {
    if (value == null) {
      throw new NullPointerException();
    }
    ensureOptionsIsMutable();
    options_.add(index, value);
  }
  /**
   * <pre>
   * Any metadata attached to the interface.
   * </pre>
   *
   * <code>repeated .google.protobuf.Option options = 3;</code>
   */
  private void addOptions(
      com.google.protobuf.Option.Builder builderForValue) {
    ensureOptionsIsMutable();
    options_.add(builderForValue.build());
  }
  /**
   * <pre>
   * Any metadata attached to the interface.
   * </pre>
   *
   * <code>repeated .google.protobuf.Option options = 3;</code>
   */
  private void addOptions(
      int index, com.google.protobuf.Option.Builder builderForValue) {
    ensureOptionsIsMutable();
    options_.add(index, builderForValue.build());
  }
  /**
   * <pre>
   * Any metadata attached to the interface.
   * </pre>
   *
   * <code>repeated .google.protobuf.Option options = 3;</code>
   */
  private void addAllOptions(
      java.lang.Iterable<? extends com.google.protobuf.Option> values) {
    ensureOptionsIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, options_);
  }
  /**
   * <pre>
   * Any metadata attached to the interface.
   * </pre>
   *
   * <code>repeated .google.protobuf.Option options = 3;</code>
   */
  private void clearOptions() {
    options_ = emptyProtobufList();
  }
  /**
   * <pre>
   * Any metadata attached to the interface.
   * </pre>
   *
   * <code>repeated .google.protobuf.Option options = 3;</code>
   */
  private void removeOptions(int index) {
    ensureOptionsIsMutable();
    options_.remove(index);
  }

  public static final int VERSION_FIELD_NUMBER = 4;
  private java.lang.String version_;
  /**
   * <pre>
   * A version string for this interface. If specified, must have the form
   * `major-version.minor-version`, as in `1.10`. If the minor version is
   * omitted, it defaults to zero. If the entire version field is empty, the
   * major version is derived from the package name, as outlined below. If the
   * field is not empty, the version in the package name will be verified to be
   * consistent with what is provided here.
   * The versioning schema uses [semantic
   * versioning](http://semver.org) where the major version number
   * indicates a breaking change and the minor version an additive,
   * non-breaking change. Both version numbers are signals to users
   * what to expect from different versions, and should be carefully
   * chosen based on the product plan.
   * The major version is also reflected in the package name of the
   * interface, which must end in `v&lt;major-version&gt;`, as in
   * `google.feature.v1`. For major versions 0 and 1, the suffix can
   * be omitted. Zero major versions must only be used for
   * experimental, non-GA interfaces.
   * </pre>
   *
   * <code>optional string version = 4;</code>
   */
  public java.lang.String getVersion() {
    return version_;
  }
  /**
   * <pre>
   * A version string for this interface. If specified, must have the form
   * `major-version.minor-version`, as in `1.10`. If the minor version is
   * omitted, it defaults to zero. If the entire version field is empty, the
   * major version is derived from the package name, as outlined below. If the
   * field is not empty, the version in the package name will be verified to be
   * consistent with what is provided here.
   * The versioning schema uses [semantic
   * versioning](http://semver.org) where the major version number
   * indicates a breaking change and the minor version an additive,
   * non-breaking change. Both version numbers are signals to users
   * what to expect from different versions, and should be carefully
   * chosen based on the product plan.
   * The major version is also reflected in the package name of the
   * interface, which must end in `v&lt;major-version&gt;`, as in
   * `google.feature.v1`. For major versions 0 and 1, the suffix can
   * be omitted. Zero major versions must only be used for
   * experimental, non-GA interfaces.
   * </pre>
   *
   * <code>optional string version = 4;</code>
   */
  public com.google.protobuf.ByteString
      getVersionBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(version_);
  }
  /**
   * <pre>
   * A version string for this interface. If specified, must have the form
   * `major-version.minor-version`, as in `1.10`. If the minor version is
   * omitted, it defaults to zero. If the entire version field is empty, the
   * major version is derived from the package name, as outlined below. If the
   * field is not empty, the version in the package name will be verified to be
   * consistent with what is provided here.
   * The versioning schema uses [semantic
   * versioning](http://semver.org) where the major version number
   * indicates a breaking change and the minor version an additive,
   * non-breaking change. Both version numbers are signals to users
   * what to expect from different versions, and should be carefully
   * chosen based on the product plan.
   * The major version is also reflected in the package name of the
   * interface, which must end in `v&lt;major-version&gt;`, as in
   * `google.feature.v1`. For major versions 0 and 1, the suffix can
   * be omitted. Zero major versions must only be used for
   * experimental, non-GA interfaces.
   * </pre>
   *
   * <code>optional string version = 4;</code>
   */
  private void setVersion(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }

    version_ = value;
  }
  /**
   * <pre>
   * A version string for this interface. If specified, must have the form
   * `major-version.minor-version`, as in `1.10`. If the minor version is
   * omitted, it defaults to zero. If the entire version field is empty, the
   * major version is derived from the package name, as outlined below. If the
   * field is not empty, the version in the package name will be verified to be
   * consistent with what is provided here.
   * The versioning schema uses [semantic
   * versioning](http://semver.org) where the major version number
   * indicates a breaking change and the minor version an additive,
   * non-breaking change. Both version numbers are signals to users
   * what to expect from different versions, and should be carefully
   * chosen based on the product plan.
   * The major version is also reflected in the package name of the
   * interface, which must end in `v&lt;major-version&gt;`, as in
   * `google.feature.v1`. For major versions 0 and 1, the suffix can
   * be omitted. Zero major versions must only be used for
   * experimental, non-GA interfaces.
   * </pre>
   *
   * <code>optional string version = 4;</code>
   */
  private void clearVersion() {

    version_ = getDefaultInstance().getVersion();
  }
  /**
   * <pre>
   * A version string for this interface. If specified, must have the form
   * `major-version.minor-version`, as in `1.10`. If the minor version is
   * omitted, it defaults to zero. If the entire version field is empty, the
   * major version is derived from the package name, as outlined below. If the
   * field is not empty, the version in the package name will be verified to be
   * consistent with what is provided here.
   * The versioning schema uses [semantic
   * versioning](http://semver.org) where the major version number
   * indicates a breaking change and the minor version an additive,
   * non-breaking change. Both version numbers are signals to users
   * what to expect from different versions, and should be carefully
   * chosen based on the product plan.
   * The major version is also reflected in the package name of the
   * interface, which must end in `v&lt;major-version&gt;`, as in
   * `google.feature.v1`. For major versions 0 and 1, the suffix can
   * be omitted. Zero major versions must only be used for
   * experimental, non-GA interfaces.
   * </pre>
   *
   * <code>optional string version = 4;</code>
   */
  private void setVersionBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

    version_ = value.toStringUtf8();
  }

  public static final int SOURCE_CONTEXT_FIELD_NUMBER = 5;
  private com.google.protobuf.SourceContext sourceContext_;
  /**
   * <pre>
   * Source context for the protocol buffer service represented by this
   * message.
   * </pre>
   *
   * <code>optional .google.protobuf.SourceContext source_context = 5;</code>
   */
  public boolean hasSourceContext() {
    return sourceContext_ != null;
  }
  /**
   * <pre>
   * Source context for the protocol buffer service represented by this
   * message.
   * </pre>
   *
   * <code>optional .google.protobuf.SourceContext source_context = 5;</code>
   */
  public com.google.protobuf.SourceContext getSourceContext() {
    return sourceContext_ == null ? com.google.protobuf.SourceContext.getDefaultInstance() : sourceContext_;
  }
  /**
   * <pre>
   * Source context for the protocol buffer service represented by this
   * message.
   * </pre>
   *
   * <code>optional .google.protobuf.SourceContext source_context = 5;</code>
   */
  private void setSourceContext(com.google.protobuf.SourceContext value) {
    if (value == null) {
      throw new NullPointerException();
    }
    sourceContext_ = value;

    }
  /**
   * <pre>
   * Source context for the protocol buffer service represented by this
   * message.
   * </pre>
   *
   * <code>optional .google.protobuf.SourceContext source_context = 5;</code>
   */
  private void setSourceContext(
      com.google.protobuf.SourceContext.Builder builderForValue) {
    sourceContext_ = builderForValue.build();

  }
  /**
   * <pre>
   * Source context for the protocol buffer service represented by this
   * message.
   * </pre>
   *
   * <code>optional .google.protobuf.SourceContext source_context = 5;</code>
   */
  private void mergeSourceContext(com.google.protobuf.SourceContext value) {
    if (sourceContext_ != null &&
        sourceContext_ != com.google.protobuf.SourceContext.getDefaultInstance()) {
      sourceContext_ =
        com.google.protobuf.SourceContext.newBuilder(sourceContext_).mergeFrom(value).buildPartial();
    } else {
      sourceContext_ = value;
    }

  }
  /**
   * <pre>
   * Source context for the protocol buffer service represented by this
   * message.
   * </pre>
   *
   * <code>optional .google.protobuf.SourceContext source_context = 5;</code>
   */
  private void clearSourceContext() {  sourceContext_ = null;

  }

  public static final int MIXINS_FIELD_NUMBER = 6;
  private com.google.protobuf.Internal.ProtobufList<com.google.protobuf.Mixin> mixins_;
  /**
   * <pre>
   * Included interfaces. See [Mixin][].
   * </pre>
   *
   * <code>repeated .google.protobuf.Mixin mixins = 6;</code>
   */
  public java.util.List<com.google.protobuf.Mixin> getMixinsList() {
    return mixins_;
  }
  /**
   * <pre>
   * Included interfaces. See [Mixin][].
   * </pre>
   *
   * <code>repeated .google.protobuf.Mixin mixins = 6;</code>
   */
  public java.util.List<? extends com.google.protobuf.MixinOrBuilder>
      getMixinsOrBuilderList() {
    return mixins_;
  }
  /**
   * <pre>
   * Included interfaces. See [Mixin][].
   * </pre>
   *
   * <code>repeated .google.protobuf.Mixin mixins = 6;</code>
   */
  public int getMixinsCount() {
    return mixins_.size();
  }
  /**
   * <pre>
   * Included interfaces. See [Mixin][].
   * </pre>
   *
   * <code>repeated .google.protobuf.Mixin mixins = 6;</code>
   */
  public com.google.protobuf.Mixin getMixins(int index) {
    return mixins_.get(index);
  }
  /**
   * <pre>
   * Included interfaces. See [Mixin][].
   * </pre>
   *
   * <code>repeated .google.protobuf.Mixin mixins = 6;</code>
   */
  public com.google.protobuf.MixinOrBuilder getMixinsOrBuilder(
      int index) {
    return mixins_.get(index);
  }
  private void ensureMixinsIsMutable() {
    if (!mixins_.isModifiable()) {
      mixins_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(mixins_);
     }
  }

  /**
   * <pre>
   * Included interfaces. See [Mixin][].
   * </pre>
   *
   * <code>repeated .google.protobuf.Mixin mixins = 6;</code>
   */
  private void setMixins(
      int index, com.google.protobuf.Mixin value) {
    if (value == null) {
      throw new NullPointerException();
    }
    ensureMixinsIsMutable();
    mixins_.set(index, value);
  }
  /**
   * <pre>
   * Included interfaces. See [Mixin][].
   * </pre>
   *
   * <code>repeated .google.protobuf.Mixin mixins = 6;</code>
   */
  private void setMixins(
      int index, com.google.protobuf.Mixin.Builder builderForValue) {
    ensureMixinsIsMutable();
    mixins_.set(index, builderForValue.build());
  }
  /**
   * <pre>
   * Included interfaces. See [Mixin][].
   * </pre>
   *
   * <code>repeated .google.protobuf.Mixin mixins = 6;</code>
   */
  private void addMixins(com.google.protobuf.Mixin value) {
    if (value == null) {
      throw new NullPointerException();
    }
    ensureMixinsIsMutable();
    mixins_.add(value);
  }
  /**
   * <pre>
   * Included interfaces. See [Mixin][].
   * </pre>
   *
   * <code>repeated .google.protobuf.Mixin mixins = 6;</code>
   */
  private void addMixins(
      int index, com.google.protobuf.Mixin value) {
    if (value == null) {
      throw new NullPointerException();
    }
    ensureMixinsIsMutable();
    mixins_.add(index, value);
  }
  /**
   * <pre>
   * Included interfaces. See [Mixin][].
   * </pre>
   *
   * <code>repeated .google.protobuf.Mixin mixins = 6;</code>
   */
  private void addMixins(
      com.google.protobuf.Mixin.Builder builderForValue) {
    ensureMixinsIsMutable();
    mixins_.add(builderForValue.build());
  }
  /**
   * <pre>
   * Included interfaces. See [Mixin][].
   * </pre>
   *
   * <code>repeated .google.protobuf.Mixin mixins = 6;</code>
   */
  private void addMixins(
      int index, com.google.protobuf.Mixin.Builder builderForValue) {
    ensureMixinsIsMutable();
    mixins_.add(index, builderForValue.build());
  }
  /**
   * <pre>
   * Included interfaces. See [Mixin][].
   * </pre>
   *
   * <code>repeated .google.protobuf.Mixin mixins = 6;</code>
   */
  private void addAllMixins(
      java.lang.Iterable<? extends com.google.protobuf.Mixin> values) {
    ensureMixinsIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, mixins_);
  }
  /**
   * <pre>
   * Included interfaces. See [Mixin][].
   * </pre>
   *
   * <code>repeated .google.protobuf.Mixin mixins = 6;</code>
   */
  private void clearMixins() {
    mixins_ = emptyProtobufList();
  }
  /**
   * <pre>
   * Included interfaces. See [Mixin][].
   * </pre>
   *
   * <code>repeated .google.protobuf.Mixin mixins = 6;</code>
   */
  private void removeMixins(int index) {
    ensureMixinsIsMutable();
    mixins_.remove(index);
  }

  public static final int SYNTAX_FIELD_NUMBER = 7;
  private int syntax_;
  /**
   * <pre>
   * The source syntax of the service.
   * </pre>
   *
   * <code>optional .google.protobuf.Syntax syntax = 7;</code>
   */
  public int getSyntaxValue() {
    return syntax_;
  }
  /**
   * <pre>
   * The source syntax of the service.
   * </pre>
   *
   * <code>optional .google.protobuf.Syntax syntax = 7;</code>
   */
  public com.google.protobuf.Syntax getSyntax() {
    com.google.protobuf.Syntax result = com.google.protobuf.Syntax.forNumber(syntax_);
    return result == null ? com.google.protobuf.Syntax.UNRECOGNIZED : result;
  }
  /**
   * <pre>
   * The source syntax of the service.
   * </pre>
   *
   * <code>optional .google.protobuf.Syntax syntax = 7;</code>
   */
  private void setSyntaxValue(int value) {
      syntax_ = value;
  }
  /**
   * <pre>
   * The source syntax of the service.
   * </pre>
   *
   * <code>optional .google.protobuf.Syntax syntax = 7;</code>
   */
  private void setSyntax(com.google.protobuf.Syntax value) {
    if (value == null) {
      throw new NullPointerException();
    }

    syntax_ = value.getNumber();
  }
  /**
   * <pre>
   * The source syntax of the service.
   * </pre>
   *
   * <code>optional .google.protobuf.Syntax syntax = 7;</code>
   */
  private void clearSyntax() {

    syntax_ = 0;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!name_.isEmpty()) {
      output.writeString(1, getName());
    }
    for (int i = 0; i < methods_.size(); i++) {
      output.writeMessage(2, methods_.get(i));
    }
    for (int i = 0; i < options_.size(); i++) {
      output.writeMessage(3, options_.get(i));
    }
    if (!version_.isEmpty()) {
      output.writeString(4, getVersion());
    }
    if (sourceContext_ != null) {
      output.writeMessage(5, getSourceContext());
    }
    for (int i = 0; i < mixins_.size(); i++) {
      output.writeMessage(6, mixins_.get(i));
    }
    if (syntax_ != com.google.protobuf.Syntax.SYNTAX_PROTO2.getNumber()) {
      output.writeEnum(7, syntax_);
    }
  }

  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    if (!name_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(1, getName());
    }
    for (int i = 0; i < methods_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, methods_.get(i));
    }
    for (int i = 0; i < options_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, options_.get(i));
    }
    if (!version_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(4, getVersion());
    }
    if (sourceContext_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getSourceContext());
    }
    for (int i = 0; i < mixins_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, mixins_.get(i));
    }
    if (syntax_ != com.google.protobuf.Syntax.SYNTAX_PROTO2.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(7, syntax_);
    }
    memoizedSerializedSize = size;
    return size;
  }

  public static com.google.protobuf.Api parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.google.protobuf.Api parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.google.protobuf.Api parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.google.protobuf.Api parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.google.protobuf.Api parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.google.protobuf.Api parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.google.protobuf.Api parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static com.google.protobuf.Api parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.google.protobuf.Api parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.google.protobuf.Api parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.protobuf.Api prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  /**
   * <pre>
   * Api is a light-weight descriptor for an API Interface.
   * Interfaces are also described as "protocol buffer services" in some contexts,
   * such as by the "service" keyword in a .proto file, but they are different
   * from API Services, which represent a concrete implementation of an interface
   * as opposed to simply a description of methods and bindings. They are also
   * sometimes simply referred to as "APIs" in other contexts, such as the name of
   * this message itself. See https://cloud.google.com/apis/design/glossary for
   * detailed terminology.
   * </pre>
   *
   * Protobuf type {@code google.protobuf.Api}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        com.google.protobuf.Api, Builder> implements
      // @@protoc_insertion_point(builder_implements:google.protobuf.Api)
      com.google.protobuf.ApiOrBuilder {
    // Construct using com.google.protobuf.Api.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * The fully qualified name of this interface, including package name
     * followed by the interface's simple name.
     * </pre>
     *
     * <code>optional string name = 1;</code>
     */
    public java.lang.String getName() {
      return instance.getName();
    }
    /**
     * <pre>
     * The fully qualified name of this interface, including package name
     * followed by the interface's simple name.
     * </pre>
     *
     * <code>optional string name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      return instance.getNameBytes();
    }
    /**
     * <pre>
     * The fully qualified name of this interface, including package name
     * followed by the interface's simple name.
     * </pre>
     *
     * <code>optional string name = 1;</code>
     */
    public Builder setName(
        java.lang.String value) {
      copyOnWrite();
      instance.setName(value);
      return this;
    }
    /**
     * <pre>
     * The fully qualified name of this interface, including package name
     * followed by the interface's simple name.
     * </pre>
     *
     * <code>optional string name = 1;</code>
     */
    public Builder clearName() {
      copyOnWrite();
      instance.clearName();
      return this;
    }
    /**
     * <pre>
     * The fully qualified name of this interface, including package name
     * followed by the interface's simple name.
     * </pre>
     *
     * <code>optional string name = 1;</code>
     */
    public Builder setNameBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setNameBytes(value);
      return this;
    }

    /**
     * <pre>
     * The methods of this interface, in unspecified order.
     * </pre>
     *
     * <code>repeated .google.protobuf.Method methods = 2;</code>
     */
    public java.util.List<com.google.protobuf.Method> getMethodsList() {
      return java.util.Collections.unmodifiableList(
          instance.getMethodsList());
    }
    /**
     * <pre>
     * The methods of this interface, in unspecified order.
     * </pre>
     *
     * <code>repeated .google.protobuf.Method methods = 2;</code>
     */
    public int getMethodsCount() {
      return instance.getMethodsCount();
    }/**
     * <pre>
     * The methods of this interface, in unspecified order.
     * </pre>
     *
     * <code>repeated .google.protobuf.Method methods = 2;</code>
     */
    public com.google.protobuf.Method getMethods(int index) {
      return instance.getMethods(index);
    }
    /**
     * <pre>
     * The methods of this interface, in unspecified order.
     * </pre>
     *
     * <code>repeated .google.protobuf.Method methods = 2;</code>
     */
    public Builder setMethods(
        int index, com.google.protobuf.Method value) {
      copyOnWrite();
      instance.setMethods(index, value);
      return this;
    }
    /**
     * <pre>
     * The methods of this interface, in unspecified order.
     * </pre>
     *
     * <code>repeated .google.protobuf.Method methods = 2;</code>
     */
    public Builder setMethods(
        int index, com.google.protobuf.Method.Builder builderForValue) {
      copyOnWrite();
      instance.setMethods(index, builderForValue);
      return this;
    }
    /**
     * <pre>
     * The methods of this interface, in unspecified order.
     * </pre>
     *
     * <code>repeated .google.protobuf.Method methods = 2;</code>
     */
    public Builder addMethods(com.google.protobuf.Method value) {
      copyOnWrite();
      instance.addMethods(value);
      return this;
    }
    /**
     * <pre>
     * The methods of this interface, in unspecified order.
     * </pre>
     *
     * <code>repeated .google.protobuf.Method methods = 2;</code>
     */
    public Builder addMethods(
        int index, com.google.protobuf.Method value) {
      copyOnWrite();
      instance.addMethods(index, value);
      return this;
    }
    /**
     * <pre>
     * The methods of this interface, in unspecified order.
     * </pre>
     *
     * <code>repeated .google.protobuf.Method methods = 2;</code>
     */
    public Builder addMethods(
        com.google.protobuf.Method.Builder builderForValue) {
      copyOnWrite();
      instance.addMethods(builderForValue);
      return this;
    }
    /**
     * <pre>
     * The methods of this interface, in unspecified order.
     * </pre>
     *
     * <code>repeated .google.protobuf.Method methods = 2;</code>
     */
    public Builder addMethods(
        int index, com.google.protobuf.Method.Builder builderForValue) {
      copyOnWrite();
      instance.addMethods(index, builderForValue);
      return this;
    }
    /**
     * <pre>
     * The methods of this interface, in unspecified order.
     * </pre>
     *
     * <code>repeated .google.protobuf.Method methods = 2;</code>
     */
    public Builder addAllMethods(
        java.lang.Iterable<? extends com.google.protobuf.Method> values) {
      copyOnWrite();
      instance.addAllMethods(values);
      return this;
    }
    /**
     * <pre>
     * The methods of this interface, in unspecified order.
     * </pre>
     *
     * <code>repeated .google.protobuf.Method methods = 2;</code>
     */
    public Builder clearMethods() {
      copyOnWrite();
      instance.clearMethods();
      return this;
    }
    /**
     * <pre>
     * The methods of this interface, in unspecified order.
     * </pre>
     *
     * <code>repeated .google.protobuf.Method methods = 2;</code>
     */
    public Builder removeMethods(int index) {
      copyOnWrite();
      instance.removeMethods(index);
      return this;
    }

    /**
     * <pre>
     * Any metadata attached to the interface.
     * </pre>
     *
     * <code>repeated .google.protobuf.Option options = 3;</code>
     */
    public java.util.List<com.google.protobuf.Option> getOptionsList() {
      return java.util.Collections.unmodifiableList(
          instance.getOptionsList());
    }
    /**
     * <pre>
     * Any metadata attached to the interface.
     * </pre>
     *
     * <code>repeated .google.protobuf.Option options = 3;</code>
     */
    public int getOptionsCount() {
      return instance.getOptionsCount();
    }/**
     * <pre>
     * Any metadata attached to the interface.
     * </pre>
     *
     * <code>repeated .google.protobuf.Option options = 3;</code>
     */
    public com.google.protobuf.Option getOptions(int index) {
      return instance.getOptions(index);
    }
    /**
     * <pre>
     * Any metadata attached to the interface.
     * </pre>
     *
     * <code>repeated .google.protobuf.Option options = 3;</code>
     */
    public Builder setOptions(
        int index, com.google.protobuf.Option value) {
      copyOnWrite();
      instance.setOptions(index, value);
      return this;
    }
    /**
     * <pre>
     * Any metadata attached to the interface.
     * </pre>
     *
     * <code>repeated .google.protobuf.Option options = 3;</code>
     */
    public Builder setOptions(
        int index, com.google.protobuf.Option.Builder builderForValue) {
      copyOnWrite();
      instance.setOptions(index, builderForValue);
      return this;
    }
    /**
     * <pre>
     * Any metadata attached to the interface.
     * </pre>
     *
     * <code>repeated .google.protobuf.Option options = 3;</code>
     */
    public Builder addOptions(com.google.protobuf.Option value) {
      copyOnWrite();
      instance.addOptions(value);
      return this;
    }
    /**
     * <pre>
     * Any metadata attached to the interface.
     * </pre>
     *
     * <code>repeated .google.protobuf.Option options = 3;</code>
     */
    public Builder addOptions(
        int index, com.google.protobuf.Option value) {
      copyOnWrite();
      instance.addOptions(index, value);
      return this;
    }
    /**
     * <pre>
     * Any metadata attached to the interface.
     * </pre>
     *
     * <code>repeated .google.protobuf.Option options = 3;</code>
     */
    public Builder addOptions(
        com.google.protobuf.Option.Builder builderForValue) {
      copyOnWrite();
      instance.addOptions(builderForValue);
      return this;
    }
    /**
     * <pre>
     * Any metadata attached to the interface.
     * </pre>
     *
     * <code>repeated .google.protobuf.Option options = 3;</code>
     */
    public Builder addOptions(
        int index, com.google.protobuf.Option.Builder builderForValue) {
      copyOnWrite();
      instance.addOptions(index, builderForValue);
      return this;
    }
    /**
     * <pre>
     * Any metadata attached to the interface.
     * </pre>
     *
     * <code>repeated .google.protobuf.Option options = 3;</code>
     */
    public Builder addAllOptions(
        java.lang.Iterable<? extends com.google.protobuf.Option> values) {
      copyOnWrite();
      instance.addAllOptions(values);
      return this;
    }
    /**
     * <pre>
     * Any metadata attached to the interface.
     * </pre>
     *
     * <code>repeated .google.protobuf.Option options = 3;</code>
     */
    public Builder clearOptions() {
      copyOnWrite();
      instance.clearOptions();
      return this;
    }
    /**
     * <pre>
     * Any metadata attached to the interface.
     * </pre>
     *
     * <code>repeated .google.protobuf.Option options = 3;</code>
     */
    public Builder removeOptions(int index) {
      copyOnWrite();
      instance.removeOptions(index);
      return this;
    }

    /**
     * <pre>
     * A version string for this interface. If specified, must have the form
     * `major-version.minor-version`, as in `1.10`. If the minor version is
     * omitted, it defaults to zero. If the entire version field is empty, the
     * major version is derived from the package name, as outlined below. If the
     * field is not empty, the version in the package name will be verified to be
     * consistent with what is provided here.
     * The versioning schema uses [semantic
     * versioning](http://semver.org) where the major version number
     * indicates a breaking change and the minor version an additive,
     * non-breaking change. Both version numbers are signals to users
     * what to expect from different versions, and should be carefully
     * chosen based on the product plan.
     * The major version is also reflected in the package name of the
     * interface, which must end in `v&lt;major-version&gt;`, as in
     * `google.feature.v1`. For major versions 0 and 1, the suffix can
     * be omitted. Zero major versions must only be used for
     * experimental, non-GA interfaces.
     * </pre>
     *
     * <code>optional string version = 4;</code>
     */
    public java.lang.String getVersion() {
      return instance.getVersion();
    }
    /**
     * <pre>
     * A version string for this interface. If specified, must have the form
     * `major-version.minor-version`, as in `1.10`. If the minor version is
     * omitted, it defaults to zero. If the entire version field is empty, the
     * major version is derived from the package name, as outlined below. If the
     * field is not empty, the version in the package name will be verified to be
     * consistent with what is provided here.
     * The versioning schema uses [semantic
     * versioning](http://semver.org) where the major version number
     * indicates a breaking change and the minor version an additive,
     * non-breaking change. Both version numbers are signals to users
     * what to expect from different versions, and should be carefully
     * chosen based on the product plan.
     * The major version is also reflected in the package name of the
     * interface, which must end in `v&lt;major-version&gt;`, as in
     * `google.feature.v1`. For major versions 0 and 1, the suffix can
     * be omitted. Zero major versions must only be used for
     * experimental, non-GA interfaces.
     * </pre>
     *
     * <code>optional string version = 4;</code>
     */
    public com.google.protobuf.ByteString
        getVersionBytes() {
      return instance.getVersionBytes();
    }
    /**
     * <pre>
     * A version string for this interface. If specified, must have the form
     * `major-version.minor-version`, as in `1.10`. If the minor version is
     * omitted, it defaults to zero. If the entire version field is empty, the
     * major version is derived from the package name, as outlined below. If the
     * field is not empty, the version in the package name will be verified to be
     * consistent with what is provided here.
     * The versioning schema uses [semantic
     * versioning](http://semver.org) where the major version number
     * indicates a breaking change and the minor version an additive,
     * non-breaking change. Both version numbers are signals to users
     * what to expect from different versions, and should be carefully
     * chosen based on the product plan.
     * The major version is also reflected in the package name of the
     * interface, which must end in `v&lt;major-version&gt;`, as in
     * `google.feature.v1`. For major versions 0 and 1, the suffix can
     * be omitted. Zero major versions must only be used for
     * experimental, non-GA interfaces.
     * </pre>
     *
     * <code>optional string version = 4;</code>
     */
    public Builder setVersion(
        java.lang.String value) {
      copyOnWrite();
      instance.setVersion(value);
      return this;
    }
    /**
     * <pre>
     * A version string for this interface. If specified, must have the form
     * `major-version.minor-version`, as in `1.10`. If the minor version is
     * omitted, it defaults to zero. If the entire version field is empty, the
     * major version is derived from the package name, as outlined below. If the
     * field is not empty, the version in the package name will be verified to be
     * consistent with what is provided here.
     * The versioning schema uses [semantic
     * versioning](http://semver.org) where the major version number
     * indicates a breaking change and the minor version an additive,
     * non-breaking change. Both version numbers are signals to users
     * what to expect from different versions, and should be carefully
     * chosen based on the product plan.
     * The major version is also reflected in the package name of the
     * interface, which must end in `v&lt;major-version&gt;`, as in
     * `google.feature.v1`. For major versions 0 and 1, the suffix can
     * be omitted. Zero major versions must only be used for
     * experimental, non-GA interfaces.
     * </pre>
     *
     * <code>optional string version = 4;</code>
     */
    public Builder clearVersion() {
      copyOnWrite();
      instance.clearVersion();
      return this;
    }
    /**
     * <pre>
     * A version string for this interface. If specified, must have the form
     * `major-version.minor-version`, as in `1.10`. If the minor version is
     * omitted, it defaults to zero. If the entire version field is empty, the
     * major version is derived from the package name, as outlined below. If the
     * field is not empty, the version in the package name will be verified to be
     * consistent with what is provided here.
     * The versioning schema uses [semantic
     * versioning](http://semver.org) where the major version number
     * indicates a breaking change and the minor version an additive,
     * non-breaking change. Both version numbers are signals to users
     * what to expect from different versions, and should be carefully
     * chosen based on the product plan.
     * The major version is also reflected in the package name of the
     * interface, which must end in `v&lt;major-version&gt;`, as in
     * `google.feature.v1`. For major versions 0 and 1, the suffix can
     * be omitted. Zero major versions must only be used for
     * experimental, non-GA interfaces.
     * </pre>
     *
     * <code>optional string version = 4;</code>
     */
    public Builder setVersionBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setVersionBytes(value);
      return this;
    }

    /**
     * <pre>
     * Source context for the protocol buffer service represented by this
     * message.
     * </pre>
     *
     * <code>optional .google.protobuf.SourceContext source_context = 5;</code>
     */
    public boolean hasSourceContext() {
      return instance.hasSourceContext();
    }
    /**
     * <pre>
     * Source context for the protocol buffer service represented by this
     * message.
     * </pre>
     *
     * <code>optional .google.protobuf.SourceContext source_context = 5;</code>
     */
    public com.google.protobuf.SourceContext getSourceContext() {
      return instance.getSourceContext();
    }
    /**
     * <pre>
     * Source context for the protocol buffer service represented by this
     * message.
     * </pre>
     *
     * <code>optional .google.protobuf.SourceContext source_context = 5;</code>
     */
    public Builder setSourceContext(com.google.protobuf.SourceContext value) {
      copyOnWrite();
      instance.setSourceContext(value);
      return this;
      }
    /**
     * <pre>
     * Source context for the protocol buffer service represented by this
     * message.
     * </pre>
     *
     * <code>optional .google.protobuf.SourceContext source_context = 5;</code>
     */
    public Builder setSourceContext(
        com.google.protobuf.SourceContext.Builder builderForValue) {
      copyOnWrite();
      instance.setSourceContext(builderForValue);
      return this;
    }
    /**
     * <pre>
     * Source context for the protocol buffer service represented by this
     * message.
     * </pre>
     *
     * <code>optional .google.protobuf.SourceContext source_context = 5;</code>
     */
    public Builder mergeSourceContext(com.google.protobuf.SourceContext value) {
      copyOnWrite();
      instance.mergeSourceContext(value);
      return this;
    }
    /**
     * <pre>
     * Source context for the protocol buffer service represented by this
     * message.
     * </pre>
     *
     * <code>optional .google.protobuf.SourceContext source_context = 5;</code>
     */
    public Builder clearSourceContext() {  copyOnWrite();
      instance.clearSourceContext();
      return this;
    }

    /**
     * <pre>
     * Included interfaces. See [Mixin][].
     * </pre>
     *
     * <code>repeated .google.protobuf.Mixin mixins = 6;</code>
     */
    public java.util.List<com.google.protobuf.Mixin> getMixinsList() {
      return java.util.Collections.unmodifiableList(
          instance.getMixinsList());
    }
    /**
     * <pre>
     * Included interfaces. See [Mixin][].
     * </pre>
     *
     * <code>repeated .google.protobuf.Mixin mixins = 6;</code>
     */
    public int getMixinsCount() {
      return instance.getMixinsCount();
    }/**
     * <pre>
     * Included interfaces. See [Mixin][].
     * </pre>
     *
     * <code>repeated .google.protobuf.Mixin mixins = 6;</code>
     */
    public com.google.protobuf.Mixin getMixins(int index) {
      return instance.getMixins(index);
    }
    /**
     * <pre>
     * Included interfaces. See [Mixin][].
     * </pre>
     *
     * <code>repeated .google.protobuf.Mixin mixins = 6;</code>
     */
    public Builder setMixins(
        int index, com.google.protobuf.Mixin value) {
      copyOnWrite();
      instance.setMixins(index, value);
      return this;
    }
    /**
     * <pre>
     * Included interfaces. See [Mixin][].
     * </pre>
     *
     * <code>repeated .google.protobuf.Mixin mixins = 6;</code>
     */
    public Builder setMixins(
        int index, com.google.protobuf.Mixin.Builder builderForValue) {
      copyOnWrite();
      instance.setMixins(index, builderForValue);
      return this;
    }
    /**
     * <pre>
     * Included interfaces. See [Mixin][].
     * </pre>
     *
     * <code>repeated .google.protobuf.Mixin mixins = 6;</code>
     */
    public Builder addMixins(com.google.protobuf.Mixin value) {
      copyOnWrite();
      instance.addMixins(value);
      return this;
    }
    /**
     * <pre>
     * Included interfaces. See [Mixin][].
     * </pre>
     *
     * <code>repeated .google.protobuf.Mixin mixins = 6;</code>
     */
    public Builder addMixins(
        int index, com.google.protobuf.Mixin value) {
      copyOnWrite();
      instance.addMixins(index, value);
      return this;
    }
    /**
     * <pre>
     * Included interfaces. See [Mixin][].
     * </pre>
     *
     * <code>repeated .google.protobuf.Mixin mixins = 6;</code>
     */
    public Builder addMixins(
        com.google.protobuf.Mixin.Builder builderForValue) {
      copyOnWrite();
      instance.addMixins(builderForValue);
      return this;
    }
    /**
     * <pre>
     * Included interfaces. See [Mixin][].
     * </pre>
     *
     * <code>repeated .google.protobuf.Mixin mixins = 6;</code>
     */
    public Builder addMixins(
        int index, com.google.protobuf.Mixin.Builder builderForValue) {
      copyOnWrite();
      instance.addMixins(index, builderForValue);
      return this;
    }
    /**
     * <pre>
     * Included interfaces. See [Mixin][].
     * </pre>
     *
     * <code>repeated .google.protobuf.Mixin mixins = 6;</code>
     */
    public Builder addAllMixins(
        java.lang.Iterable<? extends com.google.protobuf.Mixin> values) {
      copyOnWrite();
      instance.addAllMixins(values);
      return this;
    }
    /**
     * <pre>
     * Included interfaces. See [Mixin][].
     * </pre>
     *
     * <code>repeated .google.protobuf.Mixin mixins = 6;</code>
     */
    public Builder clearMixins() {
      copyOnWrite();
      instance.clearMixins();
      return this;
    }
    /**
     * <pre>
     * Included interfaces. See [Mixin][].
     * </pre>
     *
     * <code>repeated .google.protobuf.Mixin mixins = 6;</code>
     */
    public Builder removeMixins(int index) {
      copyOnWrite();
      instance.removeMixins(index);
      return this;
    }

    /**
     * <pre>
     * The source syntax of the service.
     * </pre>
     *
     * <code>optional .google.protobuf.Syntax syntax = 7;</code>
     */
    public int getSyntaxValue() {
      return instance.getSyntaxValue();
    }
    /**
     * <pre>
     * The source syntax of the service.
     * </pre>
     *
     * <code>optional .google.protobuf.Syntax syntax = 7;</code>
     */
    public Builder setSyntaxValue(int value) {
      copyOnWrite();
      instance.setSyntaxValue(value);
      return this;
    }
    /**
     * <pre>
     * The source syntax of the service.
     * </pre>
     *
     * <code>optional .google.protobuf.Syntax syntax = 7;</code>
     */
    public com.google.protobuf.Syntax getSyntax() {
      return instance.getSyntax();
    }
    /**
     * <pre>
     * The source syntax of the service.
     * </pre>
     *
     * <code>optional .google.protobuf.Syntax syntax = 7;</code>
     */
    public Builder setSyntax(com.google.protobuf.Syntax value) {
      copyOnWrite();
      instance.setSyntax(value);
      return this;
    }
    /**
     * <pre>
     * The source syntax of the service.
     * </pre>
     *
     * <code>optional .google.protobuf.Syntax syntax = 7;</code>
     */
    public Builder clearSyntax() {
      copyOnWrite();
      instance.clearSyntax();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:google.protobuf.Api)
  }
  protected final Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      Object arg0, Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new com.google.protobuf.Api();
      }
      case IS_INITIALIZED: {
        return DEFAULT_INSTANCE;
      }
      case MAKE_IMMUTABLE: {
        methods_.makeImmutable();
        options_.makeImmutable();
        mixins_.makeImmutable();
        return null;
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case VISIT: {
        Visitor visitor = (Visitor) arg0;
        com.google.protobuf.Api other = (com.google.protobuf.Api) arg1;
        name_ = visitor.visitString(!name_.isEmpty(), name_,
            !other.name_.isEmpty(), other.name_);
        methods_= visitor.visitList(methods_, other.methods_);
        options_= visitor.visitList(options_, other.options_);
        version_ = visitor.visitString(!version_.isEmpty(), version_,
            !other.version_.isEmpty(), other.version_);
        sourceContext_ = visitor.visitMessage(sourceContext_, other.sourceContext_);
        mixins_= visitor.visitList(mixins_, other.mixins_);
        syntax_ = visitor.visitInt(syntax_ != 0, syntax_,    other.syntax_ != 0, other.syntax_);
        if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
            .INSTANCE) {
          bitField0_ |= other.bitField0_;
        }
        return this;
      }
      case MERGE_FROM_STREAM: {
        com.google.protobuf.CodedInputStream input =
            (com.google.protobuf.CodedInputStream) arg0;
        com.google.protobuf.ExtensionRegistryLite extensionRegistry =
            (com.google.protobuf.ExtensionRegistryLite) arg1;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                String s = input.readStringRequireUtf8();

                name_ = s;
                break;
              }
              case 18: {
                if (!methods_.isModifiable()) {
                  methods_ =
                      com.google.protobuf.GeneratedMessageLite.mutableCopy(methods_);
                }
                methods_.add(
                    input.readMessage(com.google.protobuf.Method.parser(), extensionRegistry));
                break;
              }
              case 26: {
                if (!options_.isModifiable()) {
                  options_ =
                      com.google.protobuf.GeneratedMessageLite.mutableCopy(options_);
                }
                options_.add(
                    input.readMessage(com.google.protobuf.Option.parser(), extensionRegistry));
                break;
              }
              case 34: {
                String s = input.readStringRequireUtf8();

                version_ = s;
                break;
              }
              case 42: {
                com.google.protobuf.SourceContext.Builder subBuilder = null;
                if (sourceContext_ != null) {
                  subBuilder = sourceContext_.toBuilder();
                }
                sourceContext_ = input.readMessage(com.google.protobuf.SourceContext.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(sourceContext_);
                  sourceContext_ = subBuilder.buildPartial();
                }

                break;
              }
              case 50: {
                if (!mixins_.isModifiable()) {
                  mixins_ =
                      com.google.protobuf.GeneratedMessageLite.mutableCopy(mixins_);
                }
                mixins_.add(
                    input.readMessage(com.google.protobuf.Mixin.parser(), extensionRegistry));
                break;
              }
              case 56: {
                int rawValue = input.readEnum();

                syntax_ = rawValue;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
        }
      }
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        if (PARSER == null) {    synchronized (com.google.protobuf.Api.class) {
            if (PARSER == null) {
              PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
            }
          }
        }
        return PARSER;
      }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:google.protobuf.Api)
  private static final com.google.protobuf.Api DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new Api();
    DEFAULT_INSTANCE.makeImmutable();
  }

  public static com.google.protobuf.Api getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<Api> PARSER;

  public static com.google.protobuf.Parser<Api> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}
